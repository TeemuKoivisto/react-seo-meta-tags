{"version":3,"file":"force-css-hmr-for-edge-cases.js","names":["ForceCssHMRForEdgeCases","hackCounter","previouslySeenCss","Set","constructor","name","apply","compiler","hooks","thisCompilation","tap","compilation","fullHash","chunkGraph","records","chunkModuleHashes","seenCssInThisCompilation","cssRemovedInThisCompilation","newOrUpdatedCss","chunk","chunks","getModuleHash","module","codeGenerationResults","has","runtime","getHash","modules","getChunkModulesIterable","undefined","key","id","identifier","originalBlankCssHash","rawRequest","blankCssKey","isUsingMiniCssExtract","loaders","find","loader","includes","add","delete","hash","size","String"],"sources":["../../../../src/utils/webpack/plugins/force-css-hmr-for-edge-cases.ts"],"sourcesContent":["import { Compiler, Module } from \"webpack\"\n\n/**\n * This is total hack that is meant to handle:\n *  - https://github.com/webpack-contrib/mini-css-extract-plugin/issues/706\n *  - https://github.com/webpack-contrib/mini-css-extract-plugin/issues/708\n * The way it works it is looking up what HotModuleReplacementPlugin checks internally\n * and tricks it by checking up if any modules that uses mini-css-extract-plugin\n * changed or was newly added and then modifying blank.css hash.\n * blank.css is css module that is used by all pages and is there from the start\n * so changing hash of that _should_ ensure that:\n *  - when new css is imported it will reload css\n *  - when css imported by not loaded (by runtime) page template changes it will reload css\n */\nexport class ForceCssHMRForEdgeCases {\n  private name: string\n  private originalBlankCssHash: string | undefined\n  private blankCssKey: string | undefined\n  private hackCounter = 0\n  private previouslySeenCss: Set<string> = new Set<string>()\n\n  constructor() {\n    this.name = `ForceCssHMRForEdgeCases`\n  }\n\n  apply(compiler: Compiler): void {\n    compiler.hooks.thisCompilation.tap(this.name, compilation => {\n      compilation.hooks.fullHash.tap(this.name, () => {\n        const chunkGraph = compilation.chunkGraph\n        const records = compilation.records\n\n        if (!records.chunkModuleHashes) {\n          return\n        }\n\n        const seenCssInThisCompilation = new Set<string>()\n        /**\n         * We will get list of css modules that are removed in this compilation\n         * by starting with list of css used in last compilation and removing\n         * all modules that are used in this one.\n         */\n        const cssRemovedInThisCompilation = this.previouslySeenCss\n\n        let newOrUpdatedCss = false\n\n        for (const chunk of compilation.chunks) {\n          const getModuleHash = (module: Module): string => {\n            if (compilation.codeGenerationResults.has(module, chunk.runtime)) {\n              return compilation.codeGenerationResults.getHash(\n                module,\n                chunk.runtime\n              )\n            } else {\n              return chunkGraph.getModuleHash(module, chunk.runtime)\n            }\n          }\n\n          const modules = chunkGraph.getChunkModulesIterable(chunk)\n\n          if (modules !== undefined) {\n            for (const module of modules) {\n              const key = `${chunk.id}|${module.identifier()}`\n\n              if (\n                !this.originalBlankCssHash &&\n                // @ts-ignore - exists on NormalModule but not Module\n                module.rawRequest === `./blank.css`\n              ) {\n                this.blankCssKey = key\n                this.originalBlankCssHash =\n                  records.chunkModuleHashes[this.blankCssKey]\n              }\n\n              // @ts-ignore - exists on NormalModule but not Module\n              const isUsingMiniCssExtract = module.loaders?.find(loader =>\n                loader?.loader?.includes(`mini-css-extract-plugin`)\n              )\n\n              if (isUsingMiniCssExtract) {\n                seenCssInThisCompilation.add(key)\n                cssRemovedInThisCompilation.delete(key)\n\n                const hash = getModuleHash(module)\n                if (records.chunkModuleHashes[key] !== hash) {\n                  newOrUpdatedCss = true\n                }\n              }\n            }\n          }\n        }\n\n        // If css file was edited or new css import was added (`newOrUpdatedCss`)\n        // or if css import was removed (`cssRemovedInThisCompilation.size > 0`)\n        // trick Webpack's HMR into thinking `blank.css` file changed.\n        if (\n          (newOrUpdatedCss || cssRemovedInThisCompilation.size > 0) &&\n          this.originalBlankCssHash &&\n          this.blankCssKey\n        ) {\n          records.chunkModuleHashes[this.blankCssKey] =\n            this.originalBlankCssHash + String(this.hackCounter++)\n        }\n\n        this.previouslySeenCss = seenCssInThisCompilation\n      })\n    })\n  }\n}\n"],"mappings":"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"}