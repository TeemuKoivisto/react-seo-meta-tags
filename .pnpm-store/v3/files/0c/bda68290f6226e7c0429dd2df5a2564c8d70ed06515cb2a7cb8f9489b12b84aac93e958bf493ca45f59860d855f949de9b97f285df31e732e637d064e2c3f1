{"version":3,"file":"parse-error.js","names":["getPosition","stackObject","filename","line","column","stackLine","splitLine","match","Number","err","parseError","directory","componentPath","htmlComponentRendererPath","createErrorFromString","stack","split","position","relativeFileName","startsWith","substring","sysPath","join","fs","existsSync","projectName","readJsonSync","name","sep","length","e","sourceContent","readFileSync","trueFileName","includes","slash","relative","message"],"sources":["../../../src/utils/dev-ssr/parse-error.ts"],"sourcesContent":["import { createErrorFromString } from \"gatsby-cli/lib/reporter/errors\"\nimport * as sysPath from \"path\"\nimport * as fs from \"fs-extra\"\nimport { slash } from \"gatsby-core-utils/path\"\n\nconst getPosition = function (stackObject: Array<string>): {\n  filename: string\n  line: number\n  column: number\n} {\n  let filename = ``\n  let line = 0\n  let column = 0\n  // Because the JavaScript error stack has not yet been standardized,\n  // wrap the stack parsing in a try/catch for a soft fail if an\n  // unexpected stack is encountered.\n  try {\n    for (const stackLine of stackObject) {\n      {\n        // testing for following format:\n        // \"    at Component (/Users/misiek/dev/gatsby/integration-tests/ssr/.cache/page-ssr/routes/render-page.js:4088:13)\"\n        const splitLine = stackLine.match(/(?:\\()(.+):([0-9]+):([0-9]+)(?:\\))$/)\n        if (splitLine) {\n          filename = splitLine[1]\n          line = Number(splitLine[2])\n          column = Number(splitLine[3])\n          break\n        }\n      }\n\n      {\n        // testing for following format:\n        // \"    at ssr/src/pages/bad-page.js:4:13\"\n        const splitLine = stackLine.match(/at (.+):([0-9]+):([0-9]+)$/)\n        if (splitLine) {\n          filename = splitLine[1]\n          line = Number(splitLine[2])\n          column = Number(splitLine[3])\n          break\n        }\n      }\n\n      {\n        // trying to extract generic:\n        // \"<filepath>:<line>:<column>\"\n        const splitLine = stackLine.match(/(.+):([0-9]+):([0-9]+)/)\n        if (splitLine) {\n          filename = splitLine[1]\n          line = Number(splitLine[2])\n          column = Number(splitLine[3])\n          break\n        }\n      }\n    }\n  } catch (err) {\n    filename = ``\n    line = 0\n    column = 0\n  }\n  return {\n    filename,\n    line,\n    column,\n  }\n}\n\nexport interface IParsedError {\n  filename: string\n  sourceContent: string\n  message: string\n  stack: string\n  line: number\n  column: number\n}\n\nexport interface IErrorRenderMeta {\n  codeFrame: string\n  source: string\n  line: number\n  column: number\n  sourceMessage?: string\n  stack?: string\n}\n\n// Code borrowed and modified from https://github.com/watilde/parse-error\nexport const parseError = function ({\n  err,\n  directory,\n  componentPath,\n  htmlComponentRendererPath,\n}: {\n  err: Error\n  directory: string\n  componentPath: string\n  htmlComponentRendererPath: string\n}): IParsedError {\n  // convert stack trace to use source file locations and not compiled ones\n  err = createErrorFromString(err, `${htmlComponentRendererPath}.map`)\n\n  const stack = err.stack ? err.stack : ``\n  const stackObject = stack.split(`\\n`)\n  const position = getPosition(stackObject)\n\n  let relativeFileName = position.filename\n  while (relativeFileName.startsWith(`/`)) {\n    relativeFileName = relativeFileName.substring(1)\n  }\n\n  let filename = sysPath.join(directory, relativeFileName)\n\n  // webpack tends to inject project name as first segment in stack traces\n  // so the filename / relativeFileName might not be correct - so we are checking\n  // if it points to existing file and try to remove project name if it's first segment\n  if (!fs.existsSync(filename)) {\n    try {\n      const projectName = fs.readJsonSync(\n        sysPath.join(directory, `package.json`),\n        `utf8`\n      ).name\n\n      if (relativeFileName.startsWith(projectName + sysPath.sep)) {\n        relativeFileName = relativeFileName.substring(\n          (projectName + sysPath.sep).length\n        )\n      }\n\n      filename = sysPath.join(directory, relativeFileName)\n    } catch (e) {\n      // nothing more we can do here\n    }\n  }\n\n  let sourceContent\n  try {\n    sourceContent = fs.readFileSync(filename, `utf-8`)\n  } catch (e) {\n    sourceContent = null\n  }\n\n  // We prefer the file path from the stack trace as the error might not be in the\n  // component â€” but if source-maps fail and we just get public/render-page.js as\n  // the file, we fall back on the component filepath as at least the user\n  // will have that.\n  const trueFileName = filename.includes(`render-page`)\n    ? componentPath\n    : filename\n\n  return {\n    filename: slash(sysPath.relative(directory, trueFileName)),\n    sourceContent,\n    message: err.message,\n    stack: stack,\n    line: position.line,\n    column: position.column,\n  }\n}\n"],"mappings":"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"}