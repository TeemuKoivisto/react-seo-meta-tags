{"version":3,"file":"gatsby-node.js","names":["moment","require","chokidar","systemPath","_","emitter","store","actions","getNode","findCompiledLocalPluginModule","transformPackageJson","json","transformDeps","deps","entries","map","name","version","pick","dependencies","devDependencies","peerDependencies","optionalDependecies","bundledDependecies","createPageId","path","exports","sourceNodes","createContentDigest","getNodesByType","createNode","deleteNode","program","flattenedPlugins","config","getState","forEach","plugin","pluginFilepath","resolve","packageJson","parent","children","internal","contentDigest","type","createGatsbyConfigNode","configCopy","plugins","node","siteMetadata","port","host","id","buildTime","subtract","process","uptime","startOf","toJSON","metadataNode","pathToGatsbyConfig","directory","join","watchConfig","functions","createFunctionNode","absoluteCompiledFilePath","on","action","existingNodes","newFunctionsSet","Set","payload","add","toBeDeleted","filter","has","watch","oldCache","cache","e","undefined","createResolvers","resolvers","Site","source","args","context","info","nodeModel","getNodeById","originalResolver","nodeId","dispatch"],"sources":["../../../src/internal-plugins/internal-data-bridge/gatsby-node.js"],"sourcesContent":["const moment = require(`moment`)\nconst chokidar = require(`chokidar`)\nconst systemPath = require(`path`)\nconst _ = require(`lodash`)\n\nconst { emitter, store } = require(`../../redux`)\nconst { actions } = require(`../../redux/actions`)\nconst { getNode } = require(`../../datastore`)\nconst {\n  findCompiledLocalPluginModule,\n} = require(`../../utils/parcel/compile-gatsby-files`)\n\nfunction transformPackageJson(json) {\n  const transformDeps = deps =>\n    _.entries(deps).map(([name, version]) => {\n      return {\n        name,\n        version,\n      }\n    })\n\n  json = _.pick(json, [\n    `name`,\n    `description`,\n    `version`,\n    `main`,\n    `keywords`,\n    `author`,\n    `license`,\n    `dependencies`,\n    `devDependencies`,\n    `peerDependencies`,\n    `optionalDependecies`,\n    `bundledDependecies`,\n  ])\n  json.dependencies = transformDeps(json.dependencies)\n  json.devDependencies = transformDeps(json.devDependencies)\n  json.peerDependencies = transformDeps(json.peerDependencies)\n  json.optionalDependecies = transformDeps(json.optionalDependecies)\n  json.bundledDependecies = transformDeps(json.bundledDependecies)\n\n  return json\n}\n\nconst createPageId = path => `SitePage ${path}`\n\nexports.sourceNodes = ({\n  createContentDigest,\n  getNodesByType,\n  actions,\n  store,\n}) => {\n  const { createNode, deleteNode } = actions\n  const { program, flattenedPlugins, config } = store.getState()\n\n  flattenedPlugins.forEach(plugin => {\n    plugin.pluginFilepath = plugin.resolve\n\n    createNode({\n      ...plugin,\n      packageJson: transformPackageJson(\n        require(`${plugin.resolve}/package.json`)\n      ),\n      parent: null,\n      children: [],\n      internal: {\n        contentDigest: createContentDigest(plugin),\n        type: `SitePlugin`,\n      },\n    })\n  })\n\n  // Add site node.\n\n  const createGatsbyConfigNode = (config = {}) => {\n    // Delete plugins from the config as we add plugins above.\n    const configCopy = { ...config }\n    delete configCopy.plugins\n    const node = {\n      siteMetadata: {\n        ...configCopy.siteMetadata,\n      },\n      port: program.port,\n      host: program.host,\n      ...configCopy,\n    }\n    createNode({\n      ...node,\n      id: `Site`,\n      parent: null,\n      children: [],\n      internal: {\n        contentDigest: createContentDigest(node),\n        type: `Site`,\n      },\n    })\n  }\n\n  createGatsbyConfigNode(config)\n\n  const buildTime = moment()\n    .subtract(process.uptime(), `seconds`)\n    .startOf(`second`)\n    .toJSON()\n\n  const metadataNode = { buildTime }\n\n  createNode({\n    ...metadataNode,\n    id: `SiteBuildMetadata`,\n    parent: null,\n    children: [],\n    internal: {\n      contentDigest: createContentDigest(metadataNode),\n      type: `SiteBuildMetadata`,\n    },\n  })\n\n  const pathToGatsbyConfig =\n    findCompiledLocalPluginModule(\n      program.directory,\n      `default-site-plugin`,\n      `gatsby-config`\n    ) ?? systemPath.join(program.directory, `gatsby-config.js`)\n  watchConfig(pathToGatsbyConfig, createGatsbyConfigNode)\n\n  // Create nodes for functions\n  const { functions } = store.getState()\n  const createFunctionNode = config => {\n    createNode({\n      id: `gatsby-function-${config.absoluteCompiledFilePath}`,\n      ...config,\n      parent: null,\n      children: [],\n      internal: {\n        contentDigest: createContentDigest(config),\n        type: `SiteFunction`,\n      },\n    })\n  }\n  functions.forEach(config => {\n    createFunctionNode(config)\n  })\n\n  // Listen for updates to functions to update the nodes.\n  emitter.on(`SET_SITE_FUNCTIONS`, action => {\n    // Identify any now deleted functions and remove their nodes.\n    const existingNodes = getNodesByType(`SiteFunction`)\n    const newFunctionsSet = new Set()\n    action.payload.forEach(config =>\n      newFunctionsSet.add(`gatsby-function-${config.absoluteCompiledFilePath}`)\n    )\n    const toBeDeleted = existingNodes.filter(\n      node => !newFunctionsSet.has(node.id)\n    )\n    toBeDeleted.forEach(node => deleteNode(node))\n\n    action.payload.forEach(config => {\n      createFunctionNode(config)\n    })\n  })\n}\n\nfunction watchConfig(pathToGatsbyConfig, createGatsbyConfigNode) {\n  chokidar.watch(pathToGatsbyConfig).on(`change`, () => {\n    const oldCache = require.cache[require.resolve(pathToGatsbyConfig)]\n    try {\n      // Delete require cache so we can reload the module.\n      delete require.cache[require.resolve(pathToGatsbyConfig)]\n      const config = require(pathToGatsbyConfig)\n      createGatsbyConfigNode(config)\n    } catch (e) {\n      // Restore the old cache since requiring the new gatsby-config.js failed.\n      if (oldCache !== undefined) {\n        require.cache[require.resolve(pathToGatsbyConfig)] = oldCache\n      }\n    }\n  })\n}\n\nexports.createResolvers = ({ createResolvers }) => {\n  const resolvers = {\n    Site: {\n      buildTime: {\n        type: `Date`,\n        resolve(source, args, context, info) {\n          const { buildTime } = context.nodeModel.getNodeById({\n            id: `SiteBuildMetadata`,\n            type: `SiteBuildMetadata`,\n          })\n          return info.originalResolver(\n            {\n              ...source,\n              buildTime,\n            },\n            args,\n            context,\n            info\n          )\n        },\n      },\n    },\n  }\n\n  createResolvers(resolvers)\n}\n\n// Listen for DELETE_PAGE and delete page nodes.\nemitter.on(`DELETE_PAGE`, action => {\n  const nodeId = createPageId(action.payload.path)\n  const node = getNode(nodeId)\n  store.dispatch(actions.deleteNode(node))\n})\n"],"mappings":"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"}