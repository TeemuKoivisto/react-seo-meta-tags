{"version":3,"file":"inline-slice.js","names":["InlineSlice","sliceName","allowEmpty","children","sliceProps","slicesMap","useContext","SlicesMapContext","slicesResultsMap","SlicesResultsContext","concreteSliceName","slice","get","Error","sliceContext","data"],"sources":["../../slice/inline-slice.js"],"sourcesContent":["import React, { useContext } from \"react\"\nimport { SlicesMapContext, SlicesResultsContext } from \"./context\"\n\nexport const InlineSlice = ({\n  sliceName,\n  allowEmpty,\n  children,\n  ...sliceProps\n}) => {\n  const slicesMap = useContext(SlicesMapContext)\n  const slicesResultsMap = useContext(SlicesResultsContext)\n  const concreteSliceName = slicesMap[sliceName]\n  const slice = slicesResultsMap.get(concreteSliceName)\n\n  if (!slice) {\n    if (allowEmpty) {\n      return null\n    } else {\n      throw new Error(\n        `Slice \"${concreteSliceName}\" for \"${sliceName}\" slot not found`\n      )\n    }\n  }\n\n  return (\n    <slice.component\n      sliceContext={slice.sliceContext}\n      data={slice.data}\n      {...sliceProps}\n    >\n      {children}\n    </slice.component>\n  )\n}\n"],"mappings":";;;;;;AAAA;AACA;AAAkE;AAAA;AAE3D,MAAMA,WAAW,GAAG,CAAC;EAC1BC,SAAS;EACTC,UAAU;EACVC,QAAQ;EACR,GAAGC;AACL,CAAC,KAAK;EACJ,MAAMC,SAAS,GAAG,IAAAC,iBAAU,EAACC,yBAAgB,CAAC;EAC9C,MAAMC,gBAAgB,GAAG,IAAAF,iBAAU,EAACG,6BAAoB,CAAC;EACzD,MAAMC,iBAAiB,GAAGL,SAAS,CAACJ,SAAS,CAAC;EAC9C,MAAMU,KAAK,GAAGH,gBAAgB,CAACI,GAAG,CAACF,iBAAiB,CAAC;EAErD,IAAI,CAACC,KAAK,EAAE;IACV,IAAIT,UAAU,EAAE;MACd,OAAO,IAAI;IACb,CAAC,MAAM;MACL,MAAM,IAAIW,KAAK,CACZ,UAASH,iBAAkB,UAAST,SAAU,kBAAiB,CACjE;IACH;EACF;EAEA,oBACE,6BAAC,KAAK,CAAC,SAAS;IACd,YAAY,EAAEU,KAAK,CAACG,YAAa;IACjC,IAAI,EAAEH,KAAK,CAACI;EAAK,GACbX,UAAU,GAEbD,QAAQ,CACO;AAEtB,CAAC;AAAA"}