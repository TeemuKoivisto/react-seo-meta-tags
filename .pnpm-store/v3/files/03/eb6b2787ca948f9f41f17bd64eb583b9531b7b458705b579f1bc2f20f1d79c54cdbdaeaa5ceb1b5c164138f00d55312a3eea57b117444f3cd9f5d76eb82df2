{"version":3,"file":"loading-indicator.js","names":["indicatorEnabled","undefined","writeVirtualLoadingIndicatorModule","process","env","GATSBY_QUERY_ON_DEMAND","GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR","writeModule","JSON","stringify","routeLoadingIndicatorRequests","app","get","req","res","params","method","status","send"],"sources":["../../src/utils/loading-indicator.ts"],"sourcesContent":["import { Express } from \"express\"\nimport { writeModule } from \"./gatsby-webpack-virtual-modules\"\n\n// set value to undefined first, because env vars needed to determine if indicator\n// should ever be enabled by default might not be set yet - we set it to \"initial\"\n// first time we write out module if loading indicator is allowed\n// \"initial\" means that browser will decide if it should show it\n// for now we do disable it by default when running in cypress\n// to not cause problems for users when they iterate on their E2E tests\n// this check could be expanded in the future to add support for more scenarios\n// like that.\nlet indicatorEnabled: \"auto\" | true | false | undefined = undefined\n\nexport function writeVirtualLoadingIndicatorModule(): void {\n  if (indicatorEnabled === undefined) {\n    indicatorEnabled =\n      process.env.GATSBY_QUERY_ON_DEMAND &&\n      process.env.GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR === `true`\n        ? `auto`\n        : false\n  }\n\n  writeModule(\n    `$virtual/loading-indicator.js`,\n    `\n    export function isLoadingIndicatorEnabled() {\n    return ${\n      indicatorEnabled === `auto`\n        ? `\\`Cypress\\` in window\n          ? false\n          : true`\n        : JSON.stringify(indicatorEnabled)\n    }\n  }`\n  )\n}\n\nexport function routeLoadingIndicatorRequests(app: Express): void {\n  app.get(`/___loading-indicator/:method?`, (req, res) => {\n    if (req.params.method === `enable` && indicatorEnabled !== true) {\n      indicatorEnabled = true\n      writeVirtualLoadingIndicatorModule()\n    } else if (req.params.method === `disable` && indicatorEnabled !== false) {\n      indicatorEnabled = false\n      writeVirtualLoadingIndicatorModule()\n    } else if (req.params.method === `auto` && indicatorEnabled !== `auto`) {\n      indicatorEnabled = `auto`\n      writeVirtualLoadingIndicatorModule()\n    }\n\n    res.status(200).send({\n      status:\n        indicatorEnabled === `auto`\n          ? `auto`\n          : indicatorEnabled\n          ? `enabled`\n          : `disabled`,\n    })\n  })\n}\n"],"mappings":";;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,gBAAmD,GAAGC,SAAS;AAE5D,SAASC,kCAAkC,GAAS;EACzD,IAAIF,gBAAgB,KAAKC,SAAS,EAAE;IAClCD,gBAAgB,GACdG,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAClCF,OAAO,CAACC,GAAG,CAACE,wCAAwC,KAAM,MAAK,GAC1D,MAAK,GACN,KAAK;EACb;EAEA,IAAAC,wCAAW,EACR,+BAA8B,EAC9B;AACL;AACA,aACMP,gBAAgB,KAAM,MAAK,GACtB;AACX;AACA,iBAAiB,GACPQ,IAAI,CAACC,SAAS,CAACT,gBAAgB,CACpC;AACL,IAAI,CACD;AACH;AAEO,SAASU,6BAA6B,CAACC,GAAY,EAAQ;EAChEA,GAAG,CAACC,GAAG,CAAE,gCAA+B,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;IACtD,IAAID,GAAG,CAACE,MAAM,CAACC,MAAM,KAAM,QAAO,IAAIhB,gBAAgB,KAAK,IAAI,EAAE;MAC/DA,gBAAgB,GAAG,IAAI;MACvBE,kCAAkC,EAAE;IACtC,CAAC,MAAM,IAAIW,GAAG,CAACE,MAAM,CAACC,MAAM,KAAM,SAAQ,IAAIhB,gBAAgB,KAAK,KAAK,EAAE;MACxEA,gBAAgB,GAAG,KAAK;MACxBE,kCAAkC,EAAE;IACtC,CAAC,MAAM,IAAIW,GAAG,CAACE,MAAM,CAACC,MAAM,KAAM,MAAK,IAAIhB,gBAAgB,KAAM,MAAK,EAAE;MACtEA,gBAAgB,GAAI,MAAK;MACzBE,kCAAkC,EAAE;IACtC;IAEAY,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBD,MAAM,EACJjB,gBAAgB,KAAM,MAAK,GACtB,MAAK,GACNA,gBAAgB,GACf,SAAQ,GACR;IACT,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"}