{"version":3,"file":"mett.js","names":["mett","mettEvents","Map","on","eventName","callback","set","get","add","Set","off","delete","emit","e","setName","forEach","mettEmitEachC","setStar","mettEmitEachStar"],"sources":["../../src/utils/mett.ts"],"sourcesContent":["// This is a simple event emitter based on mitt.js\n// It mainly changes the data model to use a Map and Set, rather than a\n// regular object and an array.\n\ntype MettHandler<EventName, Payload> = (\n  e: Payload,\n  eventName: EventName\n) => void\n\nexport interface IMett {\n  on(eventName: EventName, callback: MettHandler<EventName, Payload>): void\n  off(eventName: EventName, callback: MettHandler<EventName, Payload>): void\n  emit(eventName: EventName, e?: Payload): void\n}\n\ntype EventName = string\ntype Payload = any\n\nexport function mett(): IMett {\n  const mettEvents: Map<\n    EventName,\n    Set<MettHandler<EventName, Payload>>\n  > = new Map()\n\n  return {\n    on(eventName: EventName, callback: MettHandler<EventName, Payload>): void {\n      const set = mettEvents.get(eventName)\n      if (set) {\n        set.add(callback)\n      } else {\n        mettEvents.set(eventName, new Set([callback]))\n      }\n    },\n    off(eventName: EventName, callback: MettHandler<EventName, Payload>): void {\n      const set = mettEvents.get(eventName)\n      if (set) {\n        set.delete(callback)\n      }\n    },\n    emit(eventName: EventName, e: Payload): void {\n      const setName = mettEvents.get(eventName)\n      if (setName) {\n        setName.forEach(function mettEmitEachC(callback) {\n          callback(e, eventName)\n        })\n      }\n      const setStar = mettEvents.get(`*`)\n      if (setStar) {\n        setStar.forEach(function mettEmitEachStar(callback) {\n          callback(e, eventName)\n        })\n      }\n    },\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AACA;;AAgBO,SAASA,IAAI,GAAU;EAC5B,MAAMC,UAGL,GAAG,IAAIC,GAAG,EAAE;EAEb,OAAO;IACLC,EAAE,CAACC,SAAoB,EAAEC,QAAyC,EAAQ;MACxE,MAAMC,GAAG,GAAGL,UAAU,CAACM,GAAG,CAACH,SAAS,CAAC;MACrC,IAAIE,GAAG,EAAE;QACPA,GAAG,CAACE,GAAG,CAACH,QAAQ,CAAC;MACnB,CAAC,MAAM;QACLJ,UAAU,CAACK,GAAG,CAACF,SAAS,EAAE,IAAIK,GAAG,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAAC;MAChD;IACF,CAAC;IACDK,GAAG,CAACN,SAAoB,EAAEC,QAAyC,EAAQ;MACzE,MAAMC,GAAG,GAAGL,UAAU,CAACM,GAAG,CAACH,SAAS,CAAC;MACrC,IAAIE,GAAG,EAAE;QACPA,GAAG,CAACK,MAAM,CAACN,QAAQ,CAAC;MACtB;IACF,CAAC;IACDO,IAAI,CAACR,SAAoB,EAAES,CAAU,EAAQ;MAC3C,MAAMC,OAAO,GAAGb,UAAU,CAACM,GAAG,CAACH,SAAS,CAAC;MACzC,IAAIU,OAAO,EAAE;QACXA,OAAO,CAACC,OAAO,CAAC,SAASC,aAAa,CAACX,QAAQ,EAAE;UAC/CA,QAAQ,CAACQ,CAAC,EAAET,SAAS,CAAC;QACxB,CAAC,CAAC;MACJ;MACA,MAAMa,OAAO,GAAGhB,UAAU,CAACM,GAAG,CAAE,GAAE,CAAC;MACnC,IAAIU,OAAO,EAAE;QACXA,OAAO,CAACF,OAAO,CAAC,SAASG,gBAAgB,CAACb,QAAQ,EAAE;UAClDA,QAAQ,CAACQ,CAAC,EAAET,SAAS,CAAC;QACxB,CAAC,CAAC;MACJ;IACF;EACF,CAAC;AACH"}