{"version":3,"file":"prepare-urls.js","names":["prepareUrls","protocol","host","port","formatUrl","hostname","url","format","pathname","prettyPrintUrl","chalk","bold","String","isUnspecifiedHost","prettyHost","lanUrlForConfig","lanUrlForTerminal","address","ip","test","undefined","_e","localUrlForTerminal","localUrlForBrowser"],"sources":["../../src/utils/prepare-urls.ts"],"sourcesContent":["import address from \"address\"\nimport chalk from \"chalk\"\nimport url from \"url\"\n\nexport interface IPreparedUrls {\n  lanUrlForConfig: string\n  lanUrlForTerminal: string\n  localUrlForTerminal: string\n  localUrlForBrowser: string\n}\n\nexport function prepareUrls(\n  protocol: `http` | `https`,\n  host: string,\n  port: number\n): IPreparedUrls {\n  const formatUrl = (hostname: string): string =>\n    url.format({\n      protocol,\n      hostname,\n      port,\n      pathname: `/`,\n    })\n  const prettyPrintUrl = (hostname: string): string =>\n    url.format({\n      protocol,\n      hostname,\n      port: chalk.bold(String(port)),\n      pathname: `/`,\n    })\n\n  const isUnspecifiedHost = host === `0.0.0.0` || host === `::`\n  let prettyHost = host\n  let lanUrlForConfig\n  let lanUrlForTerminal\n  if (isUnspecifiedHost) {\n    prettyHost = `localhost`\n\n    try {\n      // This can only return an IPv4 address\n      lanUrlForConfig = address.ip()\n      if (lanUrlForConfig) {\n        // Check if the address is a private ip\n        // https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n        if (\n          /^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(\n            lanUrlForConfig\n          )\n        ) {\n          // Address is private, format it for later use\n          lanUrlForTerminal = prettyPrintUrl(lanUrlForConfig)\n        } else {\n          // Address is not private, so we will discard it\n          lanUrlForConfig = undefined\n        }\n      }\n    } catch (_e) {\n      // ignored\n    }\n  }\n  // TODO collect errors (GraphQL + Webpack) in Redux so we\n  // can clear terminal and print them out on every compile.\n  // Borrow pretty printing code from webpack plugin.\n  const localUrlForTerminal = prettyPrintUrl(prettyHost)\n  const localUrlForBrowser = formatUrl(prettyHost)\n  return {\n    lanUrlForConfig,\n    lanUrlForTerminal,\n    localUrlForTerminal,\n    localUrlForBrowser,\n  }\n}\n"],"mappings":";;;;;AAAA;AACA;AACA;AASO,SAASA,WAAW,CACzBC,QAA0B,EAC1BC,IAAY,EACZC,IAAY,EACG;EACf,MAAMC,SAAS,GAAIC,QAAgB,IACjCC,YAAG,CAACC,MAAM,CAAC;IACTN,QAAQ;IACRI,QAAQ;IACRF,IAAI;IACJK,QAAQ,EAAG;EACb,CAAC,CAAC;EACJ,MAAMC,cAAc,GAAIJ,QAAgB,IACtCC,YAAG,CAACC,MAAM,CAAC;IACTN,QAAQ;IACRI,QAAQ;IACRF,IAAI,EAAEO,cAAK,CAACC,IAAI,CAACC,MAAM,CAACT,IAAI,CAAC,CAAC;IAC9BK,QAAQ,EAAG;EACb,CAAC,CAAC;EAEJ,MAAMK,iBAAiB,GAAGX,IAAI,KAAM,SAAQ,IAAIA,IAAI,KAAM,IAAG;EAC7D,IAAIY,UAAU,GAAGZ,IAAI;EACrB,IAAIa,eAAe;EACnB,IAAIC,iBAAiB;EACrB,IAAIH,iBAAiB,EAAE;IACrBC,UAAU,GAAI,WAAU;IAExB,IAAI;MACF;MACAC,eAAe,GAAGE,gBAAO,CAACC,EAAE,EAAE;MAC9B,IAAIH,eAAe,EAAE;QACnB;QACA;QACA,IACE,uDAAuD,CAACI,IAAI,CAC1DJ,eAAe,CAChB,EACD;UACA;UACAC,iBAAiB,GAAGP,cAAc,CAACM,eAAe,CAAC;QACrD,CAAC,MAAM;UACL;UACAA,eAAe,GAAGK,SAAS;QAC7B;MACF;IACF,CAAC,CAAC,OAAOC,EAAE,EAAE;MACX;IAAA;EAEJ;EACA;EACA;EACA;EACA,MAAMC,mBAAmB,GAAGb,cAAc,CAACK,UAAU,CAAC;EACtD,MAAMS,kBAAkB,GAAGnB,SAAS,CAACU,UAAU,CAAC;EAChD,OAAO;IACLC,eAAe;IACfC,iBAAiB;IACjBM,mBAAmB;IACnBC;EACF,CAAC;AACH"}