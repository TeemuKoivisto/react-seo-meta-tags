{"version":3,"file":"print.js","names":["breakLine","line","maxLen","parts","split","RegExp","length","sublines","i","push","slice","descriptionLines","description","rawLines","printBlock","items","join","printDeprecated","fieldOrEnumVal","reason","deprecationReason","reasonAST","astFromValue","GraphQLString","DEFAULT_DEPRECATION_REASON","print","printDescription","def","indentation","firstInBlock","isNamedTypeComposer","getDescription","lines","text","isMultiline","blockString","printBlockString","minimize","prefix","replace","printDirectiveArgs","args","directive","directiveArgs","Object","entries","map","name","value","arg","find","type","printDirectives","extensions","directives","internalExtensionNames","includes","printInputValue","inputTC","argDecl","getTypeName","defaultValue","defaultAST","getType","printArgs","argsArray","every","_name","argTC","printFields","fields","printedFields","fieldName","fieldTC","String","printScalarType","tc","printObjectType","interfaces","getInterfaces","implementedInterfaces","getExtensions","getFields","hasInterface","dontInfer","schemaComposer","getDirectives","printedDirectives","printInterfaceType","printUnionType","types","getTypeNames","possibleTypes","printEnumType","values","valueTC","printInputObjectType","printType","ObjectTypeComposer","InterfaceTypeComposer","UnionTypeComposer","EnumTypeComposer","ScalarTypeComposer","InputTypeComposer","printTypeDefinitions","config","Promise","resolve","path","include","exclude","withFieldTypes","rewrite","report","error","fs","existsSync","internalPlugins","typesToExclude","pluginsToExclude","plugins","getName","isInternalType","typeName","internalTypeNames","plugin","getExtension","shouldIncludeType","processedTypes","Set","typeDefs","addType","has","add","addWithFieldTypes","forEach","iface","ifaceName","getAnyTC","getFieldNames","fieldType","getFieldTC","fieldArgs","getFieldArgs","keys","argName","getFieldArgTC","printedTypeDefs","Date","toISOString","info","writeFile"],"sources":["../../src/schema/print.ts"],"sourcesContent":["import * as fs from \"fs-extra\"\nimport {\n  EnumTypeComposer,\n  InputTypeComposer,\n  InterfaceTypeComposer,\n  ObjectTypeComposer,\n  ScalarTypeComposer,\n  UnionTypeComposer,\n  SchemaComposer,\n  NamedTypeComposer,\n  ObjectTypeComposerFieldConfigMap,\n  ObjectTypeComposerFieldConfig,\n  ObjectTypeComposerArgumentConfigMap,\n  ObjectTypeComposerArgumentConfig,\n  Extensions,\n  isNamedTypeComposer,\n  EnumTypeComposerValueConfig,\n} from \"graphql-compose\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport {\n  GraphQLDirective,\n  astFromValue,\n  print,\n  GraphQLString,\n  DEFAULT_DEPRECATION_REASON,\n} from \"graphql\"\nimport { printBlockString } from \"graphql/language/blockString\"\nimport { internalExtensionNames } from \"./extensions\"\nimport _ from \"lodash\"\nimport { internalTypeNames } from \"./types/built-in-types\"\n\nexport interface ISchemaPrintConfig {\n  path?: string\n  include?: {\n    types: Array<string>\n    plugins: Array<string>\n  }\n  exclude?: {\n    types: Array<string>\n    plugins: Array<string>\n  }\n  withFieldTypes?: boolean\n  rewrite?: boolean\n}\n\nconst breakLine = (line: string, maxLen: number): Array<string> => {\n  const parts = line.split(new RegExp(`((?: |^).{15,${maxLen - 40}}(?= |$))`))\n  if (parts.length < 4) {\n    return [line]\n  }\n  const sublines = [parts[0] + parts[1] + parts[2]]\n  for (let i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1])\n  }\n  return sublines\n}\n\nconst descriptionLines = (\n  description: string,\n  maxLen: number\n): Array<string> => {\n  const rawLines = description.split(`\\n`)\n  return _.flatMap(rawLines, line => {\n    if (line.length < maxLen + 5) {\n      return line\n    }\n    // For > 120 character long lines, cut at space boundaries into sublines\n    // of ~80 chars.\n    return breakLine(line, maxLen)\n  })\n}\n\nconst printBlock = (items: Array<string>): string =>\n  items.length !== 0 ? ` {\\n` + items.join(`\\n`) + `\\n}` : ``\n\nconst printDeprecated = (\n  fieldOrEnumVal:\n    | ObjectTypeComposerFieldConfig<unknown, unknown>\n    | EnumTypeComposerValueConfig\n): string => {\n  const reason = fieldOrEnumVal.deprecationReason\n  if (!reason) {\n    return ``\n  }\n  const reasonAST = astFromValue(reason, GraphQLString)\n  if (reasonAST && reason !== `` && reason !== DEFAULT_DEPRECATION_REASON) {\n    return ` @deprecated(reason: ` + print(reasonAST) + `)`\n  }\n  return ` @deprecated`\n}\n\nconst printDescription = (\n  def:\n    | ObjectTypeComposerFieldConfig<unknown, unknown>\n    | NamedTypeComposer<unknown>\n    | ObjectTypeComposerArgumentConfig\n    | EnumTypeComposerValueConfig,\n  indentation = ``,\n  firstInBlock = true\n): string => {\n  const description = isNamedTypeComposer(def)\n    ? def.getDescription()\n    : def.description\n  if (!description) {\n    return ``\n  }\n\n  const lines = descriptionLines(description, 120 - indentation.length)\n\n  const text = lines.join(`\\n`)\n  const isMultiline = text.length > 70\n  const blockString = printBlockString(text, { minimize: !isMultiline })\n  const prefix = indentation && !firstInBlock ? `\\n` + indentation : indentation\n\n  return prefix + blockString.replace(/\\n/g, `\\n` + indentation) + `\\n`\n}\n\nconst printDirectiveArgs = (args: any, directive: GraphQLDirective): string => {\n  if (!args || !directive) {\n    return ``\n  }\n\n  const directiveArgs = Object.entries(args)\n  if (directiveArgs.length === 0) {\n    return ``\n  }\n\n  return (\n    `(` +\n    directiveArgs\n      .map(([name, value]) => {\n        const arg =\n          directive.args && directive.args.find(arg => arg.name === name)\n\n        return arg && `${name}: ${print(astFromValue(value, arg.type)!)}`\n      })\n      .join(`, `) +\n    `)`\n  )\n}\n\nexport const printDirectives = (\n  extensions: Extensions,\n  directives: Array<GraphQLDirective>\n): string =>\n  Object.entries(extensions)\n    .map(([name, args]) => {\n      if ([...internalExtensionNames, `deprecated`].includes(name)) return ``\n      return (\n        ` @${name}` +\n        printDirectiveArgs(\n          args,\n          directives.find(directive => directive.name === name)!\n        )\n      )\n    })\n    .join(``)\n\nconst printInputValue = ([name, inputTC]: [\n  string,\n  ObjectTypeComposerArgumentConfig\n]): string => {\n  let argDecl = name + `: ` + inputTC.type.getTypeName()\n  if (inputTC.defaultValue) {\n    const defaultAST = astFromValue(\n      inputTC.defaultValue,\n      inputTC.type.getType()\n    )\n    if (defaultAST) {\n      argDecl += ` = ${print(defaultAST)}`\n    }\n  }\n  return argDecl\n}\n\nconst printArgs = (\n  args: ObjectTypeComposerArgumentConfigMap | undefined,\n  indentation = ``\n): string => {\n  if (!args) {\n    return ``\n  }\n  const argsArray = Object.entries(args)\n  if (argsArray.length === 0) {\n    return ``\n  }\n\n  // If all args have no description, print them on one line\n  if (argsArray.every(([_name, argTC]) => !argTC.description)) {\n    return `(` + argsArray.map(printInputValue).join(`, `) + `)`\n  }\n\n  return (\n    `(\\n` +\n    argsArray\n      .map(\n        ([_name, argTC], i) =>\n          printDescription(argTC, `  ` + indentation, !i) +\n          `  ` +\n          indentation +\n          printInputValue([_name, argTC])\n      )\n      .join(`\\n`) +\n    `\\n` +\n    indentation +\n    `)`\n  )\n}\n\nconst printFields = (\n  fields: ObjectTypeComposerFieldConfigMap<unknown, unknown>,\n  directives: Array<GraphQLDirective>\n): string => {\n  const printedFields = Object.entries(fields).map(\n    ([fieldName, fieldTC], i) =>\n      printDescription(fieldTC, `  `, !i) +\n      `  ` +\n      fieldName +\n      printArgs(fieldTC.args, `  `) +\n      `: ` +\n      String(fieldTC.type.getTypeName()) +\n      printDirectives(fieldTC.extensions || {}, directives) +\n      printDeprecated(fieldTC)\n  )\n  return printBlock(printedFields)\n}\n\nconst printScalarType = (tc: ScalarTypeComposer): string =>\n  printDescription(tc) + `scalar ${tc.getTypeName()}`\n\nconst printObjectType = (tc: ObjectTypeComposer<unknown>): string => {\n  const interfaces = tc.getInterfaces()\n  const implementedInterfaces = interfaces.length\n    ? ` implements ` + interfaces.map(i => i.getTypeName()).join(` & `)\n    : ``\n  const extensions = tc.getExtensions()\n  let fields = tc.getFields()\n  if (tc.hasInterface(`Node`)) {\n    extensions.dontInfer = null\n    fields = _.omit(fields, [`id`, `parent`, `children`, `internal`])\n  }\n  const directives = tc.schemaComposer.getDirectives()\n  const printedDirectives = printDirectives(extensions, directives)\n\n  return (\n    printDescription(tc) +\n    `type ${tc.getTypeName()}${implementedInterfaces}${printedDirectives}` +\n    printFields(fields, directives)\n  )\n}\n\nconst printInterfaceType = (tc: InterfaceTypeComposer<unknown>): string => {\n  const interfaces = tc.getInterfaces()\n  const implementedInterfaces = interfaces.length\n    ? ` implements ` + interfaces.map(i => i.getTypeName()).join(` & `)\n    : ``\n  const extensions = tc.getExtensions()\n  const directives = tc.schemaComposer.getDirectives()\n  const printedDirectives = printDirectives(extensions, directives)\n  return (\n    printDescription(tc) +\n    `interface ${tc.getTypeName()}${implementedInterfaces}${printedDirectives}` +\n    printFields(tc.getFields(), directives)\n  )\n}\n\nconst printUnionType = (tc: UnionTypeComposer): string => {\n  const types = tc.getTypeNames()\n  const possibleTypes = types.length ? ` = ` + types.join(` | `) : ``\n  return printDescription(tc) + `union ` + tc.getTypeName() + possibleTypes\n}\n\nconst printEnumType = (tc: EnumTypeComposer): string => {\n  const values = Object.entries(tc.getFields()).map(\n    ([name, valueTC], i) =>\n      printDescription(valueTC, `  `, !i) +\n      `  ` +\n      name +\n      printDeprecated(valueTC)\n  )\n\n  return printDescription(tc) + `enum ${tc.getTypeName()}` + printBlock(values)\n}\n\nconst printInputObjectType = (tc: InputTypeComposer): string => {\n  const fields = Object.entries(tc.getFields()).map(\n    ([fieldName, fieldTC], i) =>\n      printDescription(fieldTC, `  `, !i) +\n      `  ` +\n      printInputValue([fieldName, fieldTC])\n  )\n\n  return printDescription(tc) + `input ${tc.getTypeName()}` + printBlock(fields)\n}\n\nconst printType = (tc: NamedTypeComposer<unknown>): string => {\n  if (tc instanceof ObjectTypeComposer) {\n    return printObjectType(tc)\n  } else if (tc instanceof InterfaceTypeComposer) {\n    return printInterfaceType(tc)\n  } else if (tc instanceof UnionTypeComposer) {\n    return printUnionType(tc)\n  } else if (tc instanceof EnumTypeComposer) {\n    return printEnumType(tc)\n  } else if (tc instanceof ScalarTypeComposer) {\n    return printScalarType(tc)\n  } else if (tc instanceof InputTypeComposer) {\n    return printInputObjectType(tc)\n  }\n\n  return ``\n}\n\nexport const printTypeDefinitions = ({\n  config,\n  schemaComposer,\n}: {\n  config: ISchemaPrintConfig\n  schemaComposer: SchemaComposer\n}): Promise<void> => {\n  if (!config) return Promise.resolve()\n\n  const {\n    path,\n    include,\n    exclude,\n    withFieldTypes,\n    rewrite = false,\n  } = config || {}\n\n  if (!path) {\n    report.error(\n      `Printing type definitions aborted. Please provide a file path.`\n    )\n    return Promise.resolve()\n  }\n\n  if (!rewrite && fs.existsSync(path)) {\n    report.error(\n      `Printing type definitions aborted. The file \\`${path}\\` already exists.`\n    )\n    return Promise.resolve()\n  }\n  const internalPlugins = [`internal-data-bridge`]\n\n  const typesToExclude = exclude?.types || []\n  const pluginsToExclude = exclude?.plugins || []\n\n  const getName = (tc: NamedTypeComposer<unknown>): string => tc.getTypeName()\n\n  const isInternalType = (tc: NamedTypeComposer<unknown>): boolean => {\n    const typeName = getName(tc)\n    if (internalTypeNames.includes(typeName)) {\n      return true\n    }\n\n    const plugin = tc.getExtension(`plugin`)\n    if (typeof plugin === `string` && internalPlugins.includes(plugin)) {\n      return true\n    }\n\n    return false\n  }\n\n  const shouldIncludeType = (tc: NamedTypeComposer<unknown>): boolean => {\n    const typeName = getName(tc)\n    if (typesToExclude.includes(typeName)) {\n      return false\n    }\n    if (include?.types && !include.types.includes(typeName)) {\n      return false\n    }\n\n    const plugin = tc.getExtension(`plugin`)\n    if (typeof plugin === `string` && pluginsToExclude.includes(plugin)) {\n      return false\n    }\n    if (\n      include?.plugins &&\n      (!plugin ||\n        (typeof plugin === `string` && !include.plugins.includes(plugin)))\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  // Save processed type names, not references to the type composers,\n  // because of how graphql-compose, at least in v6, processes\n  // inline types\n  const processedTypes = new Set<string>()\n  const typeDefs = new Set<NamedTypeComposer<unknown>>()\n\n  const addType = (\n    tc: NamedTypeComposer<unknown>\n  ): null | Set<NamedTypeComposer<unknown>> => {\n    const typeName = getName(tc)\n    if (!processedTypes.has(typeName) && !isInternalType(tc)) {\n      processedTypes.add(typeName)\n      return typeDefs.add(tc)\n    }\n    processedTypes.add(typeName)\n    return null\n  }\n\n  const addWithFieldTypes = (tc: NamedTypeComposer<unknown>): void => {\n    if (\n      addType(tc) &&\n      (tc instanceof ObjectTypeComposer ||\n        tc instanceof InterfaceTypeComposer ||\n        tc instanceof InputTypeComposer)\n    ) {\n      if (tc instanceof ObjectTypeComposer) {\n        const interfaces = tc.getInterfaces()\n        interfaces.forEach(iface => {\n          const ifaceName = iface.getTypeName()\n          if (ifaceName !== `Node`) {\n            addWithFieldTypes(schemaComposer.getAnyTC(ifaceName))\n          }\n        })\n      }\n\n      tc.getFieldNames().forEach(fieldName => {\n        const fieldType = tc.getFieldTC(fieldName)\n        addWithFieldTypes(fieldType)\n\n        if (!(tc instanceof InputTypeComposer)) {\n          const fieldArgs = tc.getFieldArgs(fieldName)\n          Object.keys(fieldArgs).forEach(argName => {\n            try {\n              addWithFieldTypes(tc.getFieldArgTC(fieldName, argName))\n            } catch {\n              // this type might not exist yet. If it won't be created by the end\n              // of schema creation then building schema will fail and fact that we\n              // skip it here won't matter\n            }\n          })\n        }\n      })\n    }\n  }\n\n  schemaComposer.forEach(tc => {\n    if (!isInternalType(tc) && shouldIncludeType(tc)) {\n      if (withFieldTypes) {\n        addWithFieldTypes(tc)\n      } else {\n        addType(tc)\n      }\n    }\n  })\n\n  const printedTypeDefs = [\n    `### Type definitions saved at ${new Date().toISOString()} ###`,\n  ]\n\n  try {\n    typeDefs.forEach(tc => printedTypeDefs.push(printType(tc)))\n    report.info(`Writing GraphQL type definitions to ${path}`)\n    return fs.writeFile(path, printedTypeDefs.join(`\\n\\n`))\n  } catch (error) {\n    report.error(`Failed writing type definitions to \\`${path}\\`.`, error)\n    return Promise.resolve()\n  }\n}\n"],"mappings":";;;;;;;AAAA;AACA;AAiBA;AACA;AAOA;AACA;AAEA;AAA0D;AAAA;AAgB1D,MAAMA,SAAS,GAAG,CAACC,IAAY,EAAEC,MAAc,KAAoB;EACjE,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,IAAIC,MAAM,CAAE,gBAAeH,MAAM,GAAG,EAAG,WAAU,CAAC,CAAC;EAC5E,IAAIC,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;IACpB,OAAO,CAACL,IAAI,CAAC;EACf;EACA,MAAMM,QAAQ,GAAG,CAACJ,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;EACjD,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACG,MAAM,EAAEE,CAAC,IAAI,CAAC,EAAE;IACxCD,QAAQ,CAACE,IAAI,CAACN,KAAK,CAACK,CAAC,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC,GAAGP,KAAK,CAACK,CAAC,GAAG,CAAC,CAAC,CAAC;EACjD;EACA,OAAOD,QAAQ;AACjB,CAAC;AAED,MAAMI,gBAAgB,GAAG,CACvBC,WAAmB,EACnBV,MAAc,KACI;EAClB,MAAMW,QAAQ,GAAGD,WAAW,CAACR,KAAK,CAAE,IAAG,CAAC;EACxC,OAAO,uBAAUS,QAAQ,EAAEZ,IAAI,IAAI;IACjC,IAAIA,IAAI,CAACK,MAAM,GAAGJ,MAAM,GAAG,CAAC,EAAE;MAC5B,OAAOD,IAAI;IACb;IACA;IACA;IACA,OAAOD,SAAS,CAACC,IAAI,EAAEC,MAAM,CAAC;EAChC,CAAC,CAAC;AACJ,CAAC;AAED,MAAMY,UAAU,GAAIC,KAAoB,IACtCA,KAAK,CAACT,MAAM,KAAK,CAAC,GAAI,MAAK,GAAGS,KAAK,CAACC,IAAI,CAAE,IAAG,CAAC,GAAI,KAAI,GAAI,EAAC;AAE7D,MAAMC,eAAe,GACnBC,cAE+B,IACpB;EACX,MAAMC,MAAM,GAAGD,cAAc,CAACE,iBAAiB;EAC/C,IAAI,CAACD,MAAM,EAAE;IACX,OAAQ,EAAC;EACX;EACA,MAAME,SAAS,GAAG,IAAAC,qBAAY,EAACH,MAAM,EAAEI,sBAAa,CAAC;EACrD,IAAIF,SAAS,IAAIF,MAAM,KAAM,EAAC,IAAIA,MAAM,KAAKK,mCAA0B,EAAE;IACvE,OAAQ,uBAAsB,GAAG,IAAAC,cAAK,EAACJ,SAAS,CAAC,GAAI,GAAE;EACzD;EACA,OAAQ,cAAa;AACvB,CAAC;AAED,MAAMK,gBAAgB,GAAG,CACvBC,GAI+B,EAC/BC,WAAW,GAAI,EAAC,EAChBC,YAAY,GAAG,IAAI,KACR;EACX,MAAMjB,WAAW,GAAG,IAAAkB,mCAAmB,EAACH,GAAG,CAAC,GACxCA,GAAG,CAACI,cAAc,EAAE,GACpBJ,GAAG,CAACf,WAAW;EACnB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAQ,EAAC;EACX;EAEA,MAAMoB,KAAK,GAAGrB,gBAAgB,CAACC,WAAW,EAAE,GAAG,GAAGgB,WAAW,CAACtB,MAAM,CAAC;EAErE,MAAM2B,IAAI,GAAGD,KAAK,CAAChB,IAAI,CAAE,IAAG,CAAC;EAC7B,MAAMkB,WAAW,GAAGD,IAAI,CAAC3B,MAAM,GAAG,EAAE;EACpC,MAAM6B,WAAW,GAAG,IAAAC,6BAAgB,EAACH,IAAI,EAAE;IAAEI,QAAQ,EAAE,CAACH;EAAY,CAAC,CAAC;EACtE,MAAMI,MAAM,GAAGV,WAAW,IAAI,CAACC,YAAY,GAAI,IAAG,GAAGD,WAAW,GAAGA,WAAW;EAE9E,OAAOU,MAAM,GAAGH,WAAW,CAACI,OAAO,CAAC,KAAK,EAAG,IAAG,GAAGX,WAAW,CAAC,GAAI,IAAG;AACvE,CAAC;AAED,MAAMY,kBAAkB,GAAG,CAACC,IAAS,EAAEC,SAA2B,KAAa;EAC7E,IAAI,CAACD,IAAI,IAAI,CAACC,SAAS,EAAE;IACvB,OAAQ,EAAC;EACX;EAEA,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC;EAC1C,IAAIE,aAAa,CAACrC,MAAM,KAAK,CAAC,EAAE;IAC9B,OAAQ,EAAC;EACX;EAEA,OACG,GAAE,GACHqC,aAAa,CACVG,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,KAAK,CAAC,KAAK;IACtB,MAAMC,GAAG,GACPP,SAAS,CAACD,IAAI,IAAIC,SAAS,CAACD,IAAI,CAACS,IAAI,CAACD,GAAG,IAAIA,GAAG,CAACF,IAAI,KAAKA,IAAI,CAAC;IAEjE,OAAOE,GAAG,IAAK,GAAEF,IAAK,KAAI,IAAAtB,cAAK,EAAC,IAAAH,qBAAY,EAAC0B,KAAK,EAAEC,GAAG,CAACE,IAAI,CAAC,CAAG,EAAC;EACnE,CAAC,CAAC,CACDnC,IAAI,CAAE,IAAG,CAAC,GACZ,GAAE;AAEP,CAAC;AAEM,MAAMoC,eAAe,GAAG,CAC7BC,UAAsB,EACtBC,UAAmC,KAEnCV,MAAM,CAACC,OAAO,CAACQ,UAAU,CAAC,CACvBP,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEN,IAAI,CAAC,KAAK;EACrB,IAAI,CAAC,GAAGc,kCAAsB,EAAG,YAAW,CAAC,CAACC,QAAQ,CAACT,IAAI,CAAC,EAAE,OAAQ,EAAC;EACvE,OACG,KAAIA,IAAK,EAAC,GACXP,kBAAkB,CAChBC,IAAI,EACJa,UAAU,CAACJ,IAAI,CAACR,SAAS,IAAIA,SAAS,CAACK,IAAI,KAAKA,IAAI,CAAC,CACtD;AAEL,CAAC,CAAC,CACD/B,IAAI,CAAE,EAAC,CAAC;AAAA;AAEb,MAAMyC,eAAe,GAAG,CAAC,CAACV,IAAI,EAAEW,OAAO,CAGtC,KAAa;EACZ,IAAIC,OAAO,GAAGZ,IAAI,GAAI,IAAG,GAAGW,OAAO,CAACP,IAAI,CAACS,WAAW,EAAE;EACtD,IAAIF,OAAO,CAACG,YAAY,EAAE;IACxB,MAAMC,UAAU,GAAG,IAAAxC,qBAAY,EAC7BoC,OAAO,CAACG,YAAY,EACpBH,OAAO,CAACP,IAAI,CAACY,OAAO,EAAE,CACvB;IACD,IAAID,UAAU,EAAE;MACdH,OAAO,IAAK,MAAK,IAAAlC,cAAK,EAACqC,UAAU,CAAE,EAAC;IACtC;EACF;EACA,OAAOH,OAAO;AAChB,CAAC;AAED,MAAMK,SAAS,GAAG,CAChBvB,IAAqD,EACrDb,WAAW,GAAI,EAAC,KACL;EACX,IAAI,CAACa,IAAI,EAAE;IACT,OAAQ,EAAC;EACX;EACA,MAAMwB,SAAS,GAAGrB,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC;EACtC,IAAIwB,SAAS,CAAC3D,MAAM,KAAK,CAAC,EAAE;IAC1B,OAAQ,EAAC;EACX;;EAEA;EACA,IAAI2D,SAAS,CAACC,KAAK,CAAC,CAAC,CAACC,KAAK,EAAEC,KAAK,CAAC,KAAK,CAACA,KAAK,CAACxD,WAAW,CAAC,EAAE;IAC3D,OAAQ,GAAE,GAAGqD,SAAS,CAACnB,GAAG,CAACW,eAAe,CAAC,CAACzC,IAAI,CAAE,IAAG,CAAC,GAAI,GAAE;EAC9D;EAEA,OACG,KAAI,GACLiD,SAAS,CACNnB,GAAG,CACF,CAAC,CAACqB,KAAK,EAAEC,KAAK,CAAC,EAAE5D,CAAC,KAChBkB,gBAAgB,CAAC0C,KAAK,EAAG,IAAG,GAAGxC,WAAW,EAAE,CAACpB,CAAC,CAAC,GAC9C,IAAG,GACJoB,WAAW,GACX6B,eAAe,CAAC,CAACU,KAAK,EAAEC,KAAK,CAAC,CAAC,CAClC,CACApD,IAAI,CAAE,IAAG,CAAC,GACZ,IAAG,GACJY,WAAW,GACV,GAAE;AAEP,CAAC;AAED,MAAMyC,WAAW,GAAG,CAClBC,MAA0D,EAC1DhB,UAAmC,KACxB;EACX,MAAMiB,aAAa,GAAG3B,MAAM,CAACC,OAAO,CAACyB,MAAM,CAAC,CAACxB,GAAG,CAC9C,CAAC,CAAC0B,SAAS,EAAEC,OAAO,CAAC,EAAEjE,CAAC,KACtBkB,gBAAgB,CAAC+C,OAAO,EAAG,IAAG,EAAE,CAACjE,CAAC,CAAC,GAClC,IAAG,GACJgE,SAAS,GACTR,SAAS,CAACS,OAAO,CAAChC,IAAI,EAAG,IAAG,CAAC,GAC5B,IAAG,GACJiC,MAAM,CAACD,OAAO,CAACtB,IAAI,CAACS,WAAW,EAAE,CAAC,GAClCR,eAAe,CAACqB,OAAO,CAACpB,UAAU,IAAI,CAAC,CAAC,EAAEC,UAAU,CAAC,GACrDrC,eAAe,CAACwD,OAAO,CAAC,CAC3B;EACD,OAAO3D,UAAU,CAACyD,aAAa,CAAC;AAClC,CAAC;AAED,MAAMI,eAAe,GAAIC,EAAsB,IAC7ClD,gBAAgB,CAACkD,EAAE,CAAC,GAAI,UAASA,EAAE,CAAChB,WAAW,EAAG,EAAC;AAErD,MAAMiB,eAAe,GAAID,EAA+B,IAAa;EACnE,MAAME,UAAU,GAAGF,EAAE,CAACG,aAAa,EAAE;EACrC,MAAMC,qBAAqB,GAAGF,UAAU,CAACxE,MAAM,GAC1C,cAAa,GAAGwE,UAAU,CAAChC,GAAG,CAACtC,CAAC,IAAIA,CAAC,CAACoD,WAAW,EAAE,CAAC,CAAC5C,IAAI,CAAE,KAAI,CAAC,GAChE,EAAC;EACN,MAAMqC,UAAU,GAAGuB,EAAE,CAACK,aAAa,EAAE;EACrC,IAAIX,MAAM,GAAGM,EAAE,CAACM,SAAS,EAAE;EAC3B,IAAIN,EAAE,CAACO,YAAY,CAAE,MAAK,CAAC,EAAE;IAC3B9B,UAAU,CAAC+B,SAAS,GAAG,IAAI;IAC3Bd,MAAM,GAAG,oBAAOA,MAAM,EAAE,CAAE,IAAG,EAAG,QAAO,EAAG,UAAS,EAAG,UAAS,CAAC,CAAC;EACnE;EACA,MAAMhB,UAAU,GAAGsB,EAAE,CAACS,cAAc,CAACC,aAAa,EAAE;EACpD,MAAMC,iBAAiB,GAAGnC,eAAe,CAACC,UAAU,EAAEC,UAAU,CAAC;EAEjE,OACE5B,gBAAgB,CAACkD,EAAE,CAAC,GACnB,QAAOA,EAAE,CAAChB,WAAW,EAAG,GAAEoB,qBAAsB,GAAEO,iBAAkB,EAAC,GACtElB,WAAW,CAACC,MAAM,EAAEhB,UAAU,CAAC;AAEnC,CAAC;AAED,MAAMkC,kBAAkB,GAAIZ,EAAkC,IAAa;EACzE,MAAME,UAAU,GAAGF,EAAE,CAACG,aAAa,EAAE;EACrC,MAAMC,qBAAqB,GAAGF,UAAU,CAACxE,MAAM,GAC1C,cAAa,GAAGwE,UAAU,CAAChC,GAAG,CAACtC,CAAC,IAAIA,CAAC,CAACoD,WAAW,EAAE,CAAC,CAAC5C,IAAI,CAAE,KAAI,CAAC,GAChE,EAAC;EACN,MAAMqC,UAAU,GAAGuB,EAAE,CAACK,aAAa,EAAE;EACrC,MAAM3B,UAAU,GAAGsB,EAAE,CAACS,cAAc,CAACC,aAAa,EAAE;EACpD,MAAMC,iBAAiB,GAAGnC,eAAe,CAACC,UAAU,EAAEC,UAAU,CAAC;EACjE,OACE5B,gBAAgB,CAACkD,EAAE,CAAC,GACnB,aAAYA,EAAE,CAAChB,WAAW,EAAG,GAAEoB,qBAAsB,GAAEO,iBAAkB,EAAC,GAC3ElB,WAAW,CAACO,EAAE,CAACM,SAAS,EAAE,EAAE5B,UAAU,CAAC;AAE3C,CAAC;AAED,MAAMmC,cAAc,GAAIb,EAAqB,IAAa;EACxD,MAAMc,KAAK,GAAGd,EAAE,CAACe,YAAY,EAAE;EAC/B,MAAMC,aAAa,GAAGF,KAAK,CAACpF,MAAM,GAAI,KAAI,GAAGoF,KAAK,CAAC1E,IAAI,CAAE,KAAI,CAAC,GAAI,EAAC;EACnE,OAAOU,gBAAgB,CAACkD,EAAE,CAAC,GAAI,QAAO,GAAGA,EAAE,CAAChB,WAAW,EAAE,GAAGgC,aAAa;AAC3E,CAAC;AAED,MAAMC,aAAa,GAAIjB,EAAoB,IAAa;EACtD,MAAMkB,MAAM,GAAGlD,MAAM,CAACC,OAAO,CAAC+B,EAAE,CAACM,SAAS,EAAE,CAAC,CAACpC,GAAG,CAC/C,CAAC,CAACC,IAAI,EAAEgD,OAAO,CAAC,EAAEvF,CAAC,KACjBkB,gBAAgB,CAACqE,OAAO,EAAG,IAAG,EAAE,CAACvF,CAAC,CAAC,GAClC,IAAG,GACJuC,IAAI,GACJ9B,eAAe,CAAC8E,OAAO,CAAC,CAC3B;EAED,OAAOrE,gBAAgB,CAACkD,EAAE,CAAC,GAAI,QAAOA,EAAE,CAAChB,WAAW,EAAG,EAAC,GAAG9C,UAAU,CAACgF,MAAM,CAAC;AAC/E,CAAC;AAED,MAAME,oBAAoB,GAAIpB,EAAqB,IAAa;EAC9D,MAAMN,MAAM,GAAG1B,MAAM,CAACC,OAAO,CAAC+B,EAAE,CAACM,SAAS,EAAE,CAAC,CAACpC,GAAG,CAC/C,CAAC,CAAC0B,SAAS,EAAEC,OAAO,CAAC,EAAEjE,CAAC,KACtBkB,gBAAgB,CAAC+C,OAAO,EAAG,IAAG,EAAE,CAACjE,CAAC,CAAC,GAClC,IAAG,GACJiD,eAAe,CAAC,CAACe,SAAS,EAAEC,OAAO,CAAC,CAAC,CACxC;EAED,OAAO/C,gBAAgB,CAACkD,EAAE,CAAC,GAAI,SAAQA,EAAE,CAAChB,WAAW,EAAG,EAAC,GAAG9C,UAAU,CAACwD,MAAM,CAAC;AAChF,CAAC;AAED,MAAM2B,SAAS,GAAIrB,EAA8B,IAAa;EAC5D,IAAIA,EAAE,YAAYsB,kCAAkB,EAAE;IACpC,OAAOrB,eAAe,CAACD,EAAE,CAAC;EAC5B,CAAC,MAAM,IAAIA,EAAE,YAAYuB,qCAAqB,EAAE;IAC9C,OAAOX,kBAAkB,CAACZ,EAAE,CAAC;EAC/B,CAAC,MAAM,IAAIA,EAAE,YAAYwB,iCAAiB,EAAE;IAC1C,OAAOX,cAAc,CAACb,EAAE,CAAC;EAC3B,CAAC,MAAM,IAAIA,EAAE,YAAYyB,gCAAgB,EAAE;IACzC,OAAOR,aAAa,CAACjB,EAAE,CAAC;EAC1B,CAAC,MAAM,IAAIA,EAAE,YAAY0B,kCAAkB,EAAE;IAC3C,OAAO3B,eAAe,CAACC,EAAE,CAAC;EAC5B,CAAC,MAAM,IAAIA,EAAE,YAAY2B,iCAAiB,EAAE;IAC1C,OAAOP,oBAAoB,CAACpB,EAAE,CAAC;EACjC;EAEA,OAAQ,EAAC;AACX,CAAC;AAEM,MAAM4B,oBAAoB,GAAG,CAAC;EACnCC,MAAM;EACNpB;AAIF,CAAC,KAAoB;EACnB,IAAI,CAACoB,MAAM,EAAE,OAAOC,OAAO,CAACC,OAAO,EAAE;EAErC,MAAM;IACJC,IAAI;IACJC,OAAO;IACPC,OAAO;IACPC,cAAc;IACdC,OAAO,GAAG;EACZ,CAAC,GAAGP,MAAM,IAAI,CAAC,CAAC;EAEhB,IAAI,CAACG,IAAI,EAAE;IACTK,iBAAM,CAACC,KAAK,CACT,gEAA+D,CACjE;IACD,OAAOR,OAAO,CAACC,OAAO,EAAE;EAC1B;EAEA,IAAI,CAACK,OAAO,IAAIG,EAAE,CAACC,UAAU,CAACR,IAAI,CAAC,EAAE;IACnCK,iBAAM,CAACC,KAAK,CACT,iDAAgDN,IAAK,oBAAmB,CAC1E;IACD,OAAOF,OAAO,CAACC,OAAO,EAAE;EAC1B;EACA,MAAMU,eAAe,GAAG,CAAE,sBAAqB,CAAC;EAEhD,MAAMC,cAAc,GAAG,CAAAR,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEpB,KAAK,KAAI,EAAE;EAC3C,MAAM6B,gBAAgB,GAAG,CAAAT,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,OAAO,KAAI,EAAE;EAE/C,MAAMC,OAAO,GAAI7C,EAA8B,IAAaA,EAAE,CAAChB,WAAW,EAAE;EAE5E,MAAM8D,cAAc,GAAI9C,EAA8B,IAAc;IAClE,MAAM+C,QAAQ,GAAGF,OAAO,CAAC7C,EAAE,CAAC;IAC5B,IAAIgD,+BAAiB,CAACpE,QAAQ,CAACmE,QAAQ,CAAC,EAAE;MACxC,OAAO,IAAI;IACb;IAEA,MAAME,MAAM,GAAGjD,EAAE,CAACkD,YAAY,CAAE,QAAO,CAAC;IACxC,IAAI,OAAOD,MAAM,KAAM,QAAO,IAAIR,eAAe,CAAC7D,QAAQ,CAACqE,MAAM,CAAC,EAAE;MAClE,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EAED,MAAME,iBAAiB,GAAInD,EAA8B,IAAc;IACrE,MAAM+C,QAAQ,GAAGF,OAAO,CAAC7C,EAAE,CAAC;IAC5B,IAAI0C,cAAc,CAAC9D,QAAQ,CAACmE,QAAQ,CAAC,EAAE;MACrC,OAAO,KAAK;IACd;IACA,IAAId,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEnB,KAAK,IAAI,CAACmB,OAAO,CAACnB,KAAK,CAAClC,QAAQ,CAACmE,QAAQ,CAAC,EAAE;MACvD,OAAO,KAAK;IACd;IAEA,MAAME,MAAM,GAAGjD,EAAE,CAACkD,YAAY,CAAE,QAAO,CAAC;IACxC,IAAI,OAAOD,MAAM,KAAM,QAAO,IAAIN,gBAAgB,CAAC/D,QAAQ,CAACqE,MAAM,CAAC,EAAE;MACnE,OAAO,KAAK;IACd;IACA,IACEhB,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEW,OAAO,KACf,CAACK,MAAM,IACL,OAAOA,MAAM,KAAM,QAAO,IAAI,CAAChB,OAAO,CAACW,OAAO,CAAChE,QAAQ,CAACqE,MAAM,CAAE,CAAC,EACpE;MACA,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC;;EAED;EACA;EACA;EACA,MAAMG,cAAc,GAAG,IAAIC,GAAG,EAAU;EACxC,MAAMC,QAAQ,GAAG,IAAID,GAAG,EAA8B;EAEtD,MAAME,OAAO,GACXvD,EAA8B,IACa;IAC3C,MAAM+C,QAAQ,GAAGF,OAAO,CAAC7C,EAAE,CAAC;IAC5B,IAAI,CAACoD,cAAc,CAACI,GAAG,CAACT,QAAQ,CAAC,IAAI,CAACD,cAAc,CAAC9C,EAAE,CAAC,EAAE;MACxDoD,cAAc,CAACK,GAAG,CAACV,QAAQ,CAAC;MAC5B,OAAOO,QAAQ,CAACG,GAAG,CAACzD,EAAE,CAAC;IACzB;IACAoD,cAAc,CAACK,GAAG,CAACV,QAAQ,CAAC;IAC5B,OAAO,IAAI;EACb,CAAC;EAED,MAAMW,iBAAiB,GAAI1D,EAA8B,IAAW;IAClE,IACEuD,OAAO,CAACvD,EAAE,CAAC,KACVA,EAAE,YAAYsB,kCAAkB,IAC/BtB,EAAE,YAAYuB,qCAAqB,IACnCvB,EAAE,YAAY2B,iCAAiB,CAAC,EAClC;MACA,IAAI3B,EAAE,YAAYsB,kCAAkB,EAAE;QACpC,MAAMpB,UAAU,GAAGF,EAAE,CAACG,aAAa,EAAE;QACrCD,UAAU,CAACyD,OAAO,CAACC,KAAK,IAAI;UAC1B,MAAMC,SAAS,GAAGD,KAAK,CAAC5E,WAAW,EAAE;UACrC,IAAI6E,SAAS,KAAM,MAAK,EAAE;YACxBH,iBAAiB,CAACjD,cAAc,CAACqD,QAAQ,CAACD,SAAS,CAAC,CAAC;UACvD;QACF,CAAC,CAAC;MACJ;MAEA7D,EAAE,CAAC+D,aAAa,EAAE,CAACJ,OAAO,CAAC/D,SAAS,IAAI;QACtC,MAAMoE,SAAS,GAAGhE,EAAE,CAACiE,UAAU,CAACrE,SAAS,CAAC;QAC1C8D,iBAAiB,CAACM,SAAS,CAAC;QAE5B,IAAI,EAAEhE,EAAE,YAAY2B,iCAAiB,CAAC,EAAE;UACtC,MAAMuC,SAAS,GAAGlE,EAAE,CAACmE,YAAY,CAACvE,SAAS,CAAC;UAC5C5B,MAAM,CAACoG,IAAI,CAACF,SAAS,CAAC,CAACP,OAAO,CAACU,OAAO,IAAI;YACxC,IAAI;cACFX,iBAAiB,CAAC1D,EAAE,CAACsE,aAAa,CAAC1E,SAAS,EAAEyE,OAAO,CAAC,CAAC;YACzD,CAAC,CAAC,MAAM;cACN;cACA;cACA;YAAA;UAEJ,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAED5D,cAAc,CAACkD,OAAO,CAAC3D,EAAE,IAAI;IAC3B,IAAI,CAAC8C,cAAc,CAAC9C,EAAE,CAAC,IAAImD,iBAAiB,CAACnD,EAAE,CAAC,EAAE;MAChD,IAAImC,cAAc,EAAE;QAClBuB,iBAAiB,CAAC1D,EAAE,CAAC;MACvB,CAAC,MAAM;QACLuD,OAAO,CAACvD,EAAE,CAAC;MACb;IACF;EACF,CAAC,CAAC;EAEF,MAAMuE,eAAe,GAAG,CACrB,iCAAgC,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAG,MAAK,CAChE;EAED,IAAI;IACFnB,QAAQ,CAACK,OAAO,CAAC3D,EAAE,IAAIuE,eAAe,CAAC1I,IAAI,CAACwF,SAAS,CAACrB,EAAE,CAAC,CAAC,CAAC;IAC3DqC,iBAAM,CAACqC,IAAI,CAAE,uCAAsC1C,IAAK,EAAC,CAAC;IAC1D,OAAOO,EAAE,CAACoC,SAAS,CAAC3C,IAAI,EAAEuC,eAAe,CAACnI,IAAI,CAAE,MAAK,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOkG,KAAK,EAAE;IACdD,iBAAM,CAACC,KAAK,CAAE,wCAAuCN,IAAK,KAAI,EAAEM,KAAK,CAAC;IACtE,OAAOR,OAAO,CAACC,OAAO,EAAE;EAC1B;AACF,CAAC;AAAA"}