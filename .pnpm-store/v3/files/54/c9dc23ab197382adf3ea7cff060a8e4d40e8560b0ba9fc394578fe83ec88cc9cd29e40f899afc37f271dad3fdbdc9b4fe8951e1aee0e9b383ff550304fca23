{"version":3,"file":"develop.js","names":["requireUncached","file","require","cache","resolve","e","getDebugPort","port","getDebugInfo","program","Object","prototype","hasOwnProperty","call","inspect","break","inspectBrk","ControllableScript","constructor","script","debugInfo","start","args","tmpFileName","tmp","tmpNameSync","tmpdir","path","join","process","cwd","fs","outputFileSync","isRunning","push","execa","node","env","GATSBY_NODE_GLOBALS","JSON","stringify","global","__GATSBY","stdio","stop","signal","code","Error","kill","send","type","action","payload","err","Promise","on","removeAllListeners","undefined","onMessage","callback","onExit","msg","isRestarting","REGEX_IP","module","exports","buildId","v4","root","directory","parseInt","developProcessPath","slash","detectPortInUseAndPrompt","host","message","exit","rootFile","developPort","https","reporter","panic","sslHost","test","ssl","getSslCert","name","caFile","certFile","keyFile","developProcess","proxyPort","handleChildProcessIPC","telemetryFlush","pid","shutdownServices","_code","services","all","catch","then"],"sources":["../../src/commands/develop.ts"],"sourcesContent":["// NOTE(@mxstbr): Do not use the reporter in this file, as that has side-effects on import which break structured logging\nimport path from \"path\"\nimport tmp from \"tmp\"\nimport { ChildProcess } from \"child_process\"\nimport execa from \"execa\"\nimport { detectPortInUseAndPrompt } from \"../utils/detect-port-in-use-and-prompt\"\nimport fs from \"fs-extra\"\nimport onExit from \"signal-exit\"\nimport { v4 } from \"gatsby-core-utils/uuid\"\nimport { slash } from \"gatsby-core-utils/path\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { getSslCert } from \"../utils/get-ssl-cert\"\nimport { IProgram, IDebugInfo } from \"./types\"\nimport { flush as telemetryFlush } from \"gatsby-telemetry\"\n\n// Adapted from https://stackoverflow.com/a/16060619\nconst requireUncached = (file: string): any => {\n  try {\n    delete require.cache[require.resolve(file)]\n  } catch (e) {\n    return null\n  }\n\n  try {\n    return require(file)\n  } catch (e) {\n    return null\n  }\n}\n\n// Return a user-supplied port otherwise the default Node.js debugging port\nconst getDebugPort = (port?: number): number => port ?? 9229\n\nexport const getDebugInfo = (program: IProgram): IDebugInfo | null => {\n  if (Object.prototype.hasOwnProperty.call(program, `inspect`)) {\n    return {\n      port: getDebugPort(program.inspect),\n      break: false,\n    }\n  } else if (Object.prototype.hasOwnProperty.call(program, `inspectBrk`)) {\n    return {\n      port: getDebugPort(program.inspectBrk),\n      break: true,\n    }\n  } else {\n    return null\n  }\n}\n\nclass ControllableScript {\n  private process?: ChildProcess\n  private script\n  private debugInfo: IDebugInfo | null\n  public isRunning\n  constructor(script, debugInfo: IDebugInfo | null) {\n    this.script = script\n    this.debugInfo = debugInfo\n  }\n  start(): void {\n    const args: Array<string> = []\n    const tmpFileName = tmp.tmpNameSync({\n      tmpdir: path.join(process.cwd(), `.cache`),\n    })\n    fs.outputFileSync(tmpFileName, this.script)\n    this.isRunning = true\n    // Passing --inspect isn't necessary for the child process to launch a port but it allows some editors to automatically attach\n    if (this.debugInfo) {\n      if (this.debugInfo.break) {\n        args.push(`--inspect-brk=${this.debugInfo.port}`)\n      } else {\n        args.push(`--inspect=${this.debugInfo.port}`)\n      }\n    }\n\n    this.process = execa.node(tmpFileName, args, {\n      env: {\n        ...process.env,\n        GATSBY_NODE_GLOBALS: JSON.stringify(global.__GATSBY ?? {}),\n      },\n      stdio: [`inherit`, `inherit`, `inherit`, `ipc`],\n    })\n  }\n  async stop(\n    signal: NodeJS.Signals | null = null,\n    code?: number\n  ): Promise<void> {\n    if (!this.process) {\n      throw new Error(`Trying to stop the process before starting it`)\n    }\n\n    this.isRunning = false\n    try {\n      if (signal) {\n        this.process.kill(signal)\n      } else {\n        this.process.send(\n          {\n            type: `COMMAND`,\n            action: {\n              type: `EXIT`,\n              payload: code,\n            },\n          },\n          () => {\n            // The try/catch won't suffice for this process.send\n            // So use the callback to manually catch the Error, otherwise it'll be thrown\n            // Ref: https://nodejs.org/api/child_process.html#child_process_subprocess_send_message_sendhandle_options_callback\n          }\n        )\n      }\n    } catch (err) {\n      // Ignore error if process has crashed or already quit.\n      // Ref: https://github.com/gatsbyjs/gatsby/issues/28011#issuecomment-877302917\n    }\n\n    return new Promise(resolve => {\n      if (!this.process) {\n        throw new Error(`Trying to stop the process before starting it`)\n      }\n\n      this.process.on(`exit`, () => {\n        if (this.process) {\n          this.process.removeAllListeners()\n        }\n        this.process = undefined\n        resolve()\n      })\n    })\n  }\n  onMessage(callback: (msg: any) => void): void {\n    if (!this.process) {\n      throw new Error(`Trying to attach message handler before process started`)\n    }\n    this.process.on(`message`, callback)\n  }\n  onExit(\n    callback: (code: number | null, signal: NodeJS.Signals | null) => void\n  ): void {\n    if (!this.process) {\n      throw new Error(`Trying to attach exit handler before process started`)\n    }\n    this.process.on(`exit`, callback)\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  send(msg: any): void {\n    if (!this.process) {\n      throw new Error(`Trying to send a message before process started`)\n    }\n\n    this.process.send(msg)\n  }\n}\n\nlet isRestarting\n\n// checks if a string is a valid ip\nconst REGEX_IP =\n  /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])$/\n\nmodule.exports = async (program: IProgram): Promise<void> => {\n  global.__GATSBY = {\n    buildId: v4(),\n    root: program.directory,\n  }\n\n  // In some cases, port can actually be a string. But our codebase is expecting it to be a number.\n  // So we want to early just force it to a number to ensure we always act on a correct type.\n  program.port = parseInt(program.port + ``, 10)\n  const developProcessPath = slash(require.resolve(`./develop-process`))\n\n  try {\n    program.port = await detectPortInUseAndPrompt(program.port, program.host)\n  } catch (e) {\n    if (e.message === `USER_REJECTED`) {\n      process.exit(0)\n    }\n\n    throw e\n  }\n\n  // Run the actual develop server on a random port, and the proxy on the program port\n  // which users will access\n  const debugInfo = getDebugInfo(program)\n\n  const rootFile = (file: string): string => path.join(program.directory, file)\n\n  // Require gatsby-config.js before accessing process.env, to enable the user to change\n  // environment variables from the config file.\n  requireUncached(rootFile(`gatsby-config`))\n\n  const developPort = program.port\n\n  // In order to enable custom ssl, --cert-file --key-file and -https flags must all be\n  // used together\n  if ((program[`cert-file`] || program[`key-file`]) && !program.https) {\n    reporter.panic(\n      `for custom ssl --https, --cert-file, and --key-file must be used together`\n    )\n  }\n\n  // Check if https is enabled, then create or get SSL cert.\n  // Certs are named 'devcert' and issued to the host.\n  // NOTE(@mxstbr): We mutate program.ssl _after_ passing it\n  // to the develop process controllable script above because\n  // that would mean we double SSL browser => proxy => server\n  if (program.https) {\n    const sslHost =\n      program.host === `0.0.0.0` || program.host === `::`\n        ? `localhost`\n        : program.host\n\n    if (REGEX_IP.test(sslHost)) {\n      reporter.panic(\n        `You're trying to generate a ssl certificate for an IP (${sslHost}). Please use a hostname instead.`\n      )\n    }\n\n    const ssl = await getSslCert({\n      name: sslHost,\n      caFile: program[`ca-file`],\n      certFile: program[`cert-file`],\n      keyFile: program[`key-file`],\n      directory: program.directory,\n    })\n\n    if (ssl) {\n      program.ssl = ssl\n    }\n  }\n\n  const developProcess = new ControllableScript(\n    `\n    const cmd = require(${JSON.stringify(developProcessPath)});\n    const args = ${JSON.stringify({\n      ...program,\n      port: developPort,\n      // TODO(v5): remove\n      proxyPort: developPort,\n      debugInfo,\n    })};\n    cmd(args);\n  `,\n    debugInfo\n  )\n\n  const handleChildProcessIPC = (msg): void => {\n    if (msg.type === `HEARTBEAT`) return\n    if (process.send) {\n      // Forward IPC\n      process.send(msg)\n    }\n  }\n\n  developProcess.start()\n  developProcess.onMessage(handleChildProcessIPC)\n\n  // Plugins can call `process.exit` which would be sent to `develop-process` (child process)\n  // This needs to be propagated back to the parent process\n  developProcess.onExit(\n    (code: number | null, signal: NodeJS.Signals | null) => {\n      try {\n        telemetryFlush()\n      } catch (e) {\n        // nop\n      }\n      if (isRestarting) return\n      if (signal !== null) {\n        process.kill(process.pid, signal)\n        return\n      }\n      if (code !== null) {\n        process.exit(code)\n      }\n\n      // This should not happen:\n      // https://nodejs.org/api/child_process.html#child_process_event_exit\n      // The 'exit' event is emitted after the child process ends. If the process\n      // exited, code is the final exit code of the process, otherwise null.\n      // If the process terminated due to receipt of a signal, signal is the\n      // string name of the signal, otherwise null. One of the two will always be\n      // non - null.\n      //\n      // but just in case let do non-zero exit, because we are in situation\n      // we don't expect to be possible\n      process.exit(1)\n    }\n  )\n\n  // route ipc messaging to the original develop process\n  process.on(`message`, msg => {\n    developProcess.send(msg)\n  })\n\n  process.on(`SIGINT`, async () => {\n    await shutdownServices(\n      {\n        developProcess,\n      },\n      `SIGINT`\n    )\n\n    process.exit(0)\n  })\n\n  process.on(`SIGTERM`, async () => {\n    await shutdownServices(\n      {\n        developProcess,\n      },\n      `SIGTERM`\n    )\n\n    process.exit(0)\n  })\n\n  onExit((_code, signal) => {\n    shutdownServices(\n      {\n        developProcess,\n      },\n      signal as NodeJS.Signals\n    )\n  })\n}\n\ninterface IShutdownServicesOptions {\n  developProcess: ControllableScript\n}\n\nfunction shutdownServices(\n  { developProcess }: IShutdownServicesOptions,\n  signal: NodeJS.Signals\n): Promise<void> {\n  try {\n    telemetryFlush()\n  } catch (e) {\n    // nop\n  }\n  const services = [developProcess.stop(signal)]\n\n  return Promise.all(services)\n    .catch(() => {})\n    .then(() => {})\n}\n"],"mappings":"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"}