{"version":3,"file":"log-line-function.js","names":["forEach","method","old","console","methodArgs","error","Error","stack","split","indexOf","slice","trace","args","apply","concat","trim"],"sources":["../../src/bootstrap/log-line-function.ts"],"sourcesContent":[";[`log`, `warn`].forEach((method: string): void => {\n  const old = console[method]\n\n  console[method] = (...methodArgs: []): void => {\n    const error: Error = new Error()\n    let stack = error.stack ? error.stack.split(/\\n/) : []\n\n    // Chrome includes a single \"Error\" line, FF doesn't.\n    if (stack[0].indexOf(`Error`) === 0) {\n      stack = stack.slice(1)\n    }\n\n    const [, trace] = stack[1] || ``\n    const args: Array<string> = ([] as Array<string>).slice\n      .apply(methodArgs)\n      .concat([trace.trim()])\n\n    return old.apply(console, args)\n  }\n})\n"],"mappings":";;AAAA;AAAC,CAAE,KAAI,EAAG,MAAK,CAAC,CAACA,OAAO,CAAEC,MAAc,IAAW;EACjD,MAAMC,GAAG,GAAGC,OAAO,CAACF,MAAM,CAAC;EAE3BE,OAAO,CAACF,MAAM,CAAC,GAAG,CAAC,GAAGG,UAAc,KAAW;IAC7C,MAAMC,KAAY,GAAG,IAAIC,KAAK,EAAE;IAChC,IAAIC,KAAK,GAAGF,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACE,KAAK,CAACC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;;IAEtD;IACA,IAAID,KAAK,CAAC,CAAC,CAAC,CAACE,OAAO,CAAE,OAAM,CAAC,KAAK,CAAC,EAAE;MACnCF,KAAK,GAAGA,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC;IACxB;IAEA,MAAM,GAAGC,KAAK,CAAC,GAAGJ,KAAK,CAAC,CAAC,CAAC,IAAK,EAAC;IAChC,MAAMK,IAAmB,GAAI,EAAE,CAAmBF,KAAK,CACpDG,KAAK,CAACT,UAAU,CAAC,CACjBU,MAAM,CAAC,CAACH,KAAK,CAACI,IAAI,EAAE,CAAC,CAAC;IAEzB,OAAOb,GAAG,CAACW,KAAK,CAACV,OAAO,EAAES,IAAI,CAAC;EACjC,CAAC;AACH,CAAC,CAAC"}