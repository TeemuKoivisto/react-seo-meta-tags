{"version":3,"file":"babel-loader.js","names":["customOptionsCache","Map","configCache","babelrcFileToCacheKey","customBabelLoader","babelLoader","custom","babel","customOptions","stage","reactRuntime","reactImportSource","isPageTemplate","resourceQuery","rootDir","process","cwd","options","customOptionsCacheKey","has","get","toReturn","loader","cacheIdentifier","JSON","stringify","browsersList","getBrowsersList","version","gatsbyPreset","require","env","getEnv","sourceType","getCustomOptions","set","config","partialConfig","configCacheKey","hasFilesystemConfig","files","forEach","configFilePath","cacheKeysToInvalidate","Set","add","reduxPresets","reduxPlugins","requiredPresets","requiredPlugins","fallbackPresets","prepareOptions","plugins","presets","addRequiredPresetOptions","preset","mergeConfigItemOptions","items","itemToMerge","type","plugin","BabelConfigItemsCacheInvalidatorPlugin","constructor","name","apply","compiler","hooks","invalid","tap","file","cacheKey","delete"],"sources":["../../src/utils/babel-loader.ts"],"sourcesContent":["import babelLoader from \"babel-loader\"\nimport type { Compiler } from \"webpack\"\nimport Babel, { ConfigItem } from \"@babel/core\"\nimport {\n  prepareOptions,\n  getCustomOptions,\n  mergeConfigItemOptions,\n  addRequiredPresetOptions,\n  ICustomOptions,\n} from \"./babel-loader-helpers\"\nimport type { Stage } from \"../commands/types\"\nimport { getBrowsersList } from \"./browserslist\"\n\n/**\n * Gatsby's custom loader for webpack & babel\n *\n * Gatsby allows sites to either use our Babel setup (the default)\n * or to add a .babelrc to take control.\n *\n * Our default setup is defined in the fallbackPlugins/fallbackPresets arrays\n * below.\n *\n * After using either the fallback or user supplied setup, we add on a handful\n * of required plugins and finally merge in any presets/plugins supplied\n * by Gatsby plugins.\n *\n * You can find documentation for the custom loader here: https://babeljs.io/docs/en/next/babel-core.html#loadpartialconfig\n */\n\ninterface IBabelCustomLoader {\n  custom: ICustomOptions\n  loader: Record<string, unknown>\n}\n\nconst customOptionsCache = new Map()\nconst configCache = new Map()\nconst babelrcFileToCacheKey = new Map()\n\nconst customBabelLoader = babelLoader.custom(babel => {\n  return {\n    // Passed the loader options.\n    customOptions({\n      stage = `test` as Stage,\n      reactRuntime = `classic`,\n      reactImportSource,\n      isPageTemplate,\n      resourceQuery,\n      rootDir = process.cwd(),\n      ...options\n    }): IBabelCustomLoader {\n      const customOptionsCacheKey = `${stage}-${isPageTemplate}-${resourceQuery}`\n\n      if (customOptionsCache.has(customOptionsCacheKey)) {\n        return customOptionsCache.get(customOptionsCacheKey)\n      }\n\n      const toReturn = {\n        custom: {\n          stage,\n          reactRuntime,\n          reactImportSource,\n          isPageTemplate,\n          resourceQuery,\n        },\n        loader: {\n          cacheIdentifier: JSON.stringify({\n            browsersList: getBrowsersList(rootDir),\n            babel: babel.version,\n            gatsbyPreset: require(`babel-preset-gatsby/package.json`).version,\n            env: babel.getEnv(),\n          }),\n          sourceType: `unambiguous`,\n          ...getCustomOptions(stage as Stage),\n          ...options,\n        },\n      }\n\n      customOptionsCache.set(customOptionsCacheKey, toReturn)\n\n      return toReturn\n    },\n\n    // Passed Babel's 'PartialConfig' object.\n    config(partialConfig, { customOptions }): Babel.TransformOptions {\n      const { stage, isPageTemplate, resourceQuery } = customOptions\n      let configCacheKey = `${stage}-${isPageTemplate}-${resourceQuery}`\n\n      if (partialConfig.hasFilesystemConfig()) {\n        // partialConfig.files is a Set that accumulates used config files (absolute paths)\n        partialConfig.files.forEach(configFilePath => {\n          configCacheKey += `_${configFilePath}`\n        })\n\n        // after generating configCacheKey add link between babelrc files and cache keys that rely on it\n        // so we can invalidate memoized configs when used babelrc file changes\n        partialConfig.files.forEach(configFilePath => {\n          let cacheKeysToInvalidate = babelrcFileToCacheKey.get(configFilePath)\n          if (!cacheKeysToInvalidate) {\n            cacheKeysToInvalidate = new Set()\n            babelrcFileToCacheKey.set(configFilePath, cacheKeysToInvalidate)\n          }\n\n          cacheKeysToInvalidate.add(configCacheKey)\n        })\n      }\n\n      let { options } = partialConfig\n      if (configCache.has(configCacheKey)) {\n        return { ...options, ...configCache.get(configCacheKey) }\n      }\n\n      const [\n        reduxPresets,\n        reduxPlugins,\n        requiredPresets,\n        requiredPlugins,\n        fallbackPresets,\n      ] = prepareOptions(babel, customOptions)\n\n      // If there is no filesystem babel config present, add our fallback\n      // presets/plugins.\n      if (!partialConfig.hasFilesystemConfig()) {\n        options = {\n          ...options,\n          plugins: requiredPlugins,\n          presets: [...fallbackPresets, ...requiredPresets],\n        }\n      } else {\n        // With a babelrc present, only add our required plugins/presets\n        options = {\n          ...options,\n          plugins: [...options.plugins, ...requiredPlugins],\n          presets: [...options.presets, ...requiredPresets],\n        }\n        // User-defined preset likely contains `babel-preset-gatsby`\n        // Make sure to pass required dynamic options (e.g. `stage` to it):\n        addRequiredPresetOptions(babel, options.presets, customOptions)\n      }\n\n      // Merge in presets/plugins added from gatsby plugins.\n      reduxPresets.forEach(preset => {\n        options.presets = mergeConfigItemOptions({\n          items: options.presets,\n          itemToMerge: preset as ConfigItem,\n          type: `preset`,\n          babel,\n        })\n      })\n\n      reduxPlugins.forEach(plugin => {\n        options.plugins = mergeConfigItemOptions({\n          items: options.plugins,\n          itemToMerge: plugin as ConfigItem,\n          type: `plugin`,\n          babel,\n        })\n      })\n\n      // cache just plugins and presets, because config also includes things like\n      // filenames - this is mostly to not call `mergeConfigItemOptions` for each file\n      // as that function call `babel.createConfigItem` and is quite expensive but also\n      // skips quite a few nested loops on top of that\n      configCache.set(configCacheKey, {\n        plugins: options.plugins,\n        presets: options.presets,\n      })\n\n      return options\n    },\n  }\n})\n\nexport default customBabelLoader\n\nexport class BabelConfigItemsCacheInvalidatorPlugin {\n  name: string\n\n  constructor() {\n    this.name = `BabelConfigItemsCacheInvalidatorPlugin`\n  }\n\n  apply(compiler: Compiler): void {\n    compiler.hooks.invalid.tap(this.name, function (file) {\n      const cacheKeysToInvalidate = babelrcFileToCacheKey.get(file)\n\n      if (cacheKeysToInvalidate) {\n        for (const cacheKey of cacheKeysToInvalidate) {\n          configCache.delete(cacheKey)\n        }\n        babelrcFileToCacheKey.delete(file)\n      }\n    })\n  }\n}\n"],"mappings":"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"}