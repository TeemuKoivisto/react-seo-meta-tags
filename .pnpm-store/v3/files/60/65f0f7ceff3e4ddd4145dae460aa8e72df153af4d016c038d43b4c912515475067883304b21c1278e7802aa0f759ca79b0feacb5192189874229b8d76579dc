{"version":3,"file":"index.js","names":["loadDataStates","customizingSchema","invoke","src","id","onDone","target","sourcingNodes","actions","initialCreatePagesStates","buildingSchema","creatingPages","writingOutRedirects","recreatePagesStates","doneState","done","type","data","gatsbyNodeGraphQLFunction","graphqlRunner","pagesToBuild","pagesToDelete","options","dataLayerActions","services","dataLayerServices","initializeDataMachine","createMachine","predictableActionArguments","context","initial","states","reloadDataMachine","recreatePagesMachine"],"sources":["../../../src/state-machines/data-layer/index.ts"],"sourcesContent":["import { createMachine, StatesConfig, MachineOptions } from \"xstate\"\nimport { dataLayerActions } from \"./actions\"\nimport { IDataLayerContext } from \"./types\"\nimport { dataLayerServices } from \"./services\"\n\nexport type DataLayerResult = Pick<\n  IDataLayerContext,\n  | \"gatsbyNodeGraphQLFunction\"\n  | \"graphqlRunner\"\n  | \"pagesToBuild\"\n  | \"pagesToDelete\"\n>\n\nconst loadDataStates: StatesConfig<IDataLayerContext, any, any> = {\n  customizingSchema: {\n    invoke: {\n      src: `customizeSchema`,\n      id: `customizing-schema`,\n      onDone: {\n        target: `sourcingNodes`,\n      },\n    },\n  },\n  sourcingNodes: {\n    invoke: {\n      src: `sourceNodes`,\n      id: `sourcing-nodes`,\n      onDone: {\n        target: `buildingSchema`,\n        actions: `assignChangedPages`,\n      },\n    },\n  },\n}\n\nconst initialCreatePagesStates: StatesConfig<IDataLayerContext, any, any> = {\n  buildingSchema: {\n    invoke: {\n      id: `building-schema`,\n      src: `buildSchema`,\n      onDone: {\n        target: `creatingPages`,\n        actions: `assignGraphQLRunners`,\n      },\n    },\n  },\n  creatingPages: {\n    invoke: {\n      id: `creating-pages`,\n      src: `createPages`,\n      onDone: {\n        target: `writingOutRedirects`,\n        actions: `assignChangedPages`,\n      },\n    },\n  },\n  writingOutRedirects: {\n    invoke: {\n      src: `writeOutRedirectsAndWatch`,\n      onDone: {\n        target: `done`,\n      },\n    },\n  },\n}\n\nconst recreatePagesStates: StatesConfig<IDataLayerContext, any, any> = {\n  buildingSchema: {\n    invoke: {\n      id: `building-schema`,\n      src: `buildSchema`,\n      onDone: {\n        target: `creatingPages`,\n        actions: `assignGraphQLRunners`,\n      },\n    },\n  },\n  creatingPages: {\n    invoke: {\n      id: `creating-pages`,\n      src: `createPages`,\n      onDone: {\n        target: `done`,\n        actions: `assignChangedPages`,\n      },\n    },\n  },\n}\n\nconst doneState: StatesConfig<IDataLayerContext, any, any> = {\n  done: {\n    type: `final`,\n    data: ({\n      gatsbyNodeGraphQLFunction,\n      graphqlRunner,\n      pagesToBuild,\n      pagesToDelete,\n    }): DataLayerResult => {\n      return {\n        gatsbyNodeGraphQLFunction,\n        graphqlRunner,\n        pagesToBuild,\n        pagesToDelete,\n      }\n    },\n  },\n}\n\nconst options: Partial<MachineOptions<IDataLayerContext, any>> = {\n  actions: dataLayerActions,\n  services: dataLayerServices,\n}\n\n/**\n * Machine used during first run\n */\n\nexport const initializeDataMachine = createMachine(\n  {\n    predictableActionArguments: true,\n    id: `initializeDataMachine`,\n    context: {},\n    initial: `customizingSchema`,\n    states: {\n      ...loadDataStates,\n      ...initialCreatePagesStates,\n      ...doneState,\n    },\n  },\n  options\n)\n\n/**\n * Machine used when we need to source nodes again\n */\n\nexport const reloadDataMachine = createMachine(\n  {\n    predictableActionArguments: true,\n    id: `reloadDataMachine`,\n    context: {},\n    initial: `customizingSchema`,\n    states: {\n      ...loadDataStates,\n      ...recreatePagesStates,\n      ...doneState,\n    },\n  },\n  options\n)\n\n/**\n * Machine used when we need to re-create pages after a\n * node mutation outside of sourceNodes\n */\nexport const recreatePagesMachine = createMachine(\n  {\n    predictableActionArguments: true,\n    id: `recreatePagesMachine`,\n    context: {},\n    initial: `buildingSchema`,\n    states: {\n      ...recreatePagesStates,\n      ...doneState,\n    },\n  },\n  options\n)\n"],"mappings":"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"}