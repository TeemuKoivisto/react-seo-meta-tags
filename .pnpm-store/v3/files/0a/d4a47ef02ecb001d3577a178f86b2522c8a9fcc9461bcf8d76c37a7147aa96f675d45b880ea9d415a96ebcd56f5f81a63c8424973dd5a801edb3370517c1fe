{"version":3,"file":"common.js","names":["isDesc","sortOrder","resolveFieldValue","dottedFieldPath","nodeOrThunk","resolvedNodeFields","result","getValueAt","node","matchesFilter","filter","fieldValue","comparator","DbComparator","EQ","value","IN","arr","Array","isArray","some","v","GT","compareKey","GTE","LT","LTE","NE","NIN","every","REGEX","RegExp","test","String","cartesianProduct","reduce","a","b","flatMap","d","map","e","typeOrder","symbol","undefined","boolean","number","string","arrayComparison","i","Symbol","keyFor"],"sources":["../../../../src/datastore/lmdb/query/common.ts"],"sourcesContent":["import { DbComparator, IDbFilterStatement } from \"../../common/query\"\nimport { IGatsbyNode } from \"../../../redux/types\"\nimport { getValueAt } from \"../../../utils/get-value-at\"\n\nexport function isDesc(\n  sortOrder: \"asc\" | \"desc\" | \"ASC\" | \"DESC\" | boolean | void\n): boolean {\n  return sortOrder === `desc` || sortOrder === `DESC` || sortOrder === false\n}\n\n/**\n * Given dotted field selector (e.g. `foo.bar`) returns a plain list of values matching this selector.\n * It is possible that the path maps to several values when one of the intermediate values is an array.\n *\n * Example node:\n * {\n *   foo: [{ bar: `bar1`}, { bar: `bar2` }]\n * }\n *\n * In this case resolveFieldValue([`foo`, `bar`], node) returns [`bar1`, `bar2`]\n *\n * When `resolvedNodeFields` argument is passed the function first looks for values in this object\n * and only looks in the node if the value is not found in `resolvedNodeFields`\n */\nexport function resolveFieldValue(\n  dottedFieldPath: string | Array<string>,\n  nodeOrThunk: IGatsbyNode | (() => IGatsbyNode),\n  resolvedNodeFields?: { [field: string]: unknown }\n): unknown {\n  let result\n  if (resolvedNodeFields) {\n    result = getValueAt(resolvedNodeFields, dottedFieldPath)\n  }\n  if (typeof result !== `undefined`) {\n    return result\n  }\n  const node = typeof nodeOrThunk === `function` ? nodeOrThunk() : nodeOrThunk\n  return getValueAt(node, dottedFieldPath)\n}\n\nexport function matchesFilter(\n  filter: IDbFilterStatement,\n  fieldValue: unknown\n): boolean {\n  switch (filter.comparator) {\n    case DbComparator.EQ:\n      return filter.value === null\n        ? filter.value == fieldValue\n        : filter.value === fieldValue\n    case DbComparator.IN: {\n      const arr = Array.isArray(filter.value) ? filter.value : [filter.value]\n      return arr.some(v => (v === null ? v == fieldValue : v === fieldValue))\n    }\n    case DbComparator.GT:\n      return compareKey(fieldValue, filter.value) > 0\n    case DbComparator.GTE:\n      return compareKey(fieldValue, filter.value) >= 0\n    case DbComparator.LT:\n      return compareKey(fieldValue, filter.value) < 0\n    case DbComparator.LTE:\n      return compareKey(fieldValue, filter.value) <= 0\n    case DbComparator.NE:\n    case DbComparator.NIN: {\n      const arr = Array.isArray(filter.value) ? filter.value : [filter.value]\n      return arr.every(v => (v === null ? v != fieldValue : v !== fieldValue))\n    }\n    case DbComparator.REGEX: {\n      if (typeof fieldValue !== `undefined` && filter.value instanceof RegExp) {\n        return filter.value.test(String(fieldValue))\n      }\n      return false\n    }\n  }\n  return false\n}\n\nexport function cartesianProduct(...arr: Array<Array<any>>): Array<any> {\n  return arr.reduce((a, b) => a.flatMap(d => b.map(e => [...d, e])), [[]])\n}\n\nconst typeOrder = {\n  symbol: 0,\n  undefined: 1,\n  boolean: 2,\n  number: 3,\n  string: 4,\n}\n\n// Note: this is a copy of this function from lmdb-store:\n// https://github.com/DoctorEvidence/lmdb-store/blob/e1e53d6d2012ec22071a8fb7fa3b47f8886b22d2/index.js#L1259-L1300\n// We need it here to avoid imports from \"lmdb-store\" while it is not a direct dependency\n// FIXME: replace with an import in v4\nexport function compareKey(a: unknown, b: unknown): number {\n  // compare with type consistency that matches ordered-binary\n  if (typeof a == `object`) {\n    if (!a) {\n      return b == null ? 0 : -1\n    }\n    if (a[`compare`]) {\n      if (b == null) {\n        return 1\n      } else if (typeof b === `object` && b !== null && b[`compare`]) {\n        return a[`compare`](b)\n      } else {\n        return -1\n      }\n    }\n    let arrayComparison\n    if (b instanceof Array) {\n      let i = 0\n      while (\n        (arrayComparison = compareKey(a[i], b[i])) == 0 &&\n        i <= a[`length`]\n      ) {\n        i++\n      }\n      return arrayComparison\n    }\n    arrayComparison = compareKey(a[0], b)\n    if (arrayComparison == 0 && a[`length`] > 1) return 1\n    return arrayComparison\n  } else if (typeof a == typeof b) {\n    if (typeof a === `symbol` && typeof b === `symbol`) {\n      a = Symbol.keyFor(a)\n      b = Symbol.keyFor(b)\n    }\n    return (a as any) < (b as any) ? -1 : a === b ? 0 : 1\n  } else if (typeof b == `object`) {\n    if (b instanceof Array) return -compareKey(b, a)\n    return 1\n  } else {\n    return typeOrder[typeof a] < typeOrder[typeof b] ? -1 : 1\n  }\n}\n"],"mappings":"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"}