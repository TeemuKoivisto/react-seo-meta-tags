{"version":3,"file":"indicator.js","names":["window","Error","module","hot","accept","___gatsbyDidShowLoadingIndicatorBefore","Indicator","visible","isLoadingIndicatorEnabled","debugLog","location","origin","toString"],"sources":["../../loading-indicator/indicator.js"],"sourcesContent":["import * as React from \"react\"\nimport { ShadowPortal } from \"../shadow-portal\"\nimport { Style } from \"./style\"\nimport { isLoadingIndicatorEnabled } from \"$virtual/loading-indicator\"\nimport { debugLog } from \"../debug-log\"\n\nif (typeof window === `undefined`) {\n  throw new Error(\n    `Loading indicator should never be imported in code that doesn't target only browsers`\n  )\n}\n\nif (module.hot) {\n  module.hot.accept(`$virtual/loading-indicator`, () => {\n    // isLoadingIndicatorEnabled is imported with ES import so no need\n    // for dedicated handling as HMR just replace it in that case\n  })\n}\n\n// HMR can rerun this, so check if it was set before\n// we also set it on window and not just in module scope because of HMR resetting\n// module scope\nif (typeof window.___gatsbyDidShowLoadingIndicatorBefore === `undefined`) {\n  window.___gatsbyDidShowLoadingIndicatorBefore = false\n}\n\nexport function Indicator({ visible = true }) {\n  if (!isLoadingIndicatorEnabled()) {\n    return null\n  }\n\n  if (!window.___gatsbyDidShowLoadingIndicatorBefore) {\n    // not ideal to this in render function, but that's just console info\n    debugLog(\n      `A loading indicator is displayed in-browser whenever content is being requested upon navigation (Query On Demand).\\n\\nYou can disable the loading indicator for your current session by visiting ${window.location.origin}/___loading-indicator/disable`\n    )\n    window.___gatsbyDidShowLoadingIndicatorBefore = true\n  }\n\n  return (\n    <ShadowPortal identifier=\"gatsby-qod\">\n      <Style />\n      <div\n        data-gatsby-loading-indicator=\"root\"\n        // preact doesn't render data attributes with a literal bool false value to dom\n        data-gatsby-loading-indicator-visible={visible.toString()}\n        aria-live=\"assertive\"\n      >\n        <div data-gatsby-loading-indicator=\"spinner\" aria-hidden=\"true\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"currentColor\"\n          >\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\" />\n          </svg>\n        </div>\n        <div data-gatsby-loading-indicator=\"text\">\n          {visible ? `Preparing requested page` : ``}\n        </div>\n      </div>\n    </ShadowPortal>\n  )\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AAAuC;AAAA;AAEvC,IAAI,OAAOA,MAAM,KAAM,WAAU,EAAE;EACjC,MAAM,IAAIC,KAAK,CACZ,sFAAqF,CACvF;AACH;AAEA,IAAIC,MAAM,CAACC,GAAG,EAAE;EACdD,MAAM,CAACC,GAAG,CAACC,MAAM,CAAE,4BAA2B,EAAE,MAAM;IACpD;IACA;EAAA,CACD,CAAC;AACJ;;AAEA;AACA;AACA;AACA,IAAI,OAAOJ,MAAM,CAACK,sCAAsC,KAAM,WAAU,EAAE;EACxEL,MAAM,CAACK,sCAAsC,GAAG,KAAK;AACvD;AAEO,SAASC,SAAS,CAAC;EAAEC,OAAO,GAAG;AAAK,CAAC,EAAE;EAC5C,IAAI,CAAC,IAAAC,2CAAyB,GAAE,EAAE;IAChC,OAAO,IAAI;EACb;EAEA,IAAI,CAACR,MAAM,CAACK,sCAAsC,EAAE;IAClD;IACA,IAAAI,kBAAQ,EACL,oMAAmMT,MAAM,CAACU,QAAQ,CAACC,MAAO,+BAA8B,CAC1P;IACDX,MAAM,CAACK,sCAAsC,GAAG,IAAI;EACtD;EAEA,oBACE,oBAAC,0BAAY;IAAC,UAAU,EAAC;EAAY,gBACnC,oBAAC,YAAK,OAAG,eACT;IACE,iCAA8B;IAC9B;IAAA;IACA,yCAAuCE,OAAO,CAACK,QAAQ,EAAG;IAC1D,aAAU;EAAW,gBAErB;IAAK,iCAA8B,SAAS;IAAC,eAAY;EAAM,gBAC7D;IACE,KAAK,EAAC,4BAA4B;IAClC,OAAO,EAAC,WAAW;IACnB,IAAI,EAAC;EAAc,gBAEnB;IAAM,CAAC,EAAC,eAAe;IAAC,IAAI,EAAC;EAAM,EAAG,eACtC;IAAM,CAAC,EAAC;EAAwO,EAAG,CAC/O,CACF,eACN;IAAK,iCAA8B;EAAM,GACtCL,OAAO,GAAI,0BAAyB,GAAI,EAAC,CACtC,CACF,CACO;AAEnB"}