{"version":3,"file":"webpack-logging.js","names":["WebpackLoggingPlugin","PLUGIN_NAME","isVerbose","constructor","rootDir","reporter","apply","compiler","options","infrastructureLogging","level","debug","profile","ProgressPlugin","webpackBundleAnalyzerPath","resolveFrom","silent","hooks","beforeRun","tapPromise","then","BundleAnalyzerPlugin","analyzerMode","openAnalyzer","title","name","reportFilename","done","tap","stats","log","toString","colors","logging"],"sources":["../../../../src/utils/webpack/plugins/webpack-logging.ts"],"sourcesContent":["import { ProgressPlugin } from \"webpack\"\nimport resolveFrom from \"resolve-from\"\nimport type reporter from \"gatsby-cli/lib/reporter\"\nimport type { Compiler } from \"webpack\"\n\ntype Reporter = typeof reporter\n\nexport class WebpackLoggingPlugin {\n  private PLUGIN_NAME = `WebpackLogging`\n  private rootDir: string\n  private reporter: Reporter\n  private isVerbose = false\n\n  constructor(rootDir: string, reporter: Reporter, isVerbose = false) {\n    this.rootDir = rootDir\n    this.reporter = reporter\n    this.isVerbose = isVerbose\n  }\n\n  apply(compiler: Compiler): void {\n    compiler.options.infrastructureLogging = {\n      level: `verbose`,\n      debug: /FileSystemInfo/,\n    }\n    compiler.options.profile = true\n\n    new ProgressPlugin({\n      profile: true,\n    }).apply(compiler)\n\n    // if webpack bundle analyzer is installed lets use it\n    const webpackBundleAnalyzerPath = resolveFrom.silent(\n      this.rootDir,\n      `webpack-bundle-analyzer`\n    )\n    if (webpackBundleAnalyzerPath) {\n      compiler.hooks.beforeRun.tapPromise(this.PLUGIN_NAME, () =>\n        import(webpackBundleAnalyzerPath).then(({ BundleAnalyzerPlugin }) => {\n          new BundleAnalyzerPlugin({\n            analyzerMode: `static`,\n            openAnalyzer: false,\n            title: compiler.name,\n            reportFilename: `report.html`,\n          }).apply(compiler)\n        })\n      )\n    }\n\n    compiler.hooks.done.tap(this.PLUGIN_NAME, stats => {\n      this.reporter.log(\n        stats.toString({\n          colors: true,\n          logging: this.isVerbose ? `verbose` : `log`,\n        })\n      )\n    })\n  }\n}\n"],"mappings":";;;;;AAAA;AACA;AAAsC;AAAA;AAM/B,MAAMA,oBAAoB,CAAC;EACxBC,WAAW,GAAI,gBAAe;EAG9BC,SAAS,GAAG,KAAK;EAEzBC,WAAW,CAACC,OAAe,EAAEC,QAAkB,EAAEH,SAAS,GAAG,KAAK,EAAE;IAClE,IAAI,CAACE,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACH,SAAS,GAAGA,SAAS;EAC5B;EAEAI,KAAK,CAACC,QAAkB,EAAQ;IAC9BA,QAAQ,CAACC,OAAO,CAACC,qBAAqB,GAAG;MACvCC,KAAK,EAAG,SAAQ;MAChBC,KAAK,EAAE;IACT,CAAC;IACDJ,QAAQ,CAACC,OAAO,CAACI,OAAO,GAAG,IAAI;IAE/B,IAAIC,uBAAc,CAAC;MACjBD,OAAO,EAAE;IACX,CAAC,CAAC,CAACN,KAAK,CAACC,QAAQ,CAAC;;IAElB;IACA,MAAMO,yBAAyB,GAAGC,oBAAW,CAACC,MAAM,CAClD,IAAI,CAACZ,OAAO,EACX,yBAAwB,CAC1B;IACD,IAAIU,yBAAyB,EAAE;MAC7BP,QAAQ,CAACU,KAAK,CAACC,SAAS,CAACC,UAAU,CAAC,IAAI,CAAClB,WAAW,EAAE,MACpD,mBAAOa,yBAAyB,mDAAEM,IAAI,CAAC,CAAC;QAAEC;MAAqB,CAAC,KAAK;QACnE,IAAIA,oBAAoB,CAAC;UACvBC,YAAY,EAAG,QAAO;UACtBC,YAAY,EAAE,KAAK;UACnBC,KAAK,EAAEjB,QAAQ,CAACkB,IAAI;UACpBC,cAAc,EAAG;QACnB,CAAC,CAAC,CAACpB,KAAK,CAACC,QAAQ,CAAC;MACpB,CAAC,CAAC,CACH;IACH;IAEAA,QAAQ,CAACU,KAAK,CAACU,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC3B,WAAW,EAAE4B,KAAK,IAAI;MACjD,IAAI,CAACxB,QAAQ,CAACyB,GAAG,CACfD,KAAK,CAACE,QAAQ,CAAC;QACbC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE,IAAI,CAAC/B,SAAS,GAAI,SAAQ,GAAI;MACzC,CAAC,CAAC,CACH;IACH,CAAC,CAAC;EACJ;AACF;AAAC"}