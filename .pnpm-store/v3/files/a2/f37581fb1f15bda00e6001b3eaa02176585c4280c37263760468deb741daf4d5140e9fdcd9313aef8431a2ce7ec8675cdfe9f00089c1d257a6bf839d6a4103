{"version":3,"file":"page-data-helpers.js","names":["traverseSlicesUsedByTemplates","pagePath","componentPath","overrideSlices","slicesUsedByTemplates","slices","formattedSlices","handledSlices","Set","has","add","slicesUsedByComponent","get","sliceSlot","sliceConf","Object","entries","concreteSliceForSliceSlot","slice","allowEmpty","message","reporter","panicOnBuild","Error","constructPageDataString","componentChunkName","matchPath","path","staticQueryHashes","manifestId","result","body","JSON","stringify","process","env","GATSBY_SLICES","reverseFixedPagePath","pageDataRequestPath","getPagePathFromPageDataPath","pageDataPath","matches","matchAll","requestedPagePath"],"sources":["../../src/utils/page-data-helpers.ts"],"sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\nimport type { IStructuredError } from \"gatsby-cli/src/structured-errors/types\"\nimport { IGatsbyPage, IGatsbyState } from \"../redux/types\"\nimport { ICollectedSlices } from \"./babel/find-slices\"\n\ninterface IPageDataBase {\n  componentChunkName: IGatsbyPage[\"componentChunkName\"]\n  matchPath: IGatsbyPage[\"matchPath\"]\n  path: IGatsbyPage[\"path\"]\n  staticQueryHashes: Array<string>\n  getServerDataError?: IStructuredError | Array<IStructuredError> | null\n  manifestId?: string\n}\nexport type IPageDataInput = IPageDataBase & {\n  slices: Record<string, string>\n  componentPath: string\n}\n\nexport type IPageData = IPageDataBase & {\n  slicesMap: Record<string, string>\n}\n\nfunction traverseSlicesUsedByTemplates(\n  pagePath: string,\n  componentPath: string,\n  overrideSlices: Record<string, string>,\n  slicesUsedByTemplates: Map<string, ICollectedSlices>,\n  slices: IGatsbyState[\"slices\"],\n  formattedSlices: Record<string, string> = {},\n  handledSlices: Set<string> = new Set<string>()\n): Record<string, string> | null {\n  if (handledSlices.has(componentPath)) {\n    return null\n  } else {\n    handledSlices.add(componentPath)\n  }\n\n  const slicesUsedByComponent = slicesUsedByTemplates.get(componentPath)\n  if (!slicesUsedByComponent) {\n    return null\n  }\n\n  for (const [sliceSlot, sliceConf] of Object.entries(slicesUsedByComponent)) {\n    let concreteSliceForSliceSlot = sliceSlot\n\n    if (overrideSlices && overrideSlices[sliceSlot]) {\n      concreteSliceForSliceSlot = overrideSlices[sliceSlot]\n    }\n\n    const slice = slices.get(concreteSliceForSliceSlot)\n    if (!slice) {\n      if (sliceConf.allowEmpty) {\n        continue\n      } else {\n        const message =\n          `Could not find slice \"${concreteSliceForSliceSlot}\" used by page \"${pagePath}\". ` +\n          `Please check your createPages in your gatsby-node to verify this ` +\n          `is the correct name or set allowEmpty to true.`\n\n        reporter.panicOnBuild(new Error(message))\n        continue\n      }\n    }\n\n    formattedSlices[sliceSlot] = concreteSliceForSliceSlot\n\n    // recursively repeat for found slice to find all nested slices\n    traverseSlicesUsedByTemplates(\n      pagePath,\n      slice.componentPath,\n      overrideSlices,\n      slicesUsedByTemplates,\n      slices,\n      formattedSlices,\n      handledSlices\n    )\n  }\n\n  return formattedSlices\n}\n\nexport function constructPageDataString(\n  {\n    componentChunkName,\n    componentPath,\n    matchPath,\n    path: pagePath,\n    staticQueryHashes,\n    manifestId,\n    slices: overrideSlices,\n  }: IPageDataInput,\n  result: string | Buffer,\n  slicesUsedByTemplates: Map<string, ICollectedSlices>,\n  slices: IGatsbyState[\"slices\"]\n): string {\n  let body =\n    `{` +\n    `\"componentChunkName\":\"${componentChunkName}\",` +\n    (pagePath ? `\"path\":${JSON.stringify(pagePath)},` : ``) +\n    `\"result\":${result},` +\n    `\"staticQueryHashes\":${JSON.stringify(staticQueryHashes)}`\n\n  if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n    const formattedSlices = traverseSlicesUsedByTemplates(\n      pagePath,\n      componentPath,\n      overrideSlices,\n      slicesUsedByTemplates,\n      slices\n    )\n\n    if (formattedSlices) {\n      body += `,\"slicesMap\":${JSON.stringify(formattedSlices)}`\n    }\n  }\n\n  if (matchPath) {\n    body += `,\"matchPath\":\"${matchPath}\"`\n  }\n\n  if (manifestId) {\n    body += `,\"manifestId\":\"${manifestId}\"`\n  }\n\n  body += `}`\n\n  return body\n}\n\nexport function reverseFixedPagePath(pageDataRequestPath: string): string {\n  return pageDataRequestPath === `index` ? `/` : pageDataRequestPath\n}\n\nexport function getPagePathFromPageDataPath(\n  pageDataPath: string\n): string | null {\n  const matches = pageDataPath.matchAll(\n    /^\\/?page-data\\/(.+)\\/page-data.json$/gm\n  )\n  for (const [, requestedPagePath] of matches) {\n    return reverseFixedPagePath(requestedPagePath)\n  }\n\n  return null\n}\n"],"mappings":"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"}