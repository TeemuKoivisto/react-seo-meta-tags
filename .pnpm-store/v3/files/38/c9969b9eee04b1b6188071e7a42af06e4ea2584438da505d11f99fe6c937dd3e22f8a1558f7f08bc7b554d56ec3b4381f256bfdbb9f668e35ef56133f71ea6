{"version":3,"file":"get-ssl-cert.js","names":["absoluteOrDirectory","directory","filePath","path","isAbsolute","join","getWindowsEncryptionPassword","report","info","results","prompts","type","name","message","validate","input","length","value","getSslCert","certFile","keyFile","caFile","panic","id","context","keyPath","certPath","process","env","NODE_EXTRA_CA_CERTS","key","fs","readFileSync","cert","includes","os","platform","HOME","mkdtemp","mkdtempSync","tmpdir","getDevCert","require","certificateFor","caPath","getCaPath","skipCertutilInstall","ui","toString","err","error"],"sources":["../../src/utils/get-ssl-cert.ts"],"sourcesContent":["import report from \"gatsby-cli/lib/reporter\"\nimport fs from \"fs\"\nimport path from \"path\"\nimport os from \"os\"\nimport { ICert } from \"../commands/types\"\nimport prompts from \"prompts\"\n\nconst absoluteOrDirectory = (directory: string, filePath: string): string => {\n  // Support absolute paths\n  if (path.isAbsolute(filePath)) {\n    return filePath\n  }\n  return path.join(directory, filePath)\n}\n\nconst getWindowsEncryptionPassword = async (): Promise<string> => {\n  report.info(\n    [\n      `A password is required to access the secure certificate authority key`,\n      `used for signing certificates.`,\n      ``,\n      `If this is the first time this has run, then this is to set the password`,\n      `for future use.  If any new certificates are signed later, you will need`,\n      `to use this same password.`,\n      ``,\n    ].join(`\\n`)\n  )\n  const results = await prompts({\n    type: `password`,\n    name: `value`,\n    message: `Please enter the CA password`,\n    validate: input => input.length > 0 || `You must enter a password.`,\n  })\n  return results.value\n}\n\nexport interface IGetSslCertArgs {\n  name: string\n  certFile?: string\n  keyFile?: string\n  caFile?: string\n  directory: string\n}\n\nexport async function getSslCert({\n  name,\n  certFile,\n  keyFile,\n  caFile,\n  directory,\n}: IGetSslCertArgs): Promise<ICert | false> {\n  // check that cert file and key file are both true or both false, if they are both\n  // false, it defaults to the automatic ssl\n  if (certFile ? !keyFile : keyFile) {\n    report.panic({\n      id: `11521`,\n      context: {},\n    })\n  }\n\n  if (certFile && keyFile) {\n    const keyPath = absoluteOrDirectory(directory, keyFile)\n    const certPath = absoluteOrDirectory(directory, certFile)\n\n    process.env.NODE_EXTRA_CA_CERTS = caFile\n      ? absoluteOrDirectory(directory, caFile)\n      : certPath\n    return {\n      key: fs.readFileSync(keyPath, `utf-8`),\n      cert: fs.readFileSync(certPath, `utf-8`),\n    }\n  }\n\n  report.info(\n    `setting up automatic SSL certificate (may require elevated permissions/sudo)\\n`\n  )\n  try {\n    if ([`linux`, `darwin`].includes(os.platform()) && !process.env.HOME) {\n      // this is a total hack to ensure process.env.HOME is set on linux and mac\n      // devcert creates config path at import time (hence we import devcert after setting dummy value):\n      // - https://github.com/davewasmer/devcert/blob/2b1b8d40eda251616bf74fd69f00ae8222ca1171/src/constants.ts#L15\n      // - https://github.com/LinusU/node-application-config-path/blob/ae49ff6748b68b29ec76c00ce4a28ba8e9161d9b/index.js#L13\n      // if HOME is not set, we will get:\n      // \"The \"path\" argument must be of type s tring. Received type undefined\"\n      // fatal error. This still likely will result in fatal error, but at least it's not on import time\n      const mkdtemp = fs.mkdtempSync(path.join(os.tmpdir(), `home-`))\n      process.env.HOME = mkdtemp\n    }\n    const getDevCert = require(`devcert`).certificateFor\n    const { caPath, key, cert } = await getDevCert(name, {\n      getCaPath: true,\n      skipCertutilInstall: false,\n      ui: {\n        getWindowsEncryptionPassword,\n      },\n    })\n    if (caPath) {\n      process.env.NODE_EXTRA_CA_CERTS = caPath\n    }\n    return {\n      key: key.toString(),\n      cert: cert.toString(),\n    }\n  } catch (err) {\n    report.panic({\n      id: `11522`,\n      error: err,\n      context: {\n        message: err.message,\n      },\n    })\n  }\n\n  return false\n}\n"],"mappings":"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"}