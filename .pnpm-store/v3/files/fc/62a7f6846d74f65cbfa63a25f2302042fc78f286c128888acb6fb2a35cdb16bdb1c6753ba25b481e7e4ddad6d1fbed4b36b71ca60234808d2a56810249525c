{"version":3,"file":"import-gatsby-plugin.js","names":["pluginModuleCache","Map","setGatsbyPluginCache","plugin","module","moduleObject","key","name","set","additionalPrefix","importKey","resolve","importGatsbyPlugin","pluginModule","get","importPluginModulePath","resolvedCompiledGatsbyNode","pluginFilePath","resolveJSFilepath","rootDir","process","cwd","filePath","rawPluginModule","maybeAddFileProtocol","preferDefault"],"sources":["../../src/utils/import-gatsby-plugin.ts"],"sourcesContent":["import {\n  resolveJSFilepath,\n  maybeAddFileProtocol,\n} from \"../bootstrap/resolve-js-file-path\"\nimport { preferDefault } from \"../bootstrap/prefer-default\"\n\nconst pluginModuleCache = new Map<string, any>()\n\nexport function setGatsbyPluginCache(\n  plugin: { name: string; resolve: string; importKey?: string },\n  module: string,\n  moduleObject: any\n): void {\n  const key = `${plugin.name}/${module}`\n  pluginModuleCache.set(key, moduleObject)\n\n  const additionalPrefix = plugin.importKey || plugin.resolve\n  if (additionalPrefix) {\n    const key = `${additionalPrefix}/${module}`\n    pluginModuleCache.set(key, moduleObject)\n  }\n}\n\nexport async function importGatsbyPlugin(\n  plugin: {\n    name: string\n    resolve: string\n    resolvedCompiledGatsbyNode?: string\n    importKey?: string\n  },\n  module: string\n): Promise<any> {\n  const key = `${plugin.importKey || plugin.resolve || plugin.name}/${module}`\n\n  let pluginModule = pluginModuleCache.get(key)\n\n  if (!pluginModule) {\n    let importPluginModulePath: string\n\n    if (module === `gatsby-node` && plugin.resolvedCompiledGatsbyNode) {\n      importPluginModulePath = plugin.resolvedCompiledGatsbyNode\n    } else {\n      importPluginModulePath = `${plugin.resolve}/${module}`\n    }\n\n    const pluginFilePath = await resolveJSFilepath({\n      rootDir: process.cwd(),\n      filePath: importPluginModulePath,\n    })\n\n    const rawPluginModule = await import(maybeAddFileProtocol(pluginFilePath))\n\n    // If the module is cjs, the properties we care about are nested under a top-level `default` property\n    pluginModule = preferDefault(rawPluginModule)\n\n    pluginModuleCache.set(key, pluginModule)\n  }\n\n  return pluginModule\n}\n"],"mappings":";;;;;AAAA;AAIA;AAEA,MAAMA,iBAAiB,GAAG,IAAIC,GAAG,EAAe;AAEzC,SAASC,oBAAoB,CAClCC,MAA6D,EAC7DC,MAAc,EACdC,YAAiB,EACX;EACN,MAAMC,GAAG,GAAI,GAAEH,MAAM,CAACI,IAAK,IAAGH,MAAO,EAAC;EACtCJ,iBAAiB,CAACQ,GAAG,CAACF,GAAG,EAAED,YAAY,CAAC;EAExC,MAAMI,gBAAgB,GAAGN,MAAM,CAACO,SAAS,IAAIP,MAAM,CAACQ,OAAO;EAC3D,IAAIF,gBAAgB,EAAE;IACpB,MAAMH,GAAG,GAAI,GAAEG,gBAAiB,IAAGL,MAAO,EAAC;IAC3CJ,iBAAiB,CAACQ,GAAG,CAACF,GAAG,EAAED,YAAY,CAAC;EAC1C;AACF;AAEO,eAAeO,kBAAkB,CACtCT,MAKC,EACDC,MAAc,EACA;EACd,MAAME,GAAG,GAAI,GAAEH,MAAM,CAACO,SAAS,IAAIP,MAAM,CAACQ,OAAO,IAAIR,MAAM,CAACI,IAAK,IAAGH,MAAO,EAAC;EAE5E,IAAIS,YAAY,GAAGb,iBAAiB,CAACc,GAAG,CAACR,GAAG,CAAC;EAE7C,IAAI,CAACO,YAAY,EAAE;IACjB,IAAIE,sBAA8B;IAElC,IAAIX,MAAM,KAAM,aAAY,IAAID,MAAM,CAACa,0BAA0B,EAAE;MACjED,sBAAsB,GAAGZ,MAAM,CAACa,0BAA0B;IAC5D,CAAC,MAAM;MACLD,sBAAsB,GAAI,GAAEZ,MAAM,CAACQ,OAAQ,IAAGP,MAAO,EAAC;IACxD;IAEA,MAAMa,cAAc,GAAG,MAAM,IAAAC,oCAAiB,EAAC;MAC7CC,OAAO,EAAEC,OAAO,CAACC,GAAG,EAAE;MACtBC,QAAQ,EAAEP;IACZ,CAAC,CAAC;IAEF,MAAMQ,eAAe,GAAG,MAAM,MAAM,CAAC,IAAAC,uCAAoB,EAACP,cAAc,CAAC,CAAC;;IAE1E;IACAJ,YAAY,GAAG,IAAAY,4BAAa,EAACF,eAAe,CAAC;IAE7CvB,iBAAiB,CAACQ,GAAG,CAACF,GAAG,EAAEO,YAAY,CAAC;EAC1C;EAEA,OAAOA,YAAY;AACrB"}