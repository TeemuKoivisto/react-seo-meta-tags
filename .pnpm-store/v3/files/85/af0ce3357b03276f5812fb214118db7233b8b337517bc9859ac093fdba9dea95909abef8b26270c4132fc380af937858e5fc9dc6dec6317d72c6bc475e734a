{"version":3,"file":"call-deferred-api.js","names":["callRealApi","event","store","assertStore","type","payload","resolve","actions","action","result","dispatch","reporter","log"],"sources":["../../src/utils/call-deferred-api.ts"],"sourcesContent":["import { assertStore } from \"./assert-store\"\nimport { Store } from \"redux\"\nimport { IMutationAction } from \"../services\"\nimport { actions } from \"../redux/actions\"\nimport reporter from \"gatsby-cli/lib/reporter\"\n/**\n * These are the deferred redux actions sent from api-runner-node\n * They may include a `resolve` prop (if they are createNode actions).\n * If so, we resolve the promise when we're done\n */\nexport const callRealApi = (event: IMutationAction, store?: Store): void => {\n  assertStore(store)\n  const { type, payload, resolve } = event\n  if (type in actions) {\n    // If this is a createNode action then this will be a thunk.\n    // No worries, we just dispatch it like any other\n    const action = actions[type](...payload)\n    const result = store.dispatch(action)\n    // Somebody may be waiting for this\n    if (resolve) {\n      resolve(result)\n    }\n  } else {\n    reporter.log(`Could not dispatch unknown action \"${type}`)\n  }\n}\n"],"mappings":";;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,WAAW,GAAG,CAACC,KAAsB,EAAEC,KAAa,KAAW;EAC1E,IAAAC,wBAAW,EAACD,KAAK,CAAC;EAClB,MAAM;IAAEE,IAAI;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGL,KAAK;EACxC,IAAIG,IAAI,IAAIG,gBAAO,EAAE;IACnB;IACA;IACA,MAAMC,MAAM,GAAGD,gBAAO,CAACH,IAAI,CAAC,CAAC,GAAGC,OAAO,CAAC;IACxC,MAAMI,MAAM,GAAGP,KAAK,CAACQ,QAAQ,CAACF,MAAM,CAAC;IACrC;IACA,IAAIF,OAAO,EAAE;MACXA,OAAO,CAACG,MAAM,CAAC;IACjB;EACF,CAAC,MAAM;IACLE,iBAAQ,CAACC,GAAG,CAAE,sCAAqCR,IAAK,EAAC,CAAC;EAC5D;AACF,CAAC;AAAA"}