{"version":3,"file":"entry.js","names":["tracerReadyPromise","initTracer","process","env","GATSBY_OPEN_TRACING_CONFIG_FILE","GraphQLEngine","constructor","dbPath","setupLmdbStore","getRunner","_doGetRunner","wrapActivity","reporter","phantomActivity","start","store","dispatch","actions","createTypes","SCHEMA_SNAPSHOT","type","payload","flattenedPlugins","plugin","gatsbyNodes","name","module","importKey","setGatsbyPluginCache","resolve","gatsbyWorkers","apiRunnerNode","parentSpan","span","build","fullMetadataBuild","GraphQLRunner","end","runnerPromise","ready","runQuery","query","context","opts","engineContext","requestId","uuid","v4","doRunQuery","queryName","undefined","gettingRunnerActivity","graphqlRunner","result","waitingForJobsCreatedByCurrentRequestActivity","waitJobsByRequest","runWithEngineContext","findPageByPath","pathName","state","pages","get","getDataStore","getNode","values","iterateNodesByType"],"sources":["../../../src/schema/graphql-engine/entry.ts"],"sourcesContent":["// \"bootstrap\" must be first import, as it sets up multiple globals that need to be set early\n// see details in that module\nimport \"./bootstrap\"\n\nimport { ExecutionResult, Source } from \"graphql\"\nimport { uuid } from \"gatsby-core-utils\"\nimport { build } from \"../index\"\nimport { setupLmdbStore } from \"../../datastore/lmdb/lmdb-datastore\"\nimport { store } from \"../../redux\"\nimport { actions } from \"../../redux/actions\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { GraphQLRunner, IQueryOptions } from \"../../query/graphql-runner\"\nimport { waitJobsByRequest } from \"../../utils/wait-until-jobs-complete\"\nimport { setGatsbyPluginCache } from \"../../utils/import-gatsby-plugin\"\nimport apiRunnerNode from \"../../utils/api-runner-node\"\nimport type { IGatsbyPage, IGatsbyState } from \"../../redux/types\"\nimport { findPageByPath } from \"../../utils/find-page-by-path\"\nimport { runWithEngineContext } from \"../../utils/engine-context\"\nimport { getDataStore } from \"../../datastore\"\nimport {\n  gatsbyNodes,\n  gatsbyWorkers,\n  flattenedPlugins,\n  // @ts-ignore\n} from \".cache/query-engine-plugins\"\nimport { initTracer } from \"../../utils/tracer\"\n\ntype MaybePhantomActivity =\n  | ReturnType<typeof reporter.phantomActivity>\n  | undefined\n\nconst tracerReadyPromise = initTracer(\n  process.env.GATSBY_OPEN_TRACING_CONFIG_FILE ?? ``\n)\n\nexport class GraphQLEngine {\n  // private schema: GraphQLSchema\n  private runnerPromise?: Promise<GraphQLRunner>\n\n  constructor({ dbPath }: { dbPath: string }) {\n    setupLmdbStore({ dbPath })\n    // start initializing runner ASAP\n    this.getRunner()\n  }\n\n  private async _doGetRunner(): Promise<GraphQLRunner> {\n    await tracerReadyPromise\n\n    const wrapActivity = reporter.phantomActivity(`Initializing GraphQL Engine`)\n    wrapActivity.start()\n    try {\n      // @ts-ignore SCHEMA_SNAPSHOT is being \"inlined\" by bundler\n      store.dispatch(actions.createTypes(SCHEMA_SNAPSHOT))\n\n      // TODO: FLATTENED_PLUGINS needs to be merged with plugin options from gatsby-config\n      //  (as there might be non-serializable options, i.e. functions)\n      store.dispatch({\n        type: `SET_SITE_FLATTENED_PLUGINS`,\n        payload: flattenedPlugins,\n      })\n\n      for (const plugin of gatsbyNodes) {\n        const { name, module, importKey } = plugin\n        setGatsbyPluginCache(\n          { name, resolve: ``, importKey },\n          `gatsby-node`,\n          module\n        )\n      }\n      for (const plugin of gatsbyWorkers) {\n        const { name, module, importKey } = plugin\n        setGatsbyPluginCache(\n          { name, resolve: ``, importKey },\n          `gatsby-worker`,\n          module\n        )\n      }\n\n      await apiRunnerNode(`onPluginInit`, { parentSpan: wrapActivity.span })\n      await apiRunnerNode(`createSchemaCustomization`, {\n        parentSpan: wrapActivity.span,\n      })\n\n      // Build runs\n      // Note: skipping inference metadata because we rely on schema snapshot\n      await build({ fullMetadataBuild: false, parentSpan: wrapActivity.span })\n\n      return new GraphQLRunner(store)\n    } finally {\n      wrapActivity.end()\n    }\n  }\n\n  private async getRunner(): Promise<GraphQLRunner> {\n    if (!this.runnerPromise) {\n      this.runnerPromise = this._doGetRunner()\n    }\n    return this.runnerPromise\n  }\n\n  public async ready(): Promise<void> {\n    // We don't want to expose internal runner freely. We do expose `runQuery` function already.\n    // The way internal runner works can change, so we should not make it a public API.\n    // Here we just want to expose way to await it being ready\n    await this.getRunner()\n  }\n\n  public async runQuery(\n    query: string | Source,\n    context: Record<string, any> = {},\n    opts?: IQueryOptions\n  ): Promise<ExecutionResult> {\n    const engineContext = {\n      requestId: uuid.v4(),\n    }\n\n    const doRunQuery = async (): Promise<ExecutionResult> => {\n      if (!opts) {\n        opts = {\n          queryName: `GraphQL Engine query`,\n          parentSpan: undefined,\n        }\n      }\n\n      let gettingRunnerActivity: MaybePhantomActivity\n      let graphqlRunner: GraphQLRunner\n      try {\n        if (opts.parentSpan) {\n          gettingRunnerActivity = reporter.phantomActivity(\n            `Waiting for graphql runner to init`,\n            {\n              parentSpan: opts.parentSpan,\n            }\n          )\n          gettingRunnerActivity.start()\n        }\n        graphqlRunner = await this.getRunner()\n      } finally {\n        if (gettingRunnerActivity) {\n          gettingRunnerActivity.end()\n        }\n      }\n\n      // graphqlRunner creates it's own Span as long as we pass `parentSpan`\n      const result = await graphqlRunner.query(query, context, opts)\n\n      let waitingForJobsCreatedByCurrentRequestActivity: MaybePhantomActivity\n      try {\n        if (opts.parentSpan) {\n          waitingForJobsCreatedByCurrentRequestActivity =\n            reporter.phantomActivity(`Waiting for jobs to finish`, {\n              parentSpan: opts.parentSpan,\n            })\n          waitingForJobsCreatedByCurrentRequestActivity.start()\n        }\n        await waitJobsByRequest(engineContext.requestId)\n      } finally {\n        if (waitingForJobsCreatedByCurrentRequestActivity) {\n          waitingForJobsCreatedByCurrentRequestActivity.end()\n        }\n      }\n      return result\n    }\n\n    try {\n      return await runWithEngineContext(engineContext, doRunQuery)\n    } finally {\n      // Reset job-to-request mapping\n      store.dispatch({\n        type: `CLEAR_JOB_V2_CONTEXT`,\n        payload: engineContext,\n      })\n    }\n  }\n\n  public findPageByPath(pathName: string): IGatsbyPage | undefined {\n    // adapter so `findPageByPath` use SitePage nodes in datastore\n    // instead of `pages` redux slice\n    const state = {\n      pages: {\n        get(pathName: string): IGatsbyPage | undefined {\n          return getDataStore().getNode(`SitePage ${pathName}`) as\n            | IGatsbyPage\n            | undefined\n        },\n        values(): Iterable<IGatsbyPage> {\n          return getDataStore().iterateNodesByType(\n            `SitePage`\n          ) as Iterable<IGatsbyPage>\n        },\n      },\n    } as unknown as IGatsbyState\n\n    return findPageByPath(state, pathName, false)\n  }\n}\n\nexport default { GraphQLEngine }\n"],"mappings":"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"}