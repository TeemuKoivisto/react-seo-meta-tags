{"version":3,"file":"static-query-mapper.js","names":["removeExportQueryParam","path","includes","filePath","queryParams","split","params","URLSearchParams","replace","delete","paramsString","toString","decodeURIComponent","doesModuleMatchResourcePath","resourcePath","webpackModule","resource","getRealPath","cache","componentPath","has","set","resolve","get","StaticQueryMapper","constructor","store","name","apply","compiler","components","staticQueryComponents","componentsUsingSlices","program","getState","hooks","done","tap","stats","hasErrors","watchMode","enqueueFlush","finishMake","tapPromise","before","compilation","parentCompilation","entryModules","Set","gatsbyBrowserPlugins","slash","join","directory","asyncRequiresPath","entry","entries","values","dependency","dependencies","mod","moduleGraph","getModule","add","realPathCache","Map","webpackModulesByStaticQueryId","webpackModulesByUsedSlicePlaceholderAlias","componentModules","asyncRequiresModule","modules","NormalModule","staticQuery","staticQueryComponentPath","hash","slices","componentComponentPath","component","traverseModule","module","config","visitedModules","onComponent","onRoot","incomingConnections","getIncomingConnections","connection","originModule","globalStaticQueries","staticQueriesByComponents","staticQueryId","staticQueriesForComponent","globalSliceUsage","slicesByComponents","mergePreviouslyCollectedSlices","allStaticQueries","staticQueryHashes","Array","from","sort","allSlices","isSlice","Object","keys","reduce","obj","key","didSlicesChange","slicesByTemplate","didStaticQueriesChange","staticQueriesByTemplate","dispatch","type","payload","sliceNames","pages"],"sources":["../../../../src/utils/webpack/plugins/static-query-mapper.ts"],"sourcesContent":["import path from \"path\"\nimport { Store } from \"redux\"\nimport { Compiler, NormalModule } from \"webpack\"\nimport { isEqual, cloneDeep } from \"lodash\"\nimport { enqueueFlush } from \"../../page-data\"\nimport type { IGatsbyState, IGatsbyPageComponent } from \"../../../redux/types\"\nimport {\n  ICollectedSlices,\n  mergePreviouslyCollectedSlices,\n} from \"../../babel/find-slices\"\nimport { slash } from \"gatsby-core-utils/path\"\n\n/**\n * Remove the export query param from a path that can\n * a) contain only the ?export= query param\n * b) but also contain ?__contentFilePath&export=\n */\nexport const removeExportQueryParam = (\n  path: string | undefined\n): string | undefined => {\n  if (!path?.includes(`?`)) {\n    return path\n  }\n  const [filePath, queryParams] = path.split(`?`)\n  const params = new URLSearchParams(queryParams.replace(/[+]/g, `%2B`))\n  params.delete(`export`)\n\n  const paramsString = params.toString().replace(/[+]/g, `%20`)\n\n  return `${filePath}${\n    paramsString ? `?${decodeURIComponent(paramsString)}` : ``\n  }`\n}\n\n/**\n * Checks if a module matches a resourcePath\n */\nfunction doesModuleMatchResourcePath(\n  resourcePath: string,\n  webpackModule: NormalModule\n): boolean {\n  return (\n    removeExportQueryParam((webpackModule as NormalModule).resource) ===\n    resourcePath\n  )\n}\n\n/**\n * A helper to set/get path resolving\n */\nfunction getRealPath(\n  cache: Map<string, string>,\n  componentPath: string\n): string {\n  if (!cache.has(componentPath)) {\n    cache.set(componentPath, path.resolve(componentPath))\n  }\n\n  return cache.get(componentPath) as string\n}\n\nexport class StaticQueryMapper {\n  private store: Store<IGatsbyState>\n  private name: string\n\n  constructor(store) {\n    this.store = store\n    this.name = `StaticQueryMapper`\n  }\n\n  apply(compiler: Compiler): void {\n    const {\n      components,\n      staticQueryComponents,\n      componentsUsingSlices,\n      program,\n    } = this.store.getState()\n\n    compiler.hooks.done.tap(this.name, stats => {\n      // In dev mode we want to write page-data when compilation succeeds\n      if (!stats.hasErrors() && compiler.watchMode) {\n        enqueueFlush()\n      }\n    })\n\n    compiler.hooks.finishMake.tapPromise(\n      {\n        name: this.name,\n        before: `PartialHydrationPlugin`,\n      },\n      async compilation => {\n        if (compilation.compiler.parentCompilation) {\n          return\n        }\n\n        const entryModules = new Set()\n        const gatsbyBrowserPlugins = slash(\n          path.join(\n            program.directory,\n            `.cache`,\n            `api-runner-browser-plugins.js`\n          )\n        )\n        const asyncRequiresPath = slash(\n          path.join(\n            program.directory,\n            `.cache`,\n            `_this_is_virtual_fs_path_`,\n            `$virtual`,\n            `async-requires.js`\n          )\n        )\n        for (const entry of compilation.entries.values()) {\n          for (const dependency of entry.dependencies) {\n            const mod = compilation.moduleGraph.getModule(dependency)\n            entryModules.add(mod)\n          }\n        }\n\n        const realPathCache = new Map<string, string>()\n\n        const webpackModulesByStaticQueryId = new Map<\n          string,\n          Set<NormalModule>\n        >()\n        const webpackModulesByUsedSlicePlaceholderAlias = new Map<\n          NormalModule,\n          ICollectedSlices\n        >()\n        const componentModules = new Map<NormalModule, IGatsbyPageComponent>()\n        let asyncRequiresModule: NormalModule | undefined\n\n        for (const webpackModule of compilation.modules) {\n          if (!(webpackModule instanceof NormalModule)) {\n            // the only other type can be CssModule at this stage, which we don't care about\n            // this also acts as a type guard, providing fuller typeing for webpackModule\n            continue\n          }\n\n          if (doesModuleMatchResourcePath(asyncRequiresPath, webpackModule)) {\n            asyncRequiresModule = webpackModule\n            continue\n          }\n\n          if (\n            doesModuleMatchResourcePath(gatsbyBrowserPlugins, webpackModule)\n          ) {\n            entryModules.add(webpackModule)\n            continue\n          }\n\n          for (const staticQuery of staticQueryComponents.values()) {\n            const staticQueryComponentPath = getRealPath(\n              realPathCache,\n              staticQuery.componentPath\n            )\n\n            if (\n              !doesModuleMatchResourcePath(\n                staticQueryComponentPath,\n                webpackModule\n              )\n            ) {\n              continue\n            }\n\n            let set = webpackModulesByStaticQueryId.get(staticQuery.hash)\n\n            if (!set) {\n              set = new Set()\n              webpackModulesByStaticQueryId.set(staticQuery.hash, set)\n            }\n\n            set.add(webpackModule)\n          }\n\n          for (const [filePath, slices] of componentsUsingSlices) {\n            const componentComponentPath = getRealPath(realPathCache, filePath)\n\n            if (\n              !doesModuleMatchResourcePath(\n                componentComponentPath,\n                webpackModule\n              )\n            ) {\n              continue\n            }\n\n            webpackModulesByUsedSlicePlaceholderAlias.set(webpackModule, slices)\n          }\n\n          for (const component of components.values()) {\n            const componentComponentPath = getRealPath(\n              realPathCache,\n              component.componentPath\n            )\n\n            if (\n              !doesModuleMatchResourcePath(\n                componentComponentPath,\n                webpackModule\n              )\n            ) {\n              continue\n            }\n\n            componentModules.set(webpackModule, component)\n          }\n        }\n\n        function traverseModule(\n          module: NormalModule,\n          config: {\n            onComponent(component: IGatsbyPageComponent): void\n            onRoot(): void\n          },\n          visitedModules = new Set<NormalModule>()\n        ): void {\n          if (visitedModules.has(module)) {\n            return\n          }\n          visitedModules.add(module)\n\n          if (module === asyncRequiresModule) {\n            return\n          }\n\n          const component = componentModules.get(module)\n          if (component) {\n            config.onComponent(component)\n            // don't return here yet, as component might be imported by another one, and we want to traverse up until we reach async-requires\n          }\n\n          if (entryModules.has(module)) {\n            config.onRoot()\n            return\n          }\n\n          const incomingConnections =\n            compilation.moduleGraph.getIncomingConnections(module)\n          for (const connection of incomingConnections) {\n            if (connection.originModule instanceof NormalModule) {\n              traverseModule(connection.originModule, config, visitedModules)\n            }\n          }\n        }\n\n        const globalStaticQueries = new Set<string>()\n        const staticQueriesByComponents = new Map<string, Set<string>>()\n        for (const [\n          staticQueryId,\n          modules,\n        ] of webpackModulesByStaticQueryId.entries()) {\n          for (const module of modules) {\n            traverseModule(module, {\n              onComponent(component: IGatsbyPageComponent) {\n                let staticQueriesForComponent = staticQueriesByComponents.get(\n                  component.componentPath\n                )\n                if (!staticQueriesForComponent) {\n                  staticQueriesForComponent = new Set()\n                  staticQueriesByComponents.set(\n                    component.componentPath,\n                    staticQueriesForComponent\n                  )\n                }\n\n                staticQueriesForComponent.add(staticQueryId)\n              },\n              onRoot() {\n                globalStaticQueries.add(staticQueryId)\n              },\n            })\n          }\n        }\n\n        let globalSliceUsage: ICollectedSlices = {}\n        const slicesByComponents = new Map<string, ICollectedSlices>()\n        for (const [\n          module,\n          slices,\n        ] of webpackModulesByUsedSlicePlaceholderAlias.entries()) {\n          traverseModule(module, {\n            onComponent(component: IGatsbyPageComponent) {\n              slicesByComponents.set(\n                component.componentPath,\n                mergePreviouslyCollectedSlices(\n                  slices,\n                  slicesByComponents.get(component.componentPath)\n                )\n              )\n            },\n            onRoot() {\n              globalSliceUsage = mergePreviouslyCollectedSlices(\n                slices,\n                globalSliceUsage\n              )\n            },\n          })\n        }\n\n        for (const component of components.values()) {\n          const allStaticQueries = new Set([\n            ...globalStaticQueries,\n            ...(staticQueriesByComponents.get(component.componentPath) ?? []),\n          ])\n          const staticQueryHashes = Array.from(allStaticQueries).sort()\n\n          const allSlices = mergePreviouslyCollectedSlices(\n            slicesByComponents.get(component.componentPath) ?? {},\n            component.isSlice ? {} : cloneDeep(globalSliceUsage)\n          )\n\n          const slices = Object.keys(allSlices)\n            .sort()\n            .reduce((obj, key) => {\n              obj[key] = allSlices[key]\n              return obj\n            }, {})\n\n          const didSlicesChange = !isEqual(\n            this.store.getState().slicesByTemplate.get(component.componentPath),\n            slices\n          )\n          const didStaticQueriesChange = !isEqual(\n            this.store\n              .getState()\n              .staticQueriesByTemplate.get(component.componentPath),\n            staticQueryHashes\n          )\n\n          if (didStaticQueriesChange || didSlicesChange) {\n            if (component.isSlice) {\n              this.store.dispatch({\n                type: `ADD_PENDING_SLICE_TEMPLATE_DATA_WRITE`,\n                payload: {\n                  componentPath: component.componentPath,\n                  sliceNames: component.pages,\n                },\n              })\n            } else {\n              this.store.dispatch({\n                type: `ADD_PENDING_TEMPLATE_DATA_WRITE`,\n                payload: {\n                  componentPath: component.componentPath,\n                  pages: component.pages,\n                },\n              })\n            }\n          }\n\n          if (didSlicesChange) {\n            this.store.dispatch({\n              type: `SET_SLICES_BY_TEMPLATE`,\n              payload: {\n                componentPath: component.componentPath,\n                slices,\n              },\n            })\n          }\n\n          if (didStaticQueriesChange) {\n            this.store.dispatch({\n              type: `SET_STATIC_QUERIES_BY_TEMPLATE`,\n              payload: {\n                componentPath: component.componentPath,\n                staticQueryHashes,\n              },\n            })\n          }\n        }\n      }\n    )\n  }\n}\n"],"mappings":"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"}