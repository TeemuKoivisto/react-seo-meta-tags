{"version":3,"file":"file-parser.js","names":["fs","require","crypto","_","slugify","getGraphQLTag","StringInterpolationNotAllowedError","EmptyGraphQLTagError","GraphQLSyntaxError","ExportIsNotAsyncError","isWithinConfigExport","report","apiRunnerNode","actions","store","generateQueryName","def","hash","file","queryType","name","value","slugified","replacement","lower","camelCase","kind","followVariableDeclarations","binding","node","path","type","id","init","scope","getBinding","referencesGatsby","callee","calleeName","referencesImport","declaration","arguments","isUseStaticQuery","property","get","object","warnForUnknownQueryVariable","varName","usageFunction","warn","parseToAst","filePath","fileStr","parentSpan","addError","ast","cleanFilePath","getPathToLayoutComponent","transpiled","filename","contents","length","item","tmp","babelParseToAst","error","undefined","context","dispatch","queryExtractionGraphQLError","componentPath","queryExtractionBabelError","panicOnGlobalTag","panicOnBuild","findApiExport","api","hasExport","apiToFind","traverse","ExportNamedDeclaration","t","isExportNamedDeclaration","specifiers","some","specifier","isExportSpecifier","isIdentifier","exported","apiToCheck","isFunctionDeclaration","isVariableDeclaration","declarations","findGraphQLTags","documents","documentLocations","WeakMap","extractStaticQuery","taggedTemplateExpressPath","isHook","gqlAst","text","isGlobal","definitions","forEach","templateLoc","TemplateElement","templateElementPath","loc","docInFile","doc","isStaticQuery","isConfigQuery","set","start","push","JSXElement","openingElement","JSXAttribute","jsxPath","TaggedTemplateExpression","templatePath","Identifier","identifierPath","found","VariableDeclarator","varPath","CallExpression","hookPath","firstArg","isTaggedTemplateExpression","innerPath","state","source","ExportSpecifier","local","uniqueQueries","uniqBy","q","cache","FileParser","constructor","parseFile","cleanFilepath","readFile","err","includes","md5","astDefinitions","serverData","config","Head","pageSlices","collectSlices","payload","queryExtractedBabelSuccess","structuredError","location","interpolationStart","end","interpolationEnd","codeFrame","codeFrameColumns","highlightCode","process","env","FORCE_COLOR","locInGraphQlToLocInFile","originalError","locations","message","sourceMessage","exportStart","exportName","parseFiles","files","pageSliceUsage","Map","Promise","all","map","then","results"],"sources":["../../src/query/file-parser.js"],"sourcesContent":["/* eslint-disable no-unused-expressions */\n// @flow\nconst fs = require(`fs-extra`)\nconst crypto = require(`crypto`)\nconst _ = require(`lodash`)\nconst slugify = require(`slugify`)\n\n// Traverse is a es6 module...\nimport traverse from \"@babel/traverse\"\nimport * as t from \"@babel/types\"\nconst {\n  getGraphQLTag,\n  StringInterpolationNotAllowedError,\n  EmptyGraphQLTagError,\n  GraphQLSyntaxError,\n  ExportIsNotAsyncError,\n  isWithinConfigExport,\n} = require(`babel-plugin-remove-graphql-queries`)\nimport { collectSlices } from \"../utils/babel/find-slices\"\n\nconst report = require(`gatsby-cli/lib/reporter`)\n\nimport type { DocumentNode } from \"graphql\"\nimport { babelParseToAst } from \"../utils/babel-parse-to-ast\"\nimport { codeFrameColumns } from \"@babel/code-frame\"\nimport { getPathToLayoutComponent, md5 } from \"gatsby-core-utils\"\n\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst { actions } = require(`../redux/actions`)\nconst { store } = require(`../redux`)\nimport { locInGraphQlToLocInFile } from \"./error-parser\"\n/**\n * Add autogenerated query name if it wasn't defined by user.\n */\nconst generateQueryName = ({ def, hash, file, queryType }) => {\n  if (!def.name || !def.name.value) {\n    const slugified = slugify(file, {\n      replacement: ` `,\n      lower: false,\n    })\n    def.name = {\n      value: `${_.camelCase(`${queryType}-${slugified}-${hash}`)}`,\n      kind: `Name`,\n    }\n  }\n  return def\n}\n\n// taken from `babel-plugin-remove-graphql-queries`, in the future import from\n// there\nfunction followVariableDeclarations(binding) {\n  const node = binding?.path?.node\n  if (\n    node?.type === `VariableDeclarator` &&\n    node?.id.type === `Identifier` &&\n    node?.init?.type === `Identifier`\n  ) {\n    return followVariableDeclarations(\n      binding.path.scope.getBinding(node.init.name)\n    )\n  }\n  return binding\n}\n\nfunction referencesGatsby(path, callee, calleeName) {\n  // This works for es6 imports\n  if (callee.referencesImport(`gatsby`, ``)) {\n    return true\n  } else {\n    // This finds where userStaticQuery was declared and then checks\n    // if it is a \"require\" and \"gatsby\" is the argument.\n    const declaration = path.scope.getBinding(calleeName)\n    if (\n      declaration &&\n      declaration.path.node.init?.callee.name === `require` &&\n      declaration.path.node.init.arguments[0].value === `gatsby`\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n}\n\nfunction isUseStaticQuery(path) {\n  const callee = path.node.callee\n  if (callee.type === `MemberExpression`) {\n    const property = callee.property\n    if (property.name === `useStaticQuery`) {\n      return referencesGatsby(\n        path,\n        path.get(`callee`).get(`object`),\n        path.node?.callee.object.name\n      )\n    }\n    return false\n  }\n  if (callee.name === `useStaticQuery`) {\n    return referencesGatsby(path, path.get(`callee`), path.node?.callee.name)\n  }\n  return false\n}\n\nconst warnForUnknownQueryVariable = (varName, file, usageFunction) =>\n  report.warn(\n    `\\nWe were unable to find the declaration of variable \"${varName}\", which you passed as the \"query\" prop into the ${usageFunction} declaration in \"${file}\".\n\nPerhaps the variable name has a typo?\n\nAlso note that we are currently unable to use queries defined in files other than the file where the ${usageFunction} is defined. If you're attempting to import the query, please move it into \"${file}\". If being able to import queries from another file is an important capability for you, we invite your help fixing it.\\n`\n  )\n\nasync function parseToAst(filePath, fileStr, { parentSpan, addError } = {}) {\n  let ast\n\n  // Since gatsby-plugin-mdx v4, we are using the resourceQuery feature of webpack's loaders to inject a content file into a page component.\n  const cleanFilePath = getPathToLayoutComponent(filePath)\n\n  // Preprocess and attempt to parse source; return an AST if we can, log an\n  // error if we can't.\n  const transpiled = await apiRunnerNode(`preprocessSource`, {\n    filename: cleanFilePath,\n    contents: fileStr,\n    parentSpan,\n  })\n\n  if (transpiled && transpiled.length) {\n    for (const item of transpiled) {\n      try {\n        const tmp = babelParseToAst(item, cleanFilePath)\n        ast = tmp\n        break\n      } catch (error) {\n        // We emit the actual error below if every transpiled variant fails to parse\n      }\n    }\n    if (ast === undefined) {\n      addError({\n        id: `85912`,\n        filePath: cleanFilePath,\n        context: {\n          filePath,\n        },\n      })\n      store.dispatch(\n        actions.queryExtractionGraphQLError({\n          componentPath: cleanFilePath,\n        })\n      )\n\n      return null\n    }\n  } else {\n    try {\n      ast = babelParseToAst(fileStr, cleanFilePath)\n    } catch (error) {\n      store.dispatch(\n        actions.queryExtractionBabelError({\n          componentPath: cleanFilePath,\n          error,\n        })\n      )\n\n      addError({\n        id: `85911`,\n        filePath: cleanFilePath,\n        context: {\n          filePath: cleanFilePath,\n        },\n      })\n\n      return null\n    }\n  }\n\n  return ast\n}\n\nconst panicOnGlobalTag = file =>\n  report.panicOnBuild(\n    `Using the global \\`graphql\\` tag for Gatsby's queries isn't supported as of v3.\\n` +\n      `Import it instead like:  import { graphql } from 'gatsby' in file:\\n` +\n      file\n  )\n\ntype GraphQLDocumentInFile = {\n  filePath: string,\n  doc: DocumentNode,\n  templateLoc: string,\n  text: string,\n  hash: string,\n  isHook: boolean,\n  isStaticQuery: boolean,\n}\n\n// Adapted from gatsby/src/utils/babel/babel-plugin-remove-api\nfunction findApiExport(ast, api) {\n  let hasExport = false\n  const apiToFind = api ?? ``\n\n  traverse(ast, {\n    ExportNamedDeclaration(path) {\n      const declaration = path.node.declaration\n\n      if (t.isExportNamedDeclaration(path.node) && !hasExport) {\n        hasExport = path.node.specifiers.some(\n          specifier =>\n            t.isExportSpecifier(specifier) &&\n            t.isIdentifier(specifier.exported) &&\n            specifier.exported.name === apiToFind\n        )\n      }\n\n      let apiToCheck\n      if (t.isFunctionDeclaration(declaration) && declaration.id) {\n        apiToCheck = declaration.id.name\n      }\n\n      if (\n        t.isVariableDeclaration(declaration) &&\n        t.isIdentifier(declaration.declarations[0].id)\n      ) {\n        apiToCheck = declaration.declarations[0].id.name\n      }\n\n      if (apiToCheck && apiToCheck === apiToFind) {\n        hasExport = true\n      }\n    },\n  })\n\n  return hasExport\n}\n\nasync function findGraphQLTags(\n  file,\n  ast,\n  { parentSpan, addError } = {}\n): Promise<Array<GraphQLDocumentInFile>> {\n  const documents = []\n  if (!ast) {\n    return documents\n  }\n\n  /**\n   * A map of graphql documents to unique locations.\n   *\n   * A graphql document's unique location is made of:\n   *\n   *  - the location of the graphql template literal that contains the document, and\n   *  - the document's location within the graphql template literal\n   *\n   * This is used to prevent returning duplicated documents.\n   */\n  const documentLocations = new WeakMap()\n\n  const extractStaticQuery = (taggedTemplateExpressPath, isHook = false) => {\n    const {\n      ast: gqlAst,\n      text,\n      hash,\n      isGlobal,\n    } = getGraphQLTag(taggedTemplateExpressPath)\n    if (!gqlAst) return\n\n    if (isGlobal) {\n      panicOnGlobalTag(file)\n      return\n    }\n\n    gqlAst.definitions.forEach(def => {\n      generateQueryName({\n        def,\n        hash,\n        file,\n        queryType: `static`,\n      })\n    })\n\n    let templateLoc\n\n    taggedTemplateExpressPath.traverse({\n      TemplateElement(templateElementPath) {\n        templateLoc = templateElementPath.node.loc\n      },\n    })\n\n    const docInFile = {\n      filePath: file,\n      doc: gqlAst,\n      text: text,\n      hash: hash,\n      isStaticQuery: true,\n      isConfigQuery: false,\n      isHook,\n      templateLoc,\n    }\n\n    documentLocations.set(\n      docInFile,\n      `${taggedTemplateExpressPath.node.start}-${gqlAst.loc.start}`\n    )\n\n    documents.push(docInFile)\n  }\n\n  // Look for queries in <StaticQuery /> elements.\n  traverse(ast, {\n    JSXElement(path) {\n      if (path.node.openingElement.name.name !== `StaticQuery`) {\n        return\n      }\n\n      // astexplorer.com link I (@kyleamathews) used when prototyping this algorithm\n      // https://astexplorer.net/#/gist/ab5d71c0f08f287fbb840bf1dd8b85ff/2f188345d8e5a4152fe7c96f0d52dbcc6e9da466\n      path.traverse({\n        JSXAttribute(jsxPath) {\n          if (jsxPath.node.name.name !== `query`) {\n            return\n          }\n          jsxPath.traverse({\n            // Assume the query is inline in the component and extract that.\n            TaggedTemplateExpression(templatePath) {\n              extractStaticQuery(templatePath)\n            },\n            // Also see if it's a variable that's passed in as a prop\n            // and if it is, go find it.\n            Identifier(identifierPath) {\n              if (identifierPath.node.name !== `graphql`) {\n                const varName = identifierPath.node.name\n                let found = false\n                traverse(ast, {\n                  VariableDeclarator(varPath) {\n                    if (\n                      varPath.node.id.name === varName &&\n                      varPath.node.init.type === `TaggedTemplateExpression`\n                    ) {\n                      varPath.traverse({\n                        TaggedTemplateExpression(templatePath) {\n                          found = true\n                          extractStaticQuery(templatePath)\n                        },\n                      })\n                    }\n                  },\n                })\n                if (!found) {\n                  warnForUnknownQueryVariable(varName, file, `<StaticQuery>`)\n                }\n              }\n            },\n          })\n        },\n      })\n      return\n    },\n  })\n\n  // Look for queries in useStaticQuery hooks.\n  traverse(ast, {\n    CallExpression(hookPath) {\n      if (!isUseStaticQuery(hookPath)) return\n\n      const firstArg = hookPath.get(`arguments`)[0]\n\n      // Assume the query is inline in the component and extract that.\n      if (firstArg.isTaggedTemplateExpression()) {\n        extractStaticQuery(firstArg, true)\n        // Also see if it's a variable that's passed in as a prop\n        // and if it is, go find it.\n      } else if (firstArg.isIdentifier()) {\n        if (\n          firstArg.node.name !== `graphql` &&\n          firstArg.node.name !== `useStaticQuery`\n        ) {\n          const varName = firstArg.node.name\n          let found = false\n          traverse(ast, {\n            VariableDeclarator(varPath) {\n              if (\n                varPath.node.id.name === varName &&\n                varPath.node.init.type === `TaggedTemplateExpression`\n              ) {\n                varPath.traverse({\n                  TaggedTemplateExpression(templatePath) {\n                    found = true\n                    extractStaticQuery(templatePath, true)\n                  },\n                })\n              }\n            },\n          })\n          if (!found) {\n            warnForUnknownQueryVariable(varName, file, `useStaticQuery`)\n          }\n        }\n      }\n    },\n  })\n\n  function TaggedTemplateExpression(innerPath) {\n    const { ast: gqlAst, isGlobal, hash, text } = getGraphQLTag(innerPath)\n    if (!gqlAst) return\n\n    if (isGlobal) {\n      panicOnGlobalTag(file)\n      return\n    }\n\n    const isConfigQuery = isWithinConfigExport(innerPath)\n\n    gqlAst.definitions.forEach(def => {\n      generateQueryName({\n        def,\n        hash,\n        file,\n        queryType: isConfigQuery ? `config` : `page`,\n      })\n    })\n\n    let templateLoc\n    innerPath.traverse({\n      TemplateElement(templateElementPath) {\n        templateLoc = templateElementPath.node.loc\n      },\n    })\n\n    const docInFile = {\n      filePath: file,\n      doc: gqlAst,\n      text: text,\n      hash: hash,\n      isStaticQuery: false,\n      isConfigQuery,\n      isHook: false,\n      templateLoc,\n    }\n\n    documentLocations.set(\n      docInFile,\n      `${innerPath.node.start}-${gqlAst.loc.start}`\n    )\n\n    documents.push(docInFile)\n  }\n\n  // When a component has a StaticQuery we scan all of its exports and follow those exported variables\n  // to determine if they lead to this static query (via tagged template literal)\n  traverse(ast, {\n    ExportNamedDeclaration(path, state) {\n      // Skipping the edge case of re-exporting (i.e. \"export { bar } from 'Bar'\")\n      // (it is handled elsewhere for queries, see usages of warnForUnknownQueryVariable)\n      if (path.node.source) {\n        return\n      }\n      path.traverse({\n        TaggedTemplateExpression,\n        ExportSpecifier(path) {\n          const binding = followVariableDeclarations(\n            path.scope.getBinding(path.node.local.name)\n          )\n          binding?.path?.traverse({ TaggedTemplateExpression })\n        },\n      })\n    },\n  })\n\n  // Remove duplicate queries\n  const uniqueQueries = _.uniqBy(documents, q => documentLocations.get(q))\n\n  return uniqueQueries\n}\n\ntype CollectedSlice = {\n  name: string,\n  allowEmpty: boolean,\n}\n\nconst cache = {}\n\nexport default class FileParser {\n  constructor({ parentSpan } = {}) {\n    this.parentSpan = parentSpan\n  }\n\n  async parseFile(\n    file: string,\n    addError\n  ): Promise<{\n    astDefinitions: ?Array<GraphQLDocumentInFile>,\n    pageSlices: { [key: string]: CollectedSlice } | null,\n  }> {\n    let text\n    const cleanFilepath = getPathToLayoutComponent(file)\n    try {\n      text = await fs.readFile(cleanFilepath, `utf8`)\n    } catch (err) {\n      addError({\n        id: `85913`,\n        filePath: file,\n        context: {\n          filePath: file,\n        },\n        error: err,\n      })\n\n      store.dispatch(\n        actions.queryExtractionGraphQLError({\n          componentPath: file,\n        })\n      )\n      return null\n    }\n\n    // We do a quick check so we can exit early if this is a file we're not interested in.\n    // We only process files that include the APIs below\n    if (\n      !text.includes(`graphql`) &&\n      !text.includes(`gatsby-plugin-image`) &&\n      !text.includes(`getServerData`) &&\n      !text.includes(`config`) &&\n      !text.includes(`Slice`) &&\n      !text.includes(`Head`)\n    ) {\n      return null\n    }\n\n    const hash = await md5(file + text)\n\n    try {\n      if (!cache[hash]) {\n        const ast = await parseToAst(file, text, {\n          parentSpan: this.parentSpan,\n          addError,\n        })\n\n        cache[hash] = {\n          astDefinitions: await findGraphQLTags(file, ast, {\n            parentSpan: this.parentSpan,\n            addError,\n          }),\n          serverData: findApiExport(ast, `getServerData`),\n          config: findApiExport(ast, `config`),\n          Head: findApiExport(ast, `Head`),\n          pageSlices: collectSlices(ast, file),\n        }\n      }\n      const { astDefinitions, serverData, config, Head, pageSlices } =\n        cache[hash]\n\n      // Note: we should dispatch this action even when getServerData is not found\n      // (maybe it was set before, so now we need to reset renderMode from SSR to the default one)\n      store.dispatch({\n        type: `SET_COMPONENT_FEATURES`,\n        payload: {\n          componentPath: file,\n          serverData,\n          config,\n          Head,\n        },\n      })\n\n      // If any AST definitions were extracted, report success.\n      // This can mean there is none or there was a babel error when\n      // we tried to extract the graphql AST.\n      if (astDefinitions.length > 0) {\n        store.dispatch(\n          actions.queryExtractedBabelSuccess({\n            componentPath: file,\n          })\n        )\n      }\n\n      return { astDefinitions, pageSlices }\n    } catch (err) {\n      // default error\n      let structuredError = {\n        id: `85915`,\n        context: {\n          filePath: file,\n        },\n      }\n\n      if (err instanceof StringInterpolationNotAllowedError) {\n        const location = {\n          start: err.interpolationStart,\n          end: err.interpolationEnd,\n        }\n        structuredError = {\n          id: `85916`,\n          location,\n          context: {\n            codeFrame: codeFrameColumns(text, location, {\n              highlightCode: process.env.FORCE_COLOR !== `0`,\n            }),\n          },\n        }\n      } else if (err instanceof EmptyGraphQLTagError) {\n        const location = err.templateLoc\n          ? {\n              start: err.templateLoc.start,\n              end: err.templateLoc.end,\n            }\n          : null\n\n        structuredError = {\n          id: `85917`,\n          location,\n          context: {\n            codeFrame: location\n              ? codeFrameColumns(text, location, {\n                  highlightCode: process.env.FORCE_COLOR !== `0`,\n                })\n              : null,\n          },\n        }\n      } else if (err instanceof GraphQLSyntaxError) {\n        const location = {\n          start: locInGraphQlToLocInFile(\n            err.templateLoc,\n            err.originalError.locations[0]\n          ),\n        }\n\n        structuredError = {\n          id: `85918`,\n          location,\n          context: {\n            codeFrame: location\n              ? codeFrameColumns(text, location, {\n                  highlightCode: process.env.FORCE_COLOR !== `0`,\n                  message: err.originalError.message,\n                })\n              : null,\n            sourceMessage: err.originalError.message,\n          },\n        }\n      } else if (err instanceof ExportIsNotAsyncError) {\n        const location = {\n          start: err.exportStart,\n          end: err.exportStart,\n        }\n        structuredError = {\n          id: `85929`,\n          location,\n          context: {\n            exportName: err.exportName,\n            codeFrame: codeFrameColumns(text, location, {\n              highlightCode: process.env.FORCE_COLOR !== `0`,\n            }),\n          },\n        }\n      }\n\n      addError({\n        ...structuredError,\n        filePath: file,\n      })\n\n      store.dispatch(\n        actions.queryExtractionGraphQLError({\n          componentPath: file,\n        })\n      )\n      return null\n    }\n  }\n\n  async parseFiles(\n    files: Array<string>,\n    addError\n  ): Promise<Array<GraphQLDocumentInFile>> {\n    const documents = []\n    const pageSliceUsage = new Map()\n\n    return Promise.all(\n      files.map(file =>\n        this.parseFile(file, addError).then(results => {\n          if (results) {\n            const { astDefinitions, pageSlices } = results\n            documents.push(...(astDefinitions || []))\n            if (pageSlices) {\n              pageSliceUsage.set(file, pageSlices)\n            }\n          }\n        })\n      )\n    ).then(() => {\n      store.dispatch({\n        type: `SET_COMPONENTS_USING_PAGE_SLICES`,\n        payload: pageSliceUsage,\n      })\n\n      return documents\n    })\n  }\n}\n"],"mappings":"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"}