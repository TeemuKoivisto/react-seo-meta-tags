{"version":3,"file":"match.js","names":["match","eventOrCode","key","which","keyCode","Array","isArray","indexOf"],"sources":["../../../fast-refresh-overlay/helpers/match.js"],"sourcesContent":["// Copied from https://github.com/carbon-design-system/carbon\n// License: Apache-2.0\n// Copyright IBM Corp. 2016, 2018\n// Entrypoint: packages/react/src/internal/keyboard/match.js\n\n/**\n * Check to see if the given key matches the corresponding keyboard event. Also\n * supports passing in the value directly if you can't used the given event.\n *\n * @example\n * import * as keys from '../keys';\n * import { matches } from '../match';\n *\n * function handleOnKeyDown(event) {\n *   if (match(event, keys.Enter) {\n *     // ...\n *   }\n * }\n *\n * @param {Event|number|string} eventOrCode\n * @param {Key} key\n * @returns {boolean}\n */\nexport function match(eventOrCode, { key, which, keyCode } = {}) {\n  if (typeof eventOrCode === `string`) {\n    return eventOrCode === key\n  }\n\n  if (typeof eventOrCode === `number`) {\n    return eventOrCode === which || eventOrCode === keyCode\n  }\n\n  if (eventOrCode.key && Array.isArray(key)) {\n    return key.indexOf(eventOrCode.key) !== -1\n  }\n\n  return (\n    eventOrCode.key === key ||\n    eventOrCode.which === which ||\n    eventOrCode.keyCode === keyCode\n  )\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,KAAK,CAACC,WAAW,EAAE;EAAEC,GAAG;EAAEC,KAAK;EAAEC;AAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;EAC/D,IAAI,OAAOH,WAAW,KAAM,QAAO,EAAE;IACnC,OAAOA,WAAW,KAAKC,GAAG;EAC5B;EAEA,IAAI,OAAOD,WAAW,KAAM,QAAO,EAAE;IACnC,OAAOA,WAAW,KAAKE,KAAK,IAAIF,WAAW,KAAKG,OAAO;EACzD;EAEA,IAAIH,WAAW,CAACC,GAAG,IAAIG,KAAK,CAACC,OAAO,CAACJ,GAAG,CAAC,EAAE;IACzC,OAAOA,GAAG,CAACK,OAAO,CAACN,WAAW,CAACC,GAAG,CAAC,KAAK,CAAC,CAAC;EAC5C;EAEA,OACED,WAAW,CAACC,GAAG,KAAKA,GAAG,IACvBD,WAAW,CAACE,KAAK,KAAKA,KAAK,IAC3BF,WAAW,CAACG,OAAO,KAAKA,OAAO;AAEnC"}