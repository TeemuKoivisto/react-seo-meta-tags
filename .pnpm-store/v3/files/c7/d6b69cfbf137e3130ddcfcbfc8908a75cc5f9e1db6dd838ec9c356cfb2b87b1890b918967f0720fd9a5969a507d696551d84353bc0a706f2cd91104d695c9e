{"version":3,"file":"zipkin-types.d.js","names":["ZipkinPartialSpan","ZipkinBatchRecorder","zipkin","BatchRecorder","ZipkinHttpLogger","logger","HttpLogger"],"sources":["../../../src/utils/tracer/zipkin-types.d.ts"],"sourcesContent":["import zipkin from \"zipkin\"\nimport logger from \"zipkin-transport-http\"\nimport { Span } from \"opentracing\"\nimport { HeadersInit } from \"node-fetch\"\n\nexport class ZipkinPartialSpan {\n  traceId: string\n  timeoutTimestamp: number\n  delegate: Span\n  localEndpoint: unknown\n  shouldFlush: boolean\n}\n\nexport class ZipkinBatchRecorder extends zipkin.BatchRecorder {\n  partialSpans: Map<string, ZipkinPartialSpan>\n  _timedOut(span: ZipkinPartialSpan): boolean\n  _writeSpan(id: string): void\n}\n\nexport class ZipkinHttpLogger extends logger.HttpLogger {\n  queue: string[]\n  endpoint: string\n  headers: HeadersInit\n  timeout: number\n  errorListenerSet: boolean\n  emit(event: string | symbol, ...args: any[]): boolean\n}\n"],"mappings":";;;;;AAAA;AACA;AAIO,MAAMA,iBAAiB,CAAC;AAM9B;AAEM,MAAMC,mBAAmB,SAASC,eAAM,CAACC,aAAa,CAAC;AAI7D;AAEM,MAAMC,gBAAgB,SAASC,4BAAM,CAACC,UAAU,CAAC;AAOvD"}