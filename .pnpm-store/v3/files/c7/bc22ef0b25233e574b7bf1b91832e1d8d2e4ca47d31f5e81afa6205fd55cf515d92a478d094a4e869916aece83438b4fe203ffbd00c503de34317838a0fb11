{"version":3,"file":"index.js","sources":["../src/collected-scripts-by-page.tsx","../src/gatsby-script.tsx","../src/request-idle-callback-shim.ts"],"sourcesContent":["import { ScriptProps } from \"./gatsby-script\"\n\nconst _collectedScriptsByPage = new Map()\n\nexport const collectedScriptsByPage = {\n  get(pathname: string): Array<ScriptProps> {\n    return _collectedScriptsByPage.get(pathname) || []\n  },\n  set(pathname: string, collectedScript: ScriptProps): void {\n    const currentCollectedScripts = _collectedScriptsByPage.get(pathname) || []\n    currentCollectedScripts.push(collectedScript)\n    _collectedScriptsByPage.set(pathname, currentCollectedScripts)\n  },\n  delete(pathname: string): void {\n    _collectedScriptsByPage.delete(pathname)\n  },\n}\n","import React, { useEffect } from \"react\"\nimport { collectedScriptsByPage } from \"./collected-scripts-by-page\"\nimport type { ReactElement, ScriptHTMLAttributes } from \"react\"\nimport { requestIdleCallback } from \"./request-idle-callback-shim\"\nimport { Location, useLocation } from \"@gatsbyjs/reach-router\"\n\nexport enum ScriptStrategy {\n  postHydrate = `post-hydrate`,\n  idle = `idle`,\n  offMainThread = `off-main-thread`,\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface ScriptProps\n  extends Omit<ScriptHTMLAttributes<HTMLScriptElement>, `onLoad` | `onError`> {\n  id?: string\n  strategy?: ScriptStrategy | `post-hydrate` | `idle` | `off-main-thread`\n  children?: string\n  onLoad?: (event: Event) => void\n  onError?: (event: ErrorEvent) => void\n  forward?: Array<string>\n}\n\nconst handledProps = new Set([\n  `src`,\n  `strategy`,\n  `dangerouslySetInnerHTML`,\n  `children`,\n  `onLoad`,\n  `onError`,\n])\n\n// Used for de-duplication\nexport const scriptCache: Set<string> = new Set()\nexport const scriptCallbackCache: Map<\n  string,\n  {\n    load?: {\n      callbacks?: Array<(event: Event) => void>\n      event?: Event | undefined\n    }\n    error?: {\n      callbacks?: Array<(event: ErrorEvent) => void>\n      event?: ErrorEvent | undefined\n    }\n  }\n> = new Map()\n\n// Same pattern is used in Gatsby Link\nfunction GatsbyScriptLocationWrapper(props: ScriptProps): JSX.Element {\n  return <Location>{(): JSX.Element => <GatsbyScript {...props} />}</Location>\n}\n\nfunction GatsbyScript(props: ScriptProps): ReactElement | null {\n  const { src, strategy = ScriptStrategy.postHydrate } = props || {}\n\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    let details: IInjectedScriptDetails | null\n\n    switch (strategy) {\n      case ScriptStrategy.postHydrate:\n        details = injectScript(props)\n        break\n      case ScriptStrategy.idle:\n        requestIdleCallback(() => {\n          details = injectScript(props)\n        })\n        break\n      case ScriptStrategy.offMainThread:\n        {\n          const attributes = resolveAttributes(props)\n          collectedScriptsByPage.set(pathname, attributes)\n        }\n        break\n    }\n\n    return (): void => {\n      const { script, loadCallback, errorCallback } = details || {}\n\n      if (loadCallback) {\n        script?.removeEventListener(`load`, loadCallback)\n      }\n\n      if (errorCallback) {\n        script?.removeEventListener(`error`, errorCallback)\n      }\n\n      script?.remove()\n    }\n  }, [])\n\n  if (strategy === ScriptStrategy.offMainThread) {\n    const inlineScript = resolveInlineScript(props)\n    const attributes = resolveAttributes(props)\n\n    if (typeof window === `undefined`) {\n      collectedScriptsByPage.set(pathname, attributes)\n    }\n\n    if (inlineScript) {\n      return (\n        <script\n          type=\"text/partytown\"\n          data-strategy={strategy}\n          crossOrigin=\"anonymous\"\n          {...attributes}\n          dangerouslySetInnerHTML={{ __html: resolveInlineScript(props) }}\n        />\n      )\n    }\n    return (\n      <script\n        type=\"text/partytown\"\n        src={proxyPartytownUrl(src)}\n        data-strategy={strategy}\n        crossOrigin=\"anonymous\"\n        {...attributes}\n      />\n    )\n  }\n\n  return null\n}\n\ninterface IInjectedScriptDetails {\n  script: HTMLScriptElement | null\n  loadCallback: (event: Event) => void\n  errorCallback: (event: ErrorEvent) => void\n}\n\nfunction injectScript(props: ScriptProps): IInjectedScriptDetails | null {\n  const {\n    id,\n    src,\n    strategy = ScriptStrategy.postHydrate,\n    onLoad,\n    onError,\n  } = props || {}\n\n  const scriptKey = id || src\n\n  const callbackNames = [`load`, `error`]\n\n  const currentCallbacks = {\n    load: onLoad,\n    error: onError,\n  }\n\n  if (scriptKey) {\n    /**\n     * If a duplicate script is already loaded/errored, we replay load/error callbacks with the original event.\n     * If it's not yet loaded/errored, keep track of callbacks so we can call load/error callbacks for each when the event occurs.\n     */\n    for (const name of callbackNames) {\n      if (currentCallbacks?.[name]) {\n        const cachedCallbacks = scriptCallbackCache.get(scriptKey) || {}\n        const { callbacks = [] } = cachedCallbacks?.[name] || {}\n        callbacks.push(currentCallbacks?.[name])\n\n        if (cachedCallbacks?.[name]?.event) {\n          currentCallbacks?.[name]?.(cachedCallbacks?.[name]?.event)\n        } else {\n          scriptCallbackCache.set(scriptKey, {\n            ...cachedCallbacks,\n            [name]: {\n              callbacks,\n            },\n          })\n        }\n      }\n    }\n\n    // Avoid injecting duplicate scripts into the DOM\n    if (scriptCache.has(scriptKey)) {\n      return null\n    }\n  }\n\n  const inlineScript = resolveInlineScript(props)\n  const attributes = resolveAttributes(props)\n\n  const script = document.createElement(`script`)\n\n  if (id) {\n    script.id = id\n  }\n\n  script.dataset.strategy = strategy\n\n  for (const [key, value] of Object.entries(attributes)) {\n    script.setAttribute(key, value)\n  }\n\n  if (inlineScript) {\n    script.textContent = inlineScript\n  }\n\n  if (src) {\n    script.src = src\n  }\n\n  const wrappedCallbacks: Record<string, (event: Event | ErrorEvent) => void> =\n    {}\n\n  if (scriptKey) {\n    // Add listeners on injected scripts so events are cached for use in de-duplicated script callbacks\n    for (const name of callbackNames) {\n      const wrappedEventCallback = (event: Event | ErrorEvent): void =>\n        onEventCallback(event, scriptKey, name)\n      script.addEventListener(name, wrappedEventCallback)\n      wrappedCallbacks[`${name}Callback`] = wrappedEventCallback\n    }\n\n    scriptCache.add(scriptKey)\n  }\n\n  document.body.appendChild(script)\n\n  return {\n    script,\n    loadCallback: wrappedCallbacks.loadCallback,\n    errorCallback: wrappedCallbacks.errorCallback,\n  }\n}\n\nfunction resolveInlineScript(props: ScriptProps): string {\n  const { dangerouslySetInnerHTML, children = `` } = props || {}\n  const { __html: dangerousHTML = `` } = dangerouslySetInnerHTML || {}\n  return dangerousHTML || children\n}\n\nfunction resolveAttributes(props: ScriptProps): Record<string, string> {\n  const attributes: Record<string, string> = {}\n\n  for (const [key, value] of Object.entries(props)) {\n    if (handledProps.has(key)) {\n      continue\n    }\n    attributes[key] = value\n  }\n\n  return attributes\n}\n\nfunction proxyPartytownUrl(url: string | undefined): string | undefined {\n  if (!url) {\n    return undefined\n  }\n  return `/__third-party-proxy?url=${encodeURIComponent(url)}`\n}\n\nfunction onEventCallback(\n  event: Event | ErrorEvent,\n  scriptKey: string,\n  eventName: string\n): void {\n  const cachedCallbacks = scriptCallbackCache.get(scriptKey) || {}\n\n  for (const callback of cachedCallbacks?.[eventName]?.callbacks || []) {\n    callback(event)\n  }\n\n  scriptCallbackCache.set(scriptKey, { [eventName]: { event } })\n}\n\nexport { GatsbyScriptLocationWrapper as Script }\n","// https://developer.chrome.com/blog/using-requestidlecallback/#checking-for-requestidlecallback\n// https://github.com/vercel/next.js/blob/canary/packages/next/client/request-idle-callback.ts\n\nexport const requestIdleCallback =\n  (typeof self !== `undefined` &&\n    self.requestIdleCallback &&\n    self.requestIdleCallback.bind(window)) ||\n  function (cb: IdleRequestCallback): number {\n    const start = Date.now()\n    return setTimeout(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start))\n        },\n      })\n    }, 1) as unknown as number\n  }\n"],"names":["ScriptStrategy","_collectedScriptsByPage","Map","collectedScriptsByPage","get","pathname","set","collectedScript","currentCollectedScripts","push","requestIdleCallback","self","bind","window","cb","start","Date","now","didTimeout","timeRemaining","Math","max","handledProps","Set","scriptCache","scriptCallbackCache","GatsbyScript","props","_ref","src","strategy","_ref$strategy","postHydrate","useLocation","useEffect","details","injectScript","idle","offMainThread","attributes","resolveAttributes","script","loadCallback","errorCallback","_ref2","removeEventListener","remove","inlineScript","resolveInlineScript","React","createElement","_extends","type","crossOrigin","dangerouslySetInnerHTML","__html","proxyPartytownUrl","id","_ref3","_ref3$strategy","scriptKey","callbackNames","currentCallbacks","load","onLoad","error","onError","_step","_iterator","done","value","name","_cachedCallbacks$name","cachedCallbacks","callbacks","_ref4$callbacks","event","_currentCallbacks$nam","call","_cachedCallbacks$name2","_extends2","has","document","dataset","_i","_Object$entries","Object","entries","length","_Object$entries$_i","setAttribute","textContent","wrappedCallbacks","_step2","wrappedEventCallback","eventName","_step3","_cachedCallbacks$even","_iterator3","callback","_scriptCallbackCache$","onEventCallback","addEventListener","_iterator2","_createForOfIteratorHelperLoose","_loop","add","body","appendChild","_ref5","children","_ref6$__html","_ref5$children","_i2","_Object$entries2","key","_Object$entries2$_i","url","encodeURIComponent","Location"],"mappings":"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"}