{"version":3,"file":"sanitize-node.js","names":["omitUndefined","data","isPlainObject","p","undefined","filter","isTypeSupported","type","isSupported","Date","sanitizeNode","isNode","path","Set","isArray","has","add","returnData","anyFieldChanged","hasLengthProperty","Object","prototype","hasOwnProperty","call","lengthProperty","length","value","key"],"sources":["../../src/utils/sanitize-node.ts"],"sourcesContent":["import _ from \"lodash\"\n\nimport type { IGatsbyNode } from \"../redux/types\"\nimport type { GatsbyIterable } from \"../datastore/common/iterable\"\n\ntype Data = IGatsbyNode | GatsbyIterable<IGatsbyNode>\n\ntype OmitUndefined = (data: Data) => Partial<Data>\n\n/**\n * @param {Object|Array} data\n * @returns {Object|Array} data without undefined values\n */\nconst omitUndefined: OmitUndefined = data => {\n  const isPlainObject = _.isPlainObject(data)\n  if (isPlainObject) {\n    return _.pickBy(data, p => p !== undefined)\n  }\n\n  return (data as GatsbyIterable<IGatsbyNode>).filter(p => p !== undefined)\n}\n\ntype isTypeSupported = (data: Data) => boolean\n\n/**\n * @param {*} data\n * @return {boolean} Boolean if type is supported\n */\nconst isTypeSupported: isTypeSupported = data => {\n  if (data === null) {\n    return true\n  }\n\n  const type = typeof data\n  const isSupported =\n    type === `number` ||\n    type === `string` ||\n    type === `boolean` ||\n    data instanceof Date\n\n  return isSupported\n}\n\ntype sanitizeNode = (\n  data: Data,\n  isNode?: boolean,\n  path?: Set<unknown>\n) => Data | undefined\n\n/**\n * Make data serializable\n * @param {(Object|Array)} data to sanitize\n * @param {boolean} isNode = true\n * @param {Set<string>} path = new Set\n */\nexport const sanitizeNode: sanitizeNode = (\n  data,\n  isNode = true,\n  path = new Set()\n) => {\n  const isPlainObject = _.isPlainObject(data)\n  const isArray = _.isArray(data)\n\n  if (isPlainObject || isArray) {\n    if (path.has(data)) return data\n    path.add(data)\n\n    const returnData = isPlainObject\n      ? ({} as IGatsbyNode)\n      : ([] as Array<IGatsbyNode>)\n    let anyFieldChanged = false\n\n    // _.each is a \"Collection\" method and thus objects with \"length\" property are iterated as arrays\n    const hasLengthProperty = isPlainObject\n      ? Object.prototype.hasOwnProperty.call(data, `length`)\n      : false\n    let lengthProperty\n    if (hasLengthProperty) {\n      lengthProperty = (data as IGatsbyNode).length\n      delete (data as IGatsbyNode).length\n    }\n\n    _.each(data, (value, key) => {\n      if (isNode && key === `internal`) {\n        returnData[key] = value\n        return\n      }\n      returnData[key] = sanitizeNode(value as Data, false, path)\n\n      if (returnData[key] !== value) {\n        anyFieldChanged = true\n      }\n    })\n\n    if (hasLengthProperty) {\n      ;(data as IGatsbyNode).length = lengthProperty\n      returnData.length = sanitizeNode(lengthProperty as Data, false, path)\n      if (returnData.length !== lengthProperty) {\n        anyFieldChanged = true\n      }\n    }\n\n    if (anyFieldChanged) {\n      data = omitUndefined(returnData as Data) as Data\n    }\n\n    // arrays and plain objects are supported - no need to to sanitize\n    return data\n  }\n\n  if (!isTypeSupported(data)) {\n    return undefined\n  } else {\n    return data\n  }\n}\n"],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA,MAAMA,aAA4B,GAAGC,IAAI,IAAI;EAC3C,MAAMC,aAAa,GAAG,6BAAgBD,IAAI,CAAC;EAC3C,IAAIC,aAAa,EAAE;IACjB,OAAO,sBAASD,IAAI,EAAEE,CAAC,IAAIA,CAAC,KAAKC,SAAS,CAAC;EAC7C;EAEA,OAAQH,IAAI,CAAiCI,MAAM,CAACF,CAAC,IAAIA,CAAC,KAAKC,SAAS,CAAC;AAC3E,CAAC;AAID;AACA;AACA;AACA;AACA,MAAME,eAAgC,GAAGL,IAAI,IAAI;EAC/C,IAAIA,IAAI,KAAK,IAAI,EAAE;IACjB,OAAO,IAAI;EACb;EAEA,MAAMM,IAAI,GAAG,OAAON,IAAI;EACxB,MAAMO,WAAW,GACfD,IAAI,KAAM,QAAO,IACjBA,IAAI,KAAM,QAAO,IACjBA,IAAI,KAAM,SAAQ,IAClBN,IAAI,YAAYQ,IAAI;EAEtB,OAAOD,WAAW;AACpB,CAAC;AAQD;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,YAA0B,GAAG,CACxCT,IAAI,EACJU,MAAM,GAAG,IAAI,EACbC,IAAI,GAAG,IAAIC,GAAG,EAAE,KACb;EACH,MAAMX,aAAa,GAAG,6BAAgBD,IAAI,CAAC;EAC3C,MAAMa,OAAO,GAAG,uBAAUb,IAAI,CAAC;EAE/B,IAAIC,aAAa,IAAIY,OAAO,EAAE;IAC5B,IAAIF,IAAI,CAACG,GAAG,CAACd,IAAI,CAAC,EAAE,OAAOA,IAAI;IAC/BW,IAAI,CAACI,GAAG,CAACf,IAAI,CAAC;IAEd,MAAMgB,UAAU,GAAGf,aAAa,GAC3B,CAAC,CAAC,GACF,EAAyB;IAC9B,IAAIgB,eAAe,GAAG,KAAK;;IAE3B;IACA,MAAMC,iBAAiB,GAAGjB,aAAa,GACnCkB,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACtB,IAAI,EAAG,QAAO,CAAC,GACpD,KAAK;IACT,IAAIuB,cAAc;IAClB,IAAIL,iBAAiB,EAAE;MACrBK,cAAc,GAAIvB,IAAI,CAAiBwB,MAAM;MAC7C,OAAQxB,IAAI,CAAiBwB,MAAM;IACrC;IAEA,oBAAOxB,IAAI,EAAE,CAACyB,KAAK,EAAEC,GAAG,KAAK;MAC3B,IAAIhB,MAAM,IAAIgB,GAAG,KAAM,UAAS,EAAE;QAChCV,UAAU,CAACU,GAAG,CAAC,GAAGD,KAAK;QACvB;MACF;MACAT,UAAU,CAACU,GAAG,CAAC,GAAGjB,YAAY,CAACgB,KAAK,EAAU,KAAK,EAAEd,IAAI,CAAC;MAE1D,IAAIK,UAAU,CAACU,GAAG,CAAC,KAAKD,KAAK,EAAE;QAC7BR,eAAe,GAAG,IAAI;MACxB;IACF,CAAC,CAAC;IAEF,IAAIC,iBAAiB,EAAE;MACrB;MAAElB,IAAI,CAAiBwB,MAAM,GAAGD,cAAc;MAC9CP,UAAU,CAACQ,MAAM,GAAGf,YAAY,CAACc,cAAc,EAAU,KAAK,EAAEZ,IAAI,CAAC;MACrE,IAAIK,UAAU,CAACQ,MAAM,KAAKD,cAAc,EAAE;QACxCN,eAAe,GAAG,IAAI;MACxB;IACF;IAEA,IAAIA,eAAe,EAAE;MACnBjB,IAAI,GAAGD,aAAa,CAACiB,UAAU,CAAiB;IAClD;;IAEA;IACA,OAAOhB,IAAI;EACb;EAEA,IAAI,CAACK,eAAe,CAACL,IAAI,CAAC,EAAE;IAC1B,OAAOG,SAAS;EAClB,CAAC,MAAM;IACL,OAAOH,IAAI;EACb;AACF,CAAC;AAAA"}