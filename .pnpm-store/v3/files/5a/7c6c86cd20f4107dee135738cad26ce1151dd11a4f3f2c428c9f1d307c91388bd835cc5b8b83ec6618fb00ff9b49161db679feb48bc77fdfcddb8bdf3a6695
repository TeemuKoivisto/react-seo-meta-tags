{"version":3,"file":"jobs.js","names":["jobsReducer","state","active","done","action","type","payload","id","Error","index","j","mergedJob","createdAt","Date","now","plugin","push","completedAt","oneLine","job","splice","runTime","moment","diff"],"sources":["../../../src/redux/reducers/jobs.ts"],"sourcesContent":["import _ from \"lodash\"\nimport { oneLine } from \"common-tags\"\nimport moment from \"moment\"\n\nimport { IGatsbyState, ActionsUnion } from \"../types\"\n\nexport const jobsReducer = (\n  state: IGatsbyState[\"jobs\"] = { active: [], done: [] },\n  action: ActionsUnion\n): IGatsbyState[\"jobs\"] => {\n  switch (action.type) {\n    case `CREATE_JOB`:\n    case `SET_JOB`: {\n      if (!action.payload.id) {\n        throw new Error(`An ID must be provided when creating or setting job`)\n      }\n      const index = _.findIndex(state.active, j => j.id === action.payload.id)\n      if (index !== -1) {\n        const mergedJob = _.merge(state.active[index], {\n          ...action.payload,\n          createdAt: Date.now(),\n          plugin: action.plugin,\n        })\n\n        state.active[index] = mergedJob\n        return state\n      } else {\n        state.active.push({\n          ...action.payload,\n          createdAt: Date.now(),\n          plugin: action.plugin,\n        })\n        return state\n      }\n    }\n    case `END_JOB`: {\n      if (!action.payload.id) {\n        throw new Error(`An ID must be provided when ending a job`)\n      }\n      const completedAt = Date.now()\n      const index = _.findIndex(state.active, j => j.id === action.payload.id)\n      if (index === -1) {\n        throw new Error(oneLine`\n          The plugin \"${_.get(action, `plugin.name`, `anonymous`)}\"\n          tried to end a job with the id \"${action.payload.id}\"\n          that either hasn't yet been created or has already been ended`)\n      }\n      const job = state.active.splice(index, 1)[0]\n      state.done.push({\n        ...job,\n        completedAt,\n        runTime: moment(completedAt).diff(moment(job.createdAt)),\n      })\n\n      return state\n    }\n  }\n\n  return state\n}\n"],"mappings":";;;;;;;;AACA;AACA;AAIO,MAAMA,WAAW,GAAG,CACzBC,KAA2B,GAAG;EAAEC,MAAM,EAAE,EAAE;EAAEC,IAAI,EAAE;AAAG,CAAC,EACtDC,MAAoB,KACK;EACzB,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAM,YAAW;IACjB,KAAM,SAAQ;MAAE;QACd,IAAI,CAACD,MAAM,CAACE,OAAO,CAACC,EAAE,EAAE;UACtB,MAAM,IAAIC,KAAK,CAAE,qDAAoD,CAAC;QACxE;QACA,MAAMC,KAAK,GAAG,yBAAYR,KAAK,CAACC,MAAM,EAAEQ,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKH,MAAM,CAACE,OAAO,CAACC,EAAE,CAAC;QACxE,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;UAChB,MAAME,SAAS,GAAG,qBAAQV,KAAK,CAACC,MAAM,CAACO,KAAK,CAAC,EAAE;YAC7C,GAAGL,MAAM,CAACE,OAAO;YACjBM,SAAS,EAAEC,IAAI,CAACC,GAAG,EAAE;YACrBC,MAAM,EAAEX,MAAM,CAACW;UACjB,CAAC,CAAC;UAEFd,KAAK,CAACC,MAAM,CAACO,KAAK,CAAC,GAAGE,SAAS;UAC/B,OAAOV,KAAK;QACd,CAAC,MAAM;UACLA,KAAK,CAACC,MAAM,CAACc,IAAI,CAAC;YAChB,GAAGZ,MAAM,CAACE,OAAO;YACjBM,SAAS,EAAEC,IAAI,CAACC,GAAG,EAAE;YACrBC,MAAM,EAAEX,MAAM,CAACW;UACjB,CAAC,CAAC;UACF,OAAOd,KAAK;QACd;MACF;IACA,KAAM,SAAQ;MAAE;QACd,IAAI,CAACG,MAAM,CAACE,OAAO,CAACC,EAAE,EAAE;UACtB,MAAM,IAAIC,KAAK,CAAE,0CAAyC,CAAC;QAC7D;QACA,MAAMS,WAAW,GAAGJ,IAAI,CAACC,GAAG,EAAE;QAC9B,MAAML,KAAK,GAAG,yBAAYR,KAAK,CAACC,MAAM,EAAEQ,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKH,MAAM,CAACE,OAAO,CAACC,EAAE,CAAC;QACxE,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;UAChB,MAAM,IAAID,KAAK,CAAC,IAAAU,mBAAO,CAAC;AAChC,wBAAwB,mBAAMd,MAAM,EAAG,aAAY,EAAG,WAAU,CAAE;AAClE,4CAA4CA,MAAM,CAACE,OAAO,CAACC,EAAG;AAC9D,wEAAwE,CAAC;QACnE;QACA,MAAMY,GAAG,GAAGlB,KAAK,CAACC,MAAM,CAACkB,MAAM,CAACX,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5CR,KAAK,CAACE,IAAI,CAACa,IAAI,CAAC;UACd,GAAGG,GAAG;UACNF,WAAW;UACXI,OAAO,EAAE,IAAAC,eAAM,EAACL,WAAW,CAAC,CAACM,IAAI,CAAC,IAAAD,eAAM,EAACH,GAAG,CAACP,SAAS,CAAC;QACzD,CAAC,CAAC;QAEF,OAAOX,KAAK;MACd;EAAC;EAGH,OAAOA,KAAK;AACd,CAAC;AAAA"}