{"version":3,"file":"nodes-by-type.js","names":["updateNodesByType","nodesByTypeDb","action","type","put","payload","internal","id","remove"],"sources":["../../../../src/datastore/lmdb/updates/nodes-by-type.ts"],"sourcesContent":["import { ActionsUnion } from \"../../../redux/types\"\nimport { ILmdbDatabases } from \"../../types\"\n\nexport function updateNodesByType(\n  nodesByTypeDb: ILmdbDatabases[\"nodesByType\"],\n  action: ActionsUnion\n): Promise<boolean> | boolean {\n  switch (action.type) {\n    case `CREATE_NODE`:\n    case `ADD_FIELD_TO_NODE`:\n    case `ADD_CHILD_NODE_TO_PARENT_NODE`: {\n      // nodesByType db uses dupSort, so `put` will effectively append an id\n      return nodesByTypeDb.put(action.payload.internal.type, action.payload.id)\n    }\n    case `DELETE_NODE`: {\n      return action.payload\n        ? nodesByTypeDb.remove(action.payload.internal.type, action.payload.id)\n        : false\n    }\n  }\n  return false\n}\n"],"mappings":";;;;AAGO,SAASA,iBAAiB,CAC/BC,aAA4C,EAC5CC,MAAoB,EACQ;EAC5B,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAM,aAAY;IAClB,KAAM,mBAAkB;IACxB,KAAM,+BAA8B;MAAE;QACpC;QACA,OAAOF,aAAa,CAACG,GAAG,CAACF,MAAM,CAACG,OAAO,CAACC,QAAQ,CAACH,IAAI,EAAED,MAAM,CAACG,OAAO,CAACE,EAAE,CAAC;MAC3E;IACA,KAAM,aAAY;MAAE;QAClB,OAAOL,MAAM,CAACG,OAAO,GACjBJ,aAAa,CAACO,MAAM,CAACN,MAAM,CAACG,OAAO,CAACC,QAAQ,CAACH,IAAI,EAAED,MAAM,CAACG,OAAO,CAACE,EAAE,CAAC,GACrE,KAAK;MACX;EAAC;EAEH,OAAO,KAAK;AACd"}