{"version":3,"file":"pagination.js","names":["getPageInfo","schemaComposer","getOrCreateOTC","tc","addFields","currentPage","hasPreviousPage","hasNextPage","itemCount","pageCount","perPage","totalCount","getEdge","typeComposer","typeName","getTypeName","addDerivedType","derivedTypeName","next","node","getTypeNonNull","previous","getGroup","fields","field","fieldValue","createPagination","getPagination","getFieldSelectorTC","convertToNestedInputType","onEnter","fieldName","sortable","UnionTypeComposer","ScalarTypeComposer","undefined","getFieldExtension","SORTABLE_ENUM","NOT_SORTABLE","DEPRECATED_SORTABLE","deprecationReason","leafInputComposer","getOrCreateETC","etc","setFields","SELECT","value","postfix","inputTypeComposer","getInputTypeComposer","fieldsEnumTC","getFieldsEnum","fieldTC","paginationTypeComposer","aggregationFields","distinct","type","args","resolve","createDistinctResolver","max","createMaxResolver","min","createMinResolver","sum","createSumResolver","group","skip","limit","createGroupResolver","edges","nodes","pageInfo","makeFieldNonNull"],"sources":["../../../src/schema/types/pagination.ts"],"sourcesContent":["import {\n  SchemaComposer,\n  ObjectTypeComposer,\n  InputTypeComposer,\n  InterfaceTypeComposer,\n  ObjectTypeComposerFieldConfigMapDefinition,\n  UnionTypeComposer,\n  ScalarTypeComposer,\n  AnyTypeComposer,\n} from \"graphql-compose\"\nimport { getFieldsEnum } from \"./sort\"\nimport { addDerivedType } from \"./derived-types\"\nimport {\n  createDistinctResolver,\n  createGroupResolver,\n  createMaxResolver,\n  createMinResolver,\n  createSumResolver,\n} from \"../resolvers\"\nimport { convertToNestedInputType, IVisitContext } from \"./utils\"\nimport { SORTABLE_ENUM } from \"./sort\"\n\nexport const getPageInfo = <TContext = any>({\n  schemaComposer,\n}: {\n  schemaComposer: SchemaComposer<TContext>\n}): ObjectTypeComposer =>\n  schemaComposer.getOrCreateOTC(`PageInfo`, tc => {\n    tc.addFields({\n      currentPage: `Int!`,\n      hasPreviousPage: `Boolean!`,\n      hasNextPage: `Boolean!`,\n      itemCount: `Int!`,\n      pageCount: `Int!`,\n      perPage: `Int`,\n      totalCount: `Int!`,\n    })\n  })\n\nexport const getEdge = <TContext = any>({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<TContext>\n  typeComposer: ObjectTypeComposer | InterfaceTypeComposer\n}): ObjectTypeComposer => {\n  const typeName = `${typeComposer.getTypeName()}Edge`\n  addDerivedType({ typeComposer, derivedTypeName: typeName })\n  return schemaComposer.getOrCreateOTC(typeName, tc => {\n    tc.addFields({\n      next: typeComposer,\n      node: typeComposer.getTypeNonNull(),\n      previous: typeComposer,\n    })\n  })\n}\n\nexport const getGroup = <TContext = any>({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<TContext>\n  typeComposer: ObjectTypeComposer | InterfaceTypeComposer\n}): ObjectTypeComposer => {\n  const typeName = `${typeComposer.getTypeName()}GroupConnection`\n  const fields = {\n    field: `String!`,\n    fieldValue: `String`,\n  }\n  return createPagination({ schemaComposer, typeComposer, typeName, fields })\n}\n\nexport const getPagination = <TContext = any>({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<TContext>\n  typeComposer: ObjectTypeComposer | InterfaceTypeComposer\n}): ObjectTypeComposer => {\n  const typeName = `${typeComposer.getTypeName()}Connection`\n  return createPagination({ schemaComposer, typeComposer, typeName })\n}\n\nfunction getFieldSelectorTC({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<any>\n  typeComposer: ObjectTypeComposer | InterfaceTypeComposer\n}): AnyTypeComposer<any> {\n  if (_CFLAGS_.GATSBY_MAJOR === `5`) {\n    return convertToNestedInputType({\n      schemaComposer,\n      typeComposer,\n      onEnter: ({ fieldName, typeComposer }): IVisitContext => {\n        const sortable =\n          typeComposer instanceof UnionTypeComposer ||\n          typeComposer instanceof ScalarTypeComposer\n            ? undefined\n            : typeComposer.getFieldExtension(fieldName, `sortable`)\n        if (sortable === SORTABLE_ENUM.NOT_SORTABLE) {\n          // stop traversing\n          return null\n        } else if (sortable === SORTABLE_ENUM.DEPRECATED_SORTABLE) {\n          // mark this and all nested fields as deprecated\n          return {\n            deprecationReason: `Sorting on fields that need arguments to resolve is deprecated.`,\n          }\n        }\n\n        // continue\n        return undefined\n      },\n      leafInputComposer: schemaComposer.getOrCreateETC(\n        `FieldSelectorEnum`,\n        etc => {\n          etc.setFields({\n            // GraphQL spec doesn't allow using \"true\" (or \"false\" or \"null\") as enum values\n            // so we \"SELECT\"\n            SELECT: { value: `SELECT` },\n          })\n        }\n      ),\n      postfix: `FieldSelector`,\n    }).getTypeNonNull()\n  } else {\n    const inputTypeComposer: InputTypeComposer =\n      typeComposer.getInputTypeComposer()\n\n    const fieldsEnumTC = getFieldsEnum({\n      schemaComposer,\n      typeComposer,\n      inputTypeComposer,\n    })\n    return fieldsEnumTC.getTypeNonNull()\n  }\n}\n\nfunction createPagination<TSource = any, TContext = any>({\n  schemaComposer,\n  typeComposer,\n  fields,\n  typeName,\n}: {\n  schemaComposer: SchemaComposer<TContext>\n  typeComposer: ObjectTypeComposer | InterfaceTypeComposer\n  typeName: string\n  fields?: ObjectTypeComposerFieldConfigMapDefinition<TSource, TContext>\n}): ObjectTypeComposer {\n  const fieldTC = getFieldSelectorTC({ schemaComposer, typeComposer })\n\n  const paginationTypeComposer: ObjectTypeComposer =\n    schemaComposer.getOrCreateOTC(typeName, tc => {\n      // getGroup() will create a recursive call to pagination,\n      // so only add it and other aggregate functions on onCreate.\n      // Cast into their own category to avoid Typescript conflicts.\n      const aggregationFields: { [key: string]: any } = {\n        distinct: {\n          type: [`String!`],\n          args: {\n            field: fieldTC,\n          },\n          resolve: createDistinctResolver(typeComposer.getTypeName()),\n        },\n        max: {\n          type: `Float`,\n          args: {\n            field: fieldTC,\n          },\n          resolve: createMaxResolver(typeComposer.getTypeName()),\n        },\n        min: {\n          type: `Float`,\n          args: {\n            field: fieldTC,\n          },\n          resolve: createMinResolver(typeComposer.getTypeName()),\n        },\n        sum: {\n          type: `Float`,\n          args: {\n            field: fieldTC,\n          },\n          resolve: createSumResolver(typeComposer.getTypeName()),\n        },\n        group: {\n          type: [getGroup({ schemaComposer, typeComposer }).getTypeNonNull()],\n          args: {\n            skip: `Int`,\n            limit: `Int`,\n            field: fieldTC,\n          },\n          resolve: createGroupResolver(typeComposer.getTypeName()),\n        },\n      }\n\n      tc.addFields({\n        totalCount: `Int!`,\n        edges: [getEdge({ schemaComposer, typeComposer }).getTypeNonNull()],\n        nodes: [typeComposer.getTypeNonNull()],\n        pageInfo: getPageInfo({ schemaComposer }).getTypeNonNull(),\n        ...aggregationFields,\n        ...fields,\n      })\n    })\n  paginationTypeComposer.makeFieldNonNull(`edges`)\n  paginationTypeComposer.makeFieldNonNull(`nodes`)\n  paginationTypeComposer.makeFieldNonNull(`distinct`)\n  paginationTypeComposer.makeFieldNonNull(`group`)\n  addDerivedType({ typeComposer, derivedTypeName: typeName })\n  return paginationTypeComposer\n}\n"],"mappings":"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"}