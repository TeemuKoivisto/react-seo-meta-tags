{"version":3,"file":"filter.js","names":["SEARCHABLE_ENUM","SEARCHABLE","NOT_SEARCHABLE","DEPRECATED_SEARCHABLE","getQueryOperatorListInput","schemaComposer","inputTypeComposer","typeName","getTypeName","replace","getOrCreateITC","itc","addFields","elemMatch","EQ","NE","GT","GTE","LT","LTE","IN","NIN","REGEX","GLOB","ALLOWED_OPERATORS","Boolean","Date","Float","ID","Int","JSON","String","Enum","CustomScalar","ARRAY_OPERATORS","getOperatorFields","fieldType","operators","result","forEach","op","includes","isBuiltInScalarType","type","isSpecifiedScalarType","GraphQLDate","GraphQLJSON","getQueryOperatorInput","GraphQLEnumType","name","getFilterInput","typeComposer","convertToNestedInputType","postfix","onEnter","fieldName","searchable","UnionTypeComposer","ScalarTypeComposer","undefined","getFieldExtension","deprecationReason","leafInputComposer","listInputComposer"],"sources":["../../../src/schema/types/filter.ts"],"sourcesContent":["import {\n  GraphQLEnumType,\n  isSpecifiedScalarType,\n  GraphQLScalarType,\n} from \"graphql\"\nimport {\n  InputTypeComposer,\n  GraphQLJSON,\n  SchemaComposer,\n  ObjectTypeComposer,\n  InterfaceTypeComposer,\n  UnionTypeComposer,\n  ScalarTypeComposer,\n} from \"graphql-compose\"\nimport { GraphQLDate } from \"./date\"\nimport { convertToNestedInputType, IVisitContext } from \"./utils\"\n\ntype Context = any\n\nexport const SEARCHABLE_ENUM = {\n  SEARCHABLE: `SEARCHABLE`,\n  NOT_SEARCHABLE: `NON_SEARCHABLE`,\n  DEPRECATED_SEARCHABLE: `DERPECATED_SEARCHABLE`,\n} as const\n\nconst getQueryOperatorListInput = ({\n  schemaComposer,\n  inputTypeComposer,\n}: {\n  schemaComposer: SchemaComposer<any>\n  inputTypeComposer: InputTypeComposer\n}): InputTypeComposer => {\n  const typeName = inputTypeComposer.getTypeName().replace(/Input/, `ListInput`)\n  return schemaComposer.getOrCreateITC(typeName, itc => {\n    itc.addFields({\n      elemMatch: inputTypeComposer,\n    })\n  })\n}\n\nconst EQ = `eq`\nconst NE = `ne`\nconst GT = `gt`\nconst GTE = `gte`\nconst LT = `lt`\nconst LTE = `lte`\nconst IN = `in`\nconst NIN = `nin`\nconst REGEX = `regex`\nconst GLOB = `glob`\n\nconst ALLOWED_OPERATORS = {\n  Boolean: [EQ, NE, IN, NIN],\n  Date: [EQ, NE, GT, GTE, LT, LTE, IN, NIN],\n  Float: [EQ, NE, GT, GTE, LT, LTE, IN, NIN],\n  ID: [EQ, NE, IN, NIN],\n  Int: [EQ, NE, GT, GTE, LT, LTE, IN, NIN],\n  JSON: [EQ, NE, IN, NIN, REGEX, GLOB],\n  String: [EQ, NE, IN, NIN, REGEX, GLOB],\n  Enum: [EQ, NE, IN, NIN],\n  CustomScalar: [EQ, NE, IN, NIN],\n}\n\ntype TypeName = keyof typeof ALLOWED_OPERATORS\n\nconst ARRAY_OPERATORS = [IN, NIN]\n\nconst getOperatorFields = (\n  fieldType: string,\n  operators: Array<string>\n): Record<string, string | Array<string>> => {\n  const result = {}\n  operators.forEach(op => {\n    if (ARRAY_OPERATORS.includes(op)) {\n      result[op] = [fieldType]\n    } else {\n      result[op] = fieldType\n    }\n  })\n  return result\n}\n\nconst isBuiltInScalarType = (type: any): type is GraphQLScalarType =>\n  isSpecifiedScalarType(type) || type === GraphQLDate || type === GraphQLJSON\n\nconst getQueryOperatorInput = ({\n  schemaComposer,\n  type,\n}: {\n  schemaComposer: SchemaComposer<Context>\n  type: any\n}): InputTypeComposer => {\n  let typeName: TypeName\n  if (type instanceof GraphQLEnumType) {\n    typeName = `Enum`\n  } else if (isBuiltInScalarType(type)) {\n    typeName = type.name as Exclude<TypeName, \"Enum\" | \"CustomScalar\">\n  } else {\n    typeName = `CustomScalar`\n  }\n  const operators = ALLOWED_OPERATORS[typeName]\n  return schemaComposer.getOrCreateITC(type.name + `QueryOperatorInput`, itc =>\n    itc.addFields(getOperatorFields(type, operators))\n  )\n}\n\nexport const getFilterInput = ({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<Context>\n  typeComposer: ObjectTypeComposer<Context> | InterfaceTypeComposer<Context>\n}): InputTypeComposer =>\n  convertToNestedInputType({\n    schemaComposer,\n    typeComposer,\n    postfix: `FilterInput`,\n    onEnter: ({ fieldName, typeComposer }): IVisitContext => {\n      const searchable =\n        typeComposer instanceof UnionTypeComposer ||\n        typeComposer instanceof ScalarTypeComposer\n          ? undefined\n          : typeComposer.getFieldExtension(fieldName, `searchable`)\n\n      if (searchable === SEARCHABLE_ENUM.NOT_SEARCHABLE) {\n        // stop traversing\n        return null\n      } else if (searchable === SEARCHABLE_ENUM.DEPRECATED_SEARCHABLE) {\n        // mark this and all nested fields as deprecated\n        return {\n          deprecationReason: `Filtering on fields that need arguments to resolve is deprecated.`,\n        }\n      }\n\n      // continue\n      return undefined\n    },\n    leafInputComposer: getQueryOperatorInput,\n    // elemMatch operator\n    listInputComposer: getQueryOperatorListInput,\n  })\n"],"mappings":"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"}