{"version":3,"file":"js-chunk-names.js","names":["kebabCase","memoize","pathRelative","path","relative","murmurhash","_murmurhash","replaceUnifiedRoutesKeys","kebabedName","filePath","newString","split","sep","forEach","part","match","exec","replace","chunkNameCache","Map","generateComponentChunkName","componentPath","kind","has","get","program","store","getState","directory","name","includes","_match","contentFilePath","maxLength","shouldTruncate","length","hash","substring","chunkName","set"],"sources":["../../src/utils/js-chunk-names.ts"],"sourcesContent":["import memoize from \"memoizee\"\nimport { kebabCase as _kebabCase } from \"lodash\"\nimport { murmurhash as _murmurhash } from \"gatsby-core-utils/murmurhash\"\nimport path from \"path\"\nimport { store } from \"../redux\"\n\nconst kebabCase: (string?: string) => string = memoize(_kebabCase)\nconst pathRelative: (from: string, to: string) => string = memoize(\n  path.relative\n)\nconst murmurhash: (str: string, seed: number) => number = memoize(_murmurhash)\n\n// unified routes adds support for files with [] and {},\n// the problem with our generateComponentChunkName is that when you\n// call kebabCase, is strips off characters like that. This means\n// that when you have a app with this sort of setup, the resolutions fail\n//\n// src/pages/products/{id}.js (collection route)\n// src/pages/products/[...id].js (should render when a non-matched id is passed in)\n//\n// without this function, what happens is that all visits to /products/__ resolve to only one\n// of these because the componentChunkName ends up being duplicate. This function ensures that\n// the {} and [] are kept in the componentChunkName. Also there are tests for this.\nfunction replaceUnifiedRoutesKeys(\n  kebabedName: string,\n  filePath: string\n): string {\n  let newString = kebabedName\n\n  filePath.split(path.sep).forEach(part => {\n    if (part[0] === `[` || part[0] === `{`) {\n      const match = /(\\[(.*)\\]|\\{(.*)\\})/.exec(part)\n      newString = newString.replace(\n        `-${match![2] || match![3]}-`,\n        `-${match![0]}-`\n      )\n    }\n  })\n\n  return newString\n}\n\nconst chunkNameCache = new Map()\nexport function generateComponentChunkName(\n  componentPath: string,\n  kind: \"component\" | \"slice\" = `component`\n): string {\n  if (chunkNameCache.has(componentPath)) {\n    return chunkNameCache.get(componentPath)\n  } else {\n    const { program } = store.getState()\n    const directory = program?.directory || `/`\n    let name = pathRelative(directory, componentPath)\n    if (name.includes(`__contentFilePath`)) {\n      name = name.replace(\n        /__contentFilePath=([^&]*)/,\n        (_match, contentFilePath) =>\n          `__contentFilePath=${pathRelative(directory, contentFilePath)}`\n      )\n    }\n    name = replaceUnifiedRoutesKeys(kebabCase(name), name)\n\n    /**\n     * File names should not exceed 255 characters\n     * minus 12 for `component---`\n     * minus 7 for `.js.map`\n     * minus 20 for `-[hash].js`\n     */\n    const maxLength = 215\n    const shouldTruncate = name.length > maxLength\n\n    /**\n     * To prevent long file name errors, we truncate the name to a maximum of 60 characters.\n     */\n    if (shouldTruncate) {\n      const hash = murmurhash(name, 0)\n      name = `${hash}-${name.substring(name.length - 60)}`\n    }\n\n    const chunkName = `${kind}---${name}`\n\n    chunkNameCache.set(componentPath, chunkName)\n\n    return chunkName\n  }\n}\n"],"mappings":";;;;;;AAAA;AAEA;AACA;AACA;AAEA,MAAMA,SAAsC,GAAG,IAAAC,iBAAO,sBAAY;AAClE,MAAMC,YAAkD,GAAG,IAAAD,iBAAO,EAChEE,aAAI,CAACC,QAAQ,CACd;AACD,MAAMC,UAAiD,GAAG,IAAAJ,iBAAO,EAACK,uBAAW,CAAC;;AAE9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,wBAAwB,CAC/BC,WAAmB,EACnBC,QAAgB,EACR;EACR,IAAIC,SAAS,GAAGF,WAAW;EAE3BC,QAAQ,CAACE,KAAK,CAACR,aAAI,CAACS,GAAG,CAAC,CAACC,OAAO,CAACC,IAAI,IAAI;IACvC,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAM,GAAE,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAM,GAAE,EAAE;MACtC,MAAMC,KAAK,GAAG,qBAAqB,CAACC,IAAI,CAACF,IAAI,CAAC;MAC9CJ,SAAS,GAAGA,SAAS,CAACO,OAAO,CAC1B,IAAGF,KAAK,CAAE,CAAC,CAAC,IAAIA,KAAK,CAAE,CAAC,CAAE,GAAE,EAC5B,IAAGA,KAAK,CAAE,CAAC,CAAE,GAAE,CACjB;IACH;EACF,CAAC,CAAC;EAEF,OAAOL,SAAS;AAClB;AAEA,MAAMQ,cAAc,GAAG,IAAIC,GAAG,EAAE;AACzB,SAASC,0BAA0B,CACxCC,aAAqB,EACrBC,IAA2B,GAAI,WAAU,EACjC;EACR,IAAIJ,cAAc,CAACK,GAAG,CAACF,aAAa,CAAC,EAAE;IACrC,OAAOH,cAAc,CAACM,GAAG,CAACH,aAAa,CAAC;EAC1C,CAAC,MAAM;IACL,MAAM;MAAEI;IAAQ,CAAC,GAAGC,YAAK,CAACC,QAAQ,EAAE;IACpC,MAAMC,SAAS,GAAG,CAAAH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,SAAS,KAAK,GAAE;IAC3C,IAAIC,IAAI,GAAG3B,YAAY,CAAC0B,SAAS,EAAEP,aAAa,CAAC;IACjD,IAAIQ,IAAI,CAACC,QAAQ,CAAE,mBAAkB,CAAC,EAAE;MACtCD,IAAI,GAAGA,IAAI,CAACZ,OAAO,CACjB,2BAA2B,EAC3B,CAACc,MAAM,EAAEC,eAAe,KACrB,qBAAoB9B,YAAY,CAAC0B,SAAS,EAAEI,eAAe,CAAE,EAAC,CAClE;IACH;IACAH,IAAI,GAAGtB,wBAAwB,CAACP,SAAS,CAAC6B,IAAI,CAAC,EAAEA,IAAI,CAAC;;IAEtD;AACJ;AACA;AACA;AACA;AACA;IACI,MAAMI,SAAS,GAAG,GAAG;IACrB,MAAMC,cAAc,GAAGL,IAAI,CAACM,MAAM,GAAGF,SAAS;;IAE9C;AACJ;AACA;IACI,IAAIC,cAAc,EAAE;MAClB,MAAME,IAAI,GAAG/B,UAAU,CAACwB,IAAI,EAAE,CAAC,CAAC;MAChCA,IAAI,GAAI,GAAEO,IAAK,IAAGP,IAAI,CAACQ,SAAS,CAACR,IAAI,CAACM,MAAM,GAAG,EAAE,CAAE,EAAC;IACtD;IAEA,MAAMG,SAAS,GAAI,GAAEhB,IAAK,MAAKO,IAAK,EAAC;IAErCX,cAAc,CAACqB,GAAG,CAAClB,aAAa,EAAEiB,SAAS,CAAC;IAE5C,OAAOA,SAAS;EAClB;AACF"}