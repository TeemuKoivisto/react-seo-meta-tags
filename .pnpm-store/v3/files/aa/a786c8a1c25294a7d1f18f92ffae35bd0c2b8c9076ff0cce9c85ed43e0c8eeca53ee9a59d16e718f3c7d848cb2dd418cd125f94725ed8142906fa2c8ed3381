{"version":3,"file":"loader.js","names":["PageResourceStatus","Error","Success","preferDefault","m","default","stripSurroundingSlashes","s","slice","endsWith","createPageDataUrl","rawPath","path","maybeSearch","split","fixedPath","__PATH_PREFIX__","shouldAbortFetch","startsWith","doFetch","url","method","Promise","resolve","req","XMLHttpRequest","open","onreadystatechange","readyState","send","doesConnectionSupportPrefetch","navigator","connection","effectiveType","includes","saveData","BOT_REGEX","toPageResources","pageData","component","head","page","componentChunkName","webpackCompilationHash","matchPath","staticQueryHashes","getServerDataError","slicesMap","json","result","waitForResponse","response","readRoot","err","Object","hasOwnProperty","call","setTimeout","then","BaseLoader","constructor","loadComponent","matchPaths","pageDb","Map","inFlightDb","staticQueryDb","pageDataDb","partialHydrationDb","slicesDataDb","sliceInflightDb","slicesDb","isPrefetchQueueRunning","prefetchQueued","prefetchTriggered","Set","prefetchCompleted","setMatchPaths","inFlightNetworkRequests","memoizedGet","inFlightPromise","get","set","delete","catch","setApiRunner","apiRunner","prefetchDisabled","some","a","fetchPageDataJson","loadObj","pagePath","retries","status","responseText","jsonPayload","JSON","parse","undefined","assign","payload","notFound","internalServerError","fetchPartialHydrationJson","replace","loadPageDataJson","findPath","has","process","env","BUILD_STAGE","stale","loadPartialHydrationJson","loadSliceDataJson","sliceName","res","findMatchPath","loadPage","error","loadDataPromises","loadAppData","global","hasPartialHydration","push","all","allData","appDataResponse","pageDataResponse","rscDataResponse","pageStaticQueryHashes","finalResult","dedupedSliceNames","Array","from","values","loadSlice","name","inFlight","sliceContext","data","results","map","slicesData","slices","dedupedStaticQueryHashes","staticQueryHash","loadChunkPromises","componentChunkPromises","components","sliceComponents","headComponent","pageComponent","createdAt","Date","sliceComponent","pageResources","partialHydration","readableStream","ReadableStream","start","controller","te","TextEncoder","enqueue","encode","pull","close","cancel","createFromReadableStream","staticQueryBatchPromise","staticQueryResults","staticQueryResultsMap","forEach","emitter","emit","loadPageSync","options","withErrorDetails","shouldPrefetch","userAgent","test","prefetch","abort","defer","reject","promise","abortC","AbortController","signal","addEventListener","index","findIndex","p","splice","_processNextPrefetchBatch","bind","idleCallback","window","requestIdleCallback","cb","toPrefetch","prefetches","dPromise","pathname","add","doPrefetch","length","pageDataUrl","prefetchHelper","crossOrigin","as","hovering","getResourceURLsForPathname","createComponentUrls","isPageNotFound","appData","___chunkMapping","chunk","ProdLoader","asyncRequires","chunkName","exportType","componentUrls","instance","setLoader","_loader","publicLoader","getStaticQueryResults","getSliceResults"],"sources":["../loader.js"],"sourcesContent":["import { createFromReadableStream } from \"react-server-dom-webpack\"\nimport prefetchHelper from \"./prefetch\"\nimport emitter from \"./emitter\"\nimport { setMatchPaths, findPath, findMatchPath } from \"./find-path\"\n\n/**\n * Available resource loading statuses\n */\nexport const PageResourceStatus = {\n  /**\n   * At least one of critical resources failed to load\n   */\n  Error: `error`,\n  /**\n   * Resources loaded successfully\n   */\n  Success: `success`,\n}\n\nconst preferDefault = m => (m && m.default) || m\n\nconst stripSurroundingSlashes = s => {\n  s = s[0] === `/` ? s.slice(1) : s\n  s = s.endsWith(`/`) ? s.slice(0, -1) : s\n  return s\n}\n\nconst createPageDataUrl = rawPath => {\n  const [path, maybeSearch] = rawPath.split(`?`)\n  const fixedPath = path === `/` ? `index` : stripSurroundingSlashes(path)\n  return `${__PATH_PREFIX__}/page-data/${fixedPath}/page-data.json${\n    maybeSearch ? `?${maybeSearch}` : ``\n  }`\n}\n\n/**\n * Utility to check the path that goes into doFetch for e.g. potential malicious intentions.\n * It checks for \"//\" because with this you could do a fetch request to a different domain.\n */\nconst shouldAbortFetch = rawPath => rawPath.startsWith(`//`)\n\nfunction doFetch(url, method = `GET`) {\n  return new Promise(resolve => {\n    const req = new XMLHttpRequest()\n    req.open(method, url, true)\n    req.onreadystatechange = () => {\n      if (req.readyState == 4) {\n        resolve(req)\n      }\n    }\n    req.send(null)\n  })\n}\n\nconst doesConnectionSupportPrefetch = () => {\n  if (\n    `connection` in navigator &&\n    typeof navigator.connection !== `undefined`\n  ) {\n    if ((navigator.connection.effectiveType || ``).includes(`2g`)) {\n      return false\n    }\n    if (navigator.connection.saveData) {\n      return false\n    }\n  }\n  return true\n}\n\n// Regex that matches common search crawlers\nconst BOT_REGEX = /bot|crawler|spider|crawling/i\n\nconst toPageResources = (pageData, component = null, head) => {\n  const page = {\n    componentChunkName: pageData.componentChunkName,\n    path: pageData.path,\n    webpackCompilationHash: pageData.webpackCompilationHash,\n    matchPath: pageData.matchPath,\n    staticQueryHashes: pageData.staticQueryHashes,\n    getServerDataError: pageData.getServerDataError,\n    slicesMap: pageData.slicesMap ?? {},\n  }\n\n  return {\n    component,\n    head,\n    json: pageData.result,\n    page,\n  }\n}\n\nfunction waitForResponse(response) {\n  return new Promise(resolve => {\n    try {\n      const result = response.readRoot()\n      resolve(result)\n    } catch (err) {\n      if (\n        Object.hasOwnProperty.call(err, `_response`) &&\n        Object.hasOwnProperty.call(err, `_status`)\n      ) {\n        setTimeout(() => {\n          waitForResponse(response).then(resolve)\n        }, 200)\n      } else {\n        throw err\n      }\n    }\n  })\n}\n\nexport class BaseLoader {\n  constructor(loadComponent, matchPaths) {\n    // Map of pagePath -> Page. Where Page is an object with: {\n    //   status: PageResourceStatus.Success || PageResourceStatus.Error,\n    //   payload: PageResources, // undefined if PageResourceStatus.Error\n    // }\n    // PageResources is {\n    //   component,\n    //   json: pageData.result,\n    //   page: {\n    //     componentChunkName,\n    //     path,\n    //     webpackCompilationHash,\n    //     staticQueryHashes\n    //   },\n    //   staticQueryResults\n    // }\n    this.pageDb = new Map()\n    this.inFlightDb = new Map()\n    this.staticQueryDb = {}\n    this.pageDataDb = new Map()\n    this.partialHydrationDb = new Map()\n    this.slicesDataDb = new Map()\n    this.sliceInflightDb = new Map()\n    this.slicesDb = new Map()\n    this.isPrefetchQueueRunning = false\n    this.prefetchQueued = []\n    this.prefetchTriggered = new Set()\n    this.prefetchCompleted = new Set()\n    this.loadComponent = loadComponent\n    setMatchPaths(matchPaths)\n  }\n\n  inFlightNetworkRequests = new Map()\n\n  memoizedGet(url) {\n    let inFlightPromise = this.inFlightNetworkRequests.get(url)\n\n    if (!inFlightPromise) {\n      inFlightPromise = doFetch(url, `GET`)\n      this.inFlightNetworkRequests.set(url, inFlightPromise)\n    }\n\n    // Prefer duplication with then + catch over .finally to prevent problems in ie11 + firefox\n    return inFlightPromise\n      .then(response => {\n        this.inFlightNetworkRequests.delete(url)\n        return response\n      })\n      .catch(err => {\n        this.inFlightNetworkRequests.delete(url)\n        throw err\n      })\n  }\n\n  setApiRunner(apiRunner) {\n    this.apiRunner = apiRunner\n    this.prefetchDisabled = apiRunner(`disableCorePrefetching`).some(a => a)\n  }\n\n  fetchPageDataJson(loadObj) {\n    const { pagePath, retries = 0 } = loadObj\n    const url = createPageDataUrl(pagePath)\n    return this.memoizedGet(url).then(req => {\n      const { status, responseText } = req\n\n      // Handle 200\n      if (status === 200) {\n        try {\n          const jsonPayload = JSON.parse(responseText)\n          if (jsonPayload.path === undefined) {\n            throw new Error(`not a valid pageData response`)\n          }\n\n          const maybeSearch = pagePath.split(`?`)[1]\n          if (maybeSearch && !jsonPayload.path.includes(maybeSearch)) {\n            jsonPayload.path += `?${maybeSearch}`\n          }\n\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Success,\n            payload: jsonPayload,\n          })\n        } catch (err) {\n          // continue regardless of error\n        }\n      }\n\n      // Handle 404\n      if (status === 404 || status === 200) {\n        // If the request was for a 404/500 page and it doesn't exist, we're done\n        if (pagePath === `/404.html` || pagePath === `/500.html`) {\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Error,\n          })\n        }\n\n        // Need some code here to cache the 404 request. In case\n        // multiple loadPageDataJsons result in 404s\n        return this.fetchPageDataJson(\n          Object.assign(loadObj, { pagePath: `/404.html`, notFound: true })\n        )\n      }\n\n      // handle 500 response (Unrecoverable)\n      if (status === 500) {\n        return this.fetchPageDataJson(\n          Object.assign(loadObj, {\n            pagePath: `/500.html`,\n            internalServerError: true,\n          })\n        )\n      }\n\n      // Handle everything else, including status === 0, and 503s. Should retry\n      if (retries < 3) {\n        return this.fetchPageDataJson(\n          Object.assign(loadObj, { retries: retries + 1 })\n        )\n      }\n\n      // Retried 3 times already, result is an error.\n      return Object.assign(loadObj, {\n        status: PageResourceStatus.Error,\n      })\n    })\n  }\n\n  fetchPartialHydrationJson(loadObj) {\n    const { pagePath, retries = 0 } = loadObj\n    const url = createPageDataUrl(pagePath).replace(`.json`, `-rsc.json`)\n    return this.memoizedGet(url).then(req => {\n      const { status, responseText } = req\n\n      // Handle 200\n      if (status === 200) {\n        try {\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Success,\n            payload: responseText,\n          })\n        } catch (err) {\n          // continue regardless of error\n        }\n      }\n\n      // Handle 404\n      if (status === 404 || status === 200) {\n        // If the request was for a 404/500 page and it doesn't exist, we're done\n        if (pagePath === `/404.html` || pagePath === `/500.html`) {\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Error,\n          })\n        }\n\n        // Need some code here to cache the 404 request. In case\n        // multiple loadPageDataJsons result in 404s\n        return this.fetchPartialHydrationJson(\n          Object.assign(loadObj, { pagePath: `/404.html`, notFound: true })\n        )\n      }\n\n      // handle 500 response (Unrecoverable)\n      if (status === 500) {\n        return this.fetchPartialHydrationJson(\n          Object.assign(loadObj, {\n            pagePath: `/500.html`,\n            internalServerError: true,\n          })\n        )\n      }\n\n      // Handle everything else, including status === 0, and 503s. Should retry\n      if (retries < 3) {\n        return this.fetchPartialHydrationJson(\n          Object.assign(loadObj, { retries: retries + 1 })\n        )\n      }\n\n      // Retried 3 times already, result is an error.\n      return Object.assign(loadObj, {\n        status: PageResourceStatus.Error,\n      })\n    })\n  }\n\n  loadPageDataJson(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDataDb.has(pagePath)) {\n      const pageData = this.pageDataDb.get(pagePath)\n      if (process.env.BUILD_STAGE !== `develop` || !pageData.stale) {\n        return Promise.resolve(pageData)\n      }\n    }\n\n    return this.fetchPageDataJson({ pagePath }).then(pageData => {\n      this.pageDataDb.set(pagePath, pageData)\n\n      return pageData\n    })\n  }\n\n  loadPartialHydrationJson(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.partialHydrationDb.has(pagePath)) {\n      const pageData = this.partialHydrationDb.get(pagePath)\n      if (process.env.BUILD_STAGE !== `develop` || !pageData.stale) {\n        return Promise.resolve(pageData)\n      }\n    }\n\n    return this.fetchPartialHydrationJson({ pagePath }).then(pageData => {\n      this.partialHydrationDb.set(pagePath, pageData)\n\n      return pageData\n    })\n  }\n\n  loadSliceDataJson(sliceName) {\n    if (this.slicesDataDb.has(sliceName)) {\n      const jsonPayload = this.slicesDataDb.get(sliceName)\n      return Promise.resolve({ sliceName, jsonPayload })\n    }\n\n    const url = `${__PATH_PREFIX__}/slice-data/${sliceName}.json`\n    return doFetch(url, `GET`).then(res => {\n      const jsonPayload = JSON.parse(res.responseText)\n\n      this.slicesDataDb.set(sliceName, jsonPayload)\n      return { sliceName, jsonPayload }\n    })\n  }\n\n  findMatchPath(rawPath) {\n    return findMatchPath(rawPath)\n  }\n\n  // TODO check all uses of this and whether they use undefined for page resources not exist\n  loadPage(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDb.has(pagePath)) {\n      const page = this.pageDb.get(pagePath)\n      if (process.env.BUILD_STAGE !== `develop` || !page.payload.stale) {\n        if (page.error) {\n          return Promise.resolve({\n            error: page.error,\n            status: page.status,\n          })\n        }\n\n        return Promise.resolve(page.payload)\n      }\n    }\n\n    if (this.inFlightDb.has(pagePath)) {\n      return this.inFlightDb.get(pagePath)\n    }\n\n    const loadDataPromises = [\n      this.loadAppData(),\n      this.loadPageDataJson(pagePath),\n    ]\n\n    if (global.hasPartialHydration) {\n      loadDataPromises.push(this.loadPartialHydrationJson(pagePath))\n    }\n\n    const inFlightPromise = Promise.all(loadDataPromises).then(allData => {\n      const [appDataResponse, pageDataResponse, rscDataResponse] = allData\n\n      if (\n        pageDataResponse.status === PageResourceStatus.Error ||\n        rscDataResponse?.status === PageResourceStatus.Error\n      ) {\n        return {\n          status: PageResourceStatus.Error,\n        }\n      }\n\n      let pageData = pageDataResponse.payload\n\n      const {\n        componentChunkName,\n        staticQueryHashes: pageStaticQueryHashes = [],\n        slicesMap = {},\n      } = pageData\n\n      const finalResult = {}\n\n      const dedupedSliceNames = Array.from(new Set(Object.values(slicesMap)))\n\n      const loadSlice = slice => {\n        if (this.slicesDb.has(slice.name)) {\n          return this.slicesDb.get(slice.name)\n        } else if (this.sliceInflightDb.has(slice.name)) {\n          return this.sliceInflightDb.get(slice.name)\n        }\n\n        const inFlight = this.loadComponent(slice.componentChunkName).then(\n          component => {\n            return {\n              component: preferDefault(component),\n              sliceContext: slice.result.sliceContext,\n              data: slice.result.data,\n            }\n          }\n        )\n\n        this.sliceInflightDb.set(slice.name, inFlight)\n        inFlight.then(results => {\n          this.slicesDb.set(slice.name, results)\n          this.sliceInflightDb.delete(slice.name)\n        })\n\n        return inFlight\n      }\n\n      return Promise.all(\n        dedupedSliceNames.map(sliceName => this.loadSliceDataJson(sliceName))\n      ).then(slicesData => {\n        const slices = []\n        const dedupedStaticQueryHashes = [...pageStaticQueryHashes]\n\n        for (const { jsonPayload, sliceName } of Object.values(slicesData)) {\n          slices.push({ name: sliceName, ...jsonPayload })\n          for (const staticQueryHash of jsonPayload.staticQueryHashes) {\n            if (!dedupedStaticQueryHashes.includes(staticQueryHash)) {\n              dedupedStaticQueryHashes.push(staticQueryHash)\n            }\n          }\n        }\n\n        const loadChunkPromises = [\n          Promise.all(slices.map(loadSlice)),\n          this.loadComponent(componentChunkName, `head`),\n        ]\n\n        if (!global.hasPartialHydration) {\n          loadChunkPromises.push(this.loadComponent(componentChunkName))\n        }\n\n        // In develop we have separate chunks for template and Head components\n        // to enable HMR (fast refresh requires single exports).\n        // In production we have shared chunk with both exports. Double loadComponent here\n        // will be deduped by webpack runtime resulting in single request and single module\n        // being loaded for both `component` and `head`.\n        // get list of components to get\n        const componentChunkPromises = Promise.all(loadChunkPromises).then(\n          components => {\n            const [sliceComponents, headComponent, pageComponent] = components\n\n            finalResult.createdAt = new Date()\n\n            for (const sliceComponent of sliceComponents) {\n              if (!sliceComponent || sliceComponent instanceof Error) {\n                finalResult.status = PageResourceStatus.Error\n                finalResult.error = sliceComponent\n              }\n            }\n\n            if (\n              !global.hasPartialHydration &&\n              (!pageComponent || pageComponent instanceof Error)\n            ) {\n              finalResult.status = PageResourceStatus.Error\n              finalResult.error = pageComponent\n            }\n\n            let pageResources\n\n            if (finalResult.status !== PageResourceStatus.Error) {\n              finalResult.status = PageResourceStatus.Success\n              if (\n                pageDataResponse.notFound === true ||\n                rscDataResponse?.notFound === true\n              ) {\n                finalResult.notFound = true\n              }\n              pageData = Object.assign(pageData, {\n                webpackCompilationHash: appDataResponse\n                  ? appDataResponse.webpackCompilationHash\n                  : ``,\n              })\n\n              if (typeof rscDataResponse?.payload === `string`) {\n                pageResources = toPageResources(pageData, null, headComponent)\n\n                pageResources.partialHydration = rscDataResponse.payload\n\n                const readableStream = new ReadableStream({\n                  start(controller) {\n                    const te = new TextEncoder()\n                    controller.enqueue(te.encode(rscDataResponse.payload))\n                  },\n                  pull(controller) {\n                    // close on next read when queue is empty\n                    controller.close()\n                  },\n                  cancel() {},\n                })\n\n                return waitForResponse(\n                  createFromReadableStream(readableStream)\n                ).then(result => {\n                  pageResources.partialHydration = result\n\n                  return pageResources\n                })\n              } else {\n                pageResources = toPageResources(\n                  pageData,\n                  pageComponent,\n                  headComponent\n                )\n              }\n            }\n\n            // undefined if final result is an error\n            return pageResources\n          }\n        )\n\n        // get list of static queries to get\n        const staticQueryBatchPromise = Promise.all(\n          dedupedStaticQueryHashes.map(staticQueryHash => {\n            // Check for cache in case this static query result has already been loaded\n            if (this.staticQueryDb[staticQueryHash]) {\n              const jsonPayload = this.staticQueryDb[staticQueryHash]\n              return { staticQueryHash, jsonPayload }\n            }\n\n            return this.memoizedGet(\n              `${__PATH_PREFIX__}/page-data/sq/d/${staticQueryHash}.json`\n            )\n              .then(req => {\n                const jsonPayload = JSON.parse(req.responseText)\n                return { staticQueryHash, jsonPayload }\n              })\n              .catch(() => {\n                throw new Error(\n                  `We couldn't load \"${__PATH_PREFIX__}/page-data/sq/d/${staticQueryHash}.json\"`\n                )\n              })\n          })\n        ).then(staticQueryResults => {\n          const staticQueryResultsMap = {}\n\n          staticQueryResults.forEach(({ staticQueryHash, jsonPayload }) => {\n            staticQueryResultsMap[staticQueryHash] = jsonPayload\n            this.staticQueryDb[staticQueryHash] = jsonPayload\n          })\n\n          return staticQueryResultsMap\n        })\n\n        return (\n          Promise.all([componentChunkPromises, staticQueryBatchPromise])\n            .then(([pageResources, staticQueryResults]) => {\n              let payload\n              if (pageResources) {\n                payload = { ...pageResources, staticQueryResults }\n                finalResult.payload = payload\n                emitter.emit(`onPostLoadPageResources`, {\n                  page: payload,\n                  pageResources: payload,\n                })\n              }\n\n              this.pageDb.set(pagePath, finalResult)\n\n              if (finalResult.error) {\n                return {\n                  error: finalResult.error,\n                  status: finalResult.status,\n                }\n              }\n\n              return payload\n            })\n            // when static-query fail to load we throw a better error\n            .catch(err => {\n              return {\n                error: err,\n                status: PageResourceStatus.Error,\n              }\n            })\n        )\n      })\n    })\n\n    inFlightPromise\n      .then(() => {\n        this.inFlightDb.delete(pagePath)\n      })\n      .catch(error => {\n        this.inFlightDb.delete(pagePath)\n        throw error\n      })\n\n    this.inFlightDb.set(pagePath, inFlightPromise)\n\n    return inFlightPromise\n  }\n\n  // returns undefined if the page does not exists in cache\n  loadPageSync(rawPath, options = {}) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDb.has(pagePath)) {\n      const pageData = this.pageDb.get(pagePath)\n\n      if (pageData.payload) {\n        return pageData.payload\n      }\n\n      if (options?.withErrorDetails) {\n        return {\n          error: pageData.error,\n          status: pageData.status,\n        }\n      }\n    }\n    return undefined\n  }\n\n  shouldPrefetch(pagePath) {\n    // Skip prefetching if we know user is on slow or constrained connection\n    if (!doesConnectionSupportPrefetch()) {\n      return false\n    }\n\n    // Don't prefetch if this is a crawler bot\n    if (navigator.userAgent && BOT_REGEX.test(navigator.userAgent)) {\n      return false\n    }\n\n    // Check if the page exists.\n    if (this.pageDb.has(pagePath)) {\n      return false\n    }\n\n    return true\n  }\n\n  prefetch(pagePath) {\n    if (!this.shouldPrefetch(pagePath)) {\n      return {\n        then: resolve => resolve(false),\n        abort: () => {},\n      }\n    }\n    if (this.prefetchTriggered.has(pagePath)) {\n      return {\n        then: resolve => resolve(true),\n        abort: () => {},\n      }\n    }\n\n    const defer = {\n      resolve: null,\n      reject: null,\n      promise: null,\n    }\n    defer.promise = new Promise((resolve, reject) => {\n      defer.resolve = resolve\n      defer.reject = reject\n    })\n    this.prefetchQueued.push([pagePath, defer])\n    const abortC = new AbortController()\n    abortC.signal.addEventListener(`abort`, () => {\n      const index = this.prefetchQueued.findIndex(([p]) => p === pagePath)\n      // remove from the queue\n      if (index !== -1) {\n        this.prefetchQueued.splice(index, 1)\n      }\n    })\n\n    if (!this.isPrefetchQueueRunning) {\n      this.isPrefetchQueueRunning = true\n      setTimeout(() => {\n        this._processNextPrefetchBatch()\n      }, 3000)\n    }\n\n    return {\n      then: (resolve, reject) => defer.promise.then(resolve, reject),\n      abort: abortC.abort.bind(abortC),\n    }\n  }\n\n  _processNextPrefetchBatch() {\n    const idleCallback = window.requestIdleCallback || (cb => setTimeout(cb, 0))\n\n    idleCallback(() => {\n      const toPrefetch = this.prefetchQueued.splice(0, 4)\n      const prefetches = Promise.all(\n        toPrefetch.map(([pagePath, dPromise]) => {\n          // Tell plugins with custom prefetching logic that they should start\n          // prefetching this path.\n          if (!this.prefetchTriggered.has(pagePath)) {\n            this.apiRunner(`onPrefetchPathname`, { pathname: pagePath })\n            this.prefetchTriggered.add(pagePath)\n          }\n\n          // If a plugin has disabled core prefetching, stop now.\n          if (this.prefetchDisabled) {\n            return dPromise.resolve(false)\n          }\n\n          return this.doPrefetch(findPath(pagePath)).then(() => {\n            if (!this.prefetchCompleted.has(pagePath)) {\n              this.apiRunner(`onPostPrefetchPathname`, { pathname: pagePath })\n              this.prefetchCompleted.add(pagePath)\n            }\n\n            dPromise.resolve(true)\n          })\n        })\n      )\n\n      if (this.prefetchQueued.length) {\n        prefetches.then(() => {\n          setTimeout(() => {\n            this._processNextPrefetchBatch()\n          }, 3000)\n        })\n      } else {\n        this.isPrefetchQueueRunning = false\n      }\n    })\n  }\n\n  doPrefetch(pagePath) {\n    const pageDataUrl = createPageDataUrl(pagePath)\n\n    if (global.hasPartialHydration) {\n      return Promise.all([\n        prefetchHelper(pageDataUrl, {\n          crossOrigin: `anonymous`,\n          as: `fetch`,\n        }).then(() =>\n          // This was just prefetched, so will return a response from\n          // the cache instead of making another request to the server\n          this.loadPageDataJson(pagePath)\n        ),\n        prefetchHelper(pageDataUrl.replace(`.json`, `-rsc.json`), {\n          crossOrigin: `anonymous`,\n          as: `fetch`,\n        }).then(() =>\n          // This was just prefetched, so will return a response from\n          // the cache instead of making another request to the server\n          this.loadPartialHydrationJson(pagePath)\n        ),\n      ])\n    } else {\n      return prefetchHelper(pageDataUrl, {\n        crossOrigin: `anonymous`,\n        as: `fetch`,\n      }).then(() =>\n        // This was just prefetched, so will return a response from\n        // the cache instead of making another request to the server\n        this.loadPageDataJson(pagePath)\n      )\n    }\n  }\n\n  hovering(rawPath) {\n    this.loadPage(rawPath)\n  }\n\n  getResourceURLsForPathname(rawPath) {\n    const pagePath = findPath(rawPath)\n    const page = this.pageDataDb.get(pagePath)\n    if (page) {\n      const pageResources = toPageResources(page.payload)\n\n      return [\n        ...createComponentUrls(pageResources.page.componentChunkName),\n        createPageDataUrl(pagePath),\n      ]\n    } else {\n      return null\n    }\n  }\n\n  isPageNotFound(rawPath) {\n    const pagePath = findPath(rawPath)\n    const page = this.pageDb.get(pagePath)\n    return !page || page.notFound\n  }\n\n  loadAppData(retries = 0) {\n    return this.memoizedGet(`${__PATH_PREFIX__}/page-data/app-data.json`).then(\n      req => {\n        const { status, responseText } = req\n\n        let appData\n\n        if (status !== 200 && retries < 3) {\n          // Retry 3 times incase of non-200 responses\n          return this.loadAppData(retries + 1)\n        }\n\n        // Handle 200\n        if (status === 200) {\n          try {\n            const jsonPayload = JSON.parse(responseText)\n            if (jsonPayload.webpackCompilationHash === undefined) {\n              throw new Error(`not a valid app-data response`)\n            }\n\n            appData = jsonPayload\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        return appData\n      }\n    )\n  }\n}\n\nconst createComponentUrls = componentChunkName =>\n  (window.___chunkMapping[componentChunkName] || []).map(\n    chunk => __PATH_PREFIX__ + chunk\n  )\n\nexport class ProdLoader extends BaseLoader {\n  constructor(asyncRequires, matchPaths, pageData) {\n    const loadComponent = (chunkName, exportType = `components`) => {\n      if (!global.hasPartialHydration) {\n        exportType = `components`\n      }\n\n      if (!asyncRequires[exportType][chunkName]) {\n        throw new Error(\n          `We couldn't find the correct component chunk with the name \"${chunkName}\"`\n        )\n      }\n\n      return (\n        asyncRequires[exportType][chunkName]()\n          // loader will handle the case when component is error\n          .catch(err => err)\n      )\n    }\n\n    super(loadComponent, matchPaths)\n\n    if (pageData) {\n      this.pageDataDb.set(findPath(pageData.path), {\n        pagePath: pageData.path,\n        payload: pageData,\n        status: `success`,\n      })\n    }\n  }\n\n  doPrefetch(pagePath) {\n    return super.doPrefetch(pagePath).then(result => {\n      if (result.status !== PageResourceStatus.Success) {\n        return Promise.resolve()\n      }\n      const pageData = result.payload\n      const chunkName = pageData.componentChunkName\n      const componentUrls = createComponentUrls(chunkName)\n      return Promise.all(componentUrls.map(prefetchHelper)).then(() => pageData)\n    })\n  }\n\n  loadPageDataJson(rawPath) {\n    return super.loadPageDataJson(rawPath).then(data => {\n      if (data.notFound) {\n        if (shouldAbortFetch(rawPath)) {\n          return data\n        }\n        // check if html file exist using HEAD request:\n        // if it does we should navigate to it instead of showing 404\n        return doFetch(rawPath, `HEAD`).then(req => {\n          if (req.status === 200) {\n            // page (.html file) actually exist (or we asked for 404 )\n            // returning page resources status as errored to trigger\n            // regular browser navigation to given page\n            return {\n              status: PageResourceStatus.Error,\n            }\n          }\n\n          // if HEAD request wasn't 200, return notFound result\n          // and show 404 page\n          return data\n        })\n      }\n      return data\n    })\n  }\n\n  loadPartialHydrationJson(rawPath) {\n    return super.loadPartialHydrationJson(rawPath).then(data => {\n      if (data.notFound) {\n        if (shouldAbortFetch(rawPath)) {\n          return data\n        }\n        // check if html file exist using HEAD request:\n        // if it does we should navigate to it instead of showing 404\n        return doFetch(rawPath, `HEAD`).then(req => {\n          if (req.status === 200) {\n            // page (.html file) actually exist (or we asked for 404 )\n            // returning page resources status as errored to trigger\n            // regular browser navigation to given page\n            return {\n              status: PageResourceStatus.Error,\n            }\n          }\n\n          // if HEAD request wasn't 200, return notFound result\n          // and show 404 page\n          return data\n        })\n      }\n      return data\n    })\n  }\n}\n\nlet instance\n\nexport const setLoader = _loader => {\n  instance = _loader\n}\n\nexport const publicLoader = {\n  enqueue: rawPath => instance.prefetch(rawPath),\n\n  // Real methods\n  getResourceURLsForPathname: rawPath =>\n    instance.getResourceURLsForPathname(rawPath),\n  loadPage: rawPath => instance.loadPage(rawPath),\n  // TODO add deprecation to v4 so people use withErrorDetails and then we can remove in v5 and change default behaviour\n  loadPageSync: (rawPath, options = {}) =>\n    instance.loadPageSync(rawPath, options),\n  prefetch: rawPath => instance.prefetch(rawPath),\n  isPageNotFound: rawPath => instance.isPageNotFound(rawPath),\n  hovering: rawPath => instance.hovering(rawPath),\n  loadAppData: () => instance.loadAppData(),\n}\n\nexport default publicLoader\n\nexport function getStaticQueryResults() {\n  if (instance) {\n    return instance.staticQueryDb\n  } else {\n    return {}\n  }\n}\n\nexport function getSliceResults() {\n  if (instance) {\n    return instance.slicesDb\n  } else {\n    return {}\n  }\n}\n"],"mappings":"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"}