{"version":3,"file":"file-writes.js","names":["OUTPUT_PATHS","schema","fragments","config","writeGraphQLConfig","program","base","directory","outputPath","join","fs","existsSync","reporter","verbose","configJSONString","JSON","stringify","documents","extensions","endpoints","default","url","https","host","port","outputFile","err","error","writeGraphQLFragments","definitions","fragmentString","Array","from","entries","filter","_","def","isFragment","map","filePath","printedAst","writeGraphQLSchema","schemaSDLString","printSchema","stabilizeSchema"],"sources":["../../../src/utils/graphql-typegen/file-writes.ts"],"sourcesContent":["import * as fs from \"fs-extra\"\nimport { join } from \"path\"\nimport { GraphQLSchema, printSchema } from \"graphql\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport type { IDefinitionMeta, IStateProgram } from \"../../redux/types\"\nimport { stabilizeSchema } from \"./utils\"\n\nconst OUTPUT_PATHS = {\n  schema: `.cache/typegen/schema.graphql`,\n  fragments: `.cache/typegen/fragments.graphql`,\n  config: `.cache/typegen/graphql.config.json`,\n}\n\nexport async function writeGraphQLConfig(\n  program: IStateProgram\n): Promise<void> {\n  try {\n    const base = program.directory\n    const outputPath = join(base, OUTPUT_PATHS.config)\n\n    if (fs.existsSync(outputPath)) {\n      reporter.verbose(`graphql.config.json already exists. Skipping...`)\n      return\n    }\n\n    const configJSONString = JSON.stringify(\n      {\n        schema: OUTPUT_PATHS.schema,\n        documents: [`src/**/**.{ts,js,tsx,jsx}`, OUTPUT_PATHS.fragments],\n        extensions: {\n          endpoints: {\n            default: {\n              url: `${program.https ? `https://` : `http://`}${program.host}:${\n                program.port\n              }/___graphql`,\n            },\n          },\n        },\n      },\n      null,\n      2\n    )\n\n    await fs.outputFile(outputPath, configJSONString)\n    reporter.verbose(`Successfully created graphql.config.json`)\n  } catch (err) {\n    reporter.error(`Failed to write graphql.config.json`, err)\n  }\n}\n\nexport async function writeGraphQLFragments(\n  directory: IStateProgram[\"directory\"],\n  definitions: Map<string, IDefinitionMeta>\n): Promise<void> {\n  try {\n    const fragmentString = Array.from(definitions.entries())\n      .filter(([_, def]) => def.isFragment)\n      .map(([_, def]) => `# ${def.filePath}\\n${def.printedAst}`)\n      .join(`\\n`)\n\n    await fs.outputFile(join(directory, OUTPUT_PATHS.fragments), fragmentString)\n    reporter.verbose(`Wrote fragments.graphql file to .cache`)\n  } catch (err) {\n    reporter.error(`Failed to write fragments.graphql to .cache`, err)\n  }\n}\n\nexport async function writeGraphQLSchema(\n  directory: IStateProgram[\"directory\"],\n  schema: GraphQLSchema\n): Promise<void> {\n  try {\n    const schemaSDLString = printSchema(stabilizeSchema(schema))\n\n    await fs.outputFile(join(directory, OUTPUT_PATHS.schema), schemaSDLString)\n    reporter.verbose(`Successfully created schema.graphql`)\n  } catch (err) {\n    reporter.error(`Failed to write schema.graphql to .cache`, err)\n  }\n}\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAyC;AAAA;AAEzC,MAAMA,YAAY,GAAG;EACnBC,MAAM,EAAG,+BAA8B;EACvCC,SAAS,EAAG,kCAAiC;EAC7CC,MAAM,EAAG;AACX,CAAC;AAEM,eAAeC,kBAAkB,CACtCC,OAAsB,EACP;EACf,IAAI;IACF,MAAMC,IAAI,GAAGD,OAAO,CAACE,SAAS;IAC9B,MAAMC,UAAU,GAAG,IAAAC,UAAI,EAACH,IAAI,EAAEN,YAAY,CAACG,MAAM,CAAC;IAElD,IAAIO,EAAE,CAACC,UAAU,CAACH,UAAU,CAAC,EAAE;MAC7BI,iBAAQ,CAACC,OAAO,CAAE,iDAAgD,CAAC;MACnE;IACF;IAEA,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,SAAS,CACrC;MACEf,MAAM,EAAED,YAAY,CAACC,MAAM;MAC3BgB,SAAS,EAAE,CAAE,2BAA0B,EAAEjB,YAAY,CAACE,SAAS,CAAC;MAChEgB,UAAU,EAAE;QACVC,SAAS,EAAE;UACTC,OAAO,EAAE;YACPC,GAAG,EAAG,GAAEhB,OAAO,CAACiB,KAAK,GAAI,UAAS,GAAI,SAAS,GAAEjB,OAAO,CAACkB,IAAK,IAC5DlB,OAAO,CAACmB,IACT;UACH;QACF;MACF;IACF,CAAC,EACD,IAAI,EACJ,CAAC,CACF;IAED,MAAMd,EAAE,CAACe,UAAU,CAACjB,UAAU,EAAEM,gBAAgB,CAAC;IACjDF,iBAAQ,CAACC,OAAO,CAAE,0CAAyC,CAAC;EAC9D,CAAC,CAAC,OAAOa,GAAG,EAAE;IACZd,iBAAQ,CAACe,KAAK,CAAE,qCAAoC,EAAED,GAAG,CAAC;EAC5D;AACF;AAEO,eAAeE,qBAAqB,CACzCrB,SAAqC,EACrCsB,WAAyC,EAC1B;EACf,IAAI;IACF,MAAMC,cAAc,GAAGC,KAAK,CAACC,IAAI,CAACH,WAAW,CAACI,OAAO,EAAE,CAAC,CACrDC,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,GAAG,CAAC,KAAKA,GAAG,CAACC,UAAU,CAAC,CACpCC,GAAG,CAAC,CAAC,CAACH,CAAC,EAAEC,GAAG,CAAC,KAAM,KAAIA,GAAG,CAACG,QAAS,KAAIH,GAAG,CAACI,UAAW,EAAC,CAAC,CACzD/B,IAAI,CAAE,IAAG,CAAC;IAEb,MAAMC,EAAE,CAACe,UAAU,CAAC,IAAAhB,UAAI,EAACF,SAAS,EAAEP,YAAY,CAACE,SAAS,CAAC,EAAE4B,cAAc,CAAC;IAC5ElB,iBAAQ,CAACC,OAAO,CAAE,wCAAuC,CAAC;EAC5D,CAAC,CAAC,OAAOa,GAAG,EAAE;IACZd,iBAAQ,CAACe,KAAK,CAAE,6CAA4C,EAAED,GAAG,CAAC;EACpE;AACF;AAEO,eAAee,kBAAkB,CACtClC,SAAqC,EACrCN,MAAqB,EACN;EACf,IAAI;IACF,MAAMyC,eAAe,GAAG,IAAAC,oBAAW,EAAC,IAAAC,sBAAe,EAAC3C,MAAM,CAAC,CAAC;IAE5D,MAAMS,EAAE,CAACe,UAAU,CAAC,IAAAhB,UAAI,EAACF,SAAS,EAAEP,YAAY,CAACC,MAAM,CAAC,EAAEyC,eAAe,CAAC;IAC1E9B,iBAAQ,CAACC,OAAO,CAAE,qCAAoC,CAAC;EACzD,CAAC,CAAC,OAAOa,GAAG,EAAE;IACZd,iBAAQ,CAACe,KAAK,CAAE,0CAAyC,EAAED,GAAG,CAAC;EACjE;AACF"}