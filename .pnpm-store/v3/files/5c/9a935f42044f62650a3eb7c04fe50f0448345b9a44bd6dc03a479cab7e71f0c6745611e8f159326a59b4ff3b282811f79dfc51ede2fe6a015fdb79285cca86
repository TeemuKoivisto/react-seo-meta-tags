{"version":3,"file":"type-definitions.js","names":[],"sources":["../../src/schema/type-definitions.ts"],"sourcesContent":["import { GraphQLResolveInfo } from \"graphql\"\n\nimport { IPhantomReporter } from \"gatsby-cli/lib/reporter/reporter-phantom\"\n\nimport { IGraphQLRunnerStats } from \"../query/types\"\nimport { Path } from \"graphql/jsutils/Path\"\n\nexport interface IGatsbyResolverContext<TSource, TArgs> {\n  defaultFieldResolver: GatsbyResolver<TSource, TArgs>\n  nodeModel: any\n  stats: IGraphQLRunnerStats | null\n  tracer: IGraphQLSpanTracer | null\n  telemetryResolverTimings?: Array<IGraphQLTelemetryRecord>\n  [key: string]: any\n}\n\nexport type GatsbyGraphQLResolveInfo = GraphQLResolveInfo & {\n  from?: string\n  fromNode?: boolean\n}\n\nexport type GatsbyResolver<TSource, TArgs = { [argName: string]: any }> = (\n  source: TSource,\n  args: TArgs,\n  context: IGatsbyResolverContext<TSource, TArgs>,\n  info: GatsbyGraphQLResolveInfo\n) => any\n\nexport interface IGatsbyConnection<NodeType> {\n  totalCount: () => Promise<number>\n  edges: Array<IGatsbyEdge<NodeType>>\n  nodes: Array<NodeType>\n  pageInfo: IGatsbyPageInfo\n}\n\nexport interface IGatsbyEdge<NodeType> {\n  node: NodeType\n  next: NodeType | undefined\n  previous: NodeType | undefined\n}\n\nexport interface IGatsbyPageInfo {\n  currentPage: number\n  hasPreviousPage: boolean\n  hasNextPage: boolean\n  itemCount: number\n  pageCount: () => Promise<number>\n  perPage: number | undefined\n  totalCount: () => Promise<number>\n}\n\nexport interface IGraphQLSpanTracer {\n  getParentActivity(): IPhantomReporter\n  createResolverActivity(path: Path, name: string): IPhantomReporter\n}\n\nexport interface IGraphQLTelemetryRecord {\n  name: string\n  duration: number\n}\n"],"mappings":""}