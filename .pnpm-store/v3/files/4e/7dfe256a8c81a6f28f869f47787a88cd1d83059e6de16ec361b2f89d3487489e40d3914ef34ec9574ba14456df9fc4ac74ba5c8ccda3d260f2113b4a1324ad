{"version":3,"file":"graphql-typegen.js","names":["graphQLTypegen","program","store","parentSpan","reporter","Error","directory","activity","activityTimer","start","schema","definitions","config","getState","graphqlTypegenOptions","graphqlTypegen","writeGraphQLSchema","writeGraphQLFragments","writeTypeScriptTypes","err","panicOnBuild","id","context","sourceMessage","end"],"sources":["../../src/services/graphql-typegen.ts"],"sourcesContent":["import { IBuildContext } from \"../internal\"\nimport {\n  writeGraphQLFragments,\n  writeGraphQLSchema,\n} from \"../utils/graphql-typegen/file-writes\"\nimport { writeTypeScriptTypes } from \"../utils/graphql-typegen/ts-codegen\"\n\nexport async function graphQLTypegen({\n  program,\n  store,\n  parentSpan,\n  reporter,\n}: IBuildContext): Promise<void> {\n  // TypeScript requires null/undefined checks for these\n  // But this should never happen unless e.g. the state machine doesn't receive this information from a parent state machine\n  if (!program || !store || !reporter) {\n    throw new Error(\n      `Missing required params in graphQLTypegen. program: ${!!program}. store: ${!!store}.`\n    )\n  }\n  const directory = program.directory\n\n  const activity = reporter.activityTimer(\n    `Generating GraphQL and TypeScript types`,\n    {\n      parentSpan,\n    }\n  )\n  activity.start()\n\n  const { schema, definitions, config } = store.getState()\n  const graphqlTypegenOptions = config.graphqlTypegen\n\n  if (!graphqlTypegenOptions) {\n    throw new Error(`graphqlTypegen option is falsy. This should never happen.`)\n  }\n\n  try {\n    await writeGraphQLSchema(directory, schema)\n    await writeGraphQLFragments(directory, definitions)\n    await writeTypeScriptTypes(\n      directory,\n      schema,\n      definitions,\n      graphqlTypegenOptions\n    )\n  } catch (err) {\n    activity.panicOnBuild({\n      id: `12100`,\n      context: {\n        sourceMessage: err,\n      },\n    })\n  }\n\n  activity.end()\n}\n"],"mappings":";;;;AACA;AAIA;AAEO,eAAeA,cAAc,CAAC;EACnCC,OAAO;EACPC,KAAK;EACLC,UAAU;EACVC;AACa,CAAC,EAAiB;EAC/B;EACA;EACA,IAAI,CAACH,OAAO,IAAI,CAACC,KAAK,IAAI,CAACE,QAAQ,EAAE;IACnC,MAAM,IAAIC,KAAK,CACZ,uDAAsD,CAAC,CAACJ,OAAQ,YAAW,CAAC,CAACC,KAAM,GAAE,CACvF;EACH;EACA,MAAMI,SAAS,GAAGL,OAAO,CAACK,SAAS;EAEnC,MAAMC,QAAQ,GAAGH,QAAQ,CAACI,aAAa,CACpC,yCAAwC,EACzC;IACEL;EACF,CAAC,CACF;EACDI,QAAQ,CAACE,KAAK,EAAE;EAEhB,MAAM;IAAEC,MAAM;IAAEC,WAAW;IAAEC;EAAO,CAAC,GAAGV,KAAK,CAACW,QAAQ,EAAE;EACxD,MAAMC,qBAAqB,GAAGF,MAAM,CAACG,cAAc;EAEnD,IAAI,CAACD,qBAAqB,EAAE;IAC1B,MAAM,IAAIT,KAAK,CAAE,2DAA0D,CAAC;EAC9E;EAEA,IAAI;IACF,MAAM,IAAAW,8BAAkB,EAACV,SAAS,EAAEI,MAAM,CAAC;IAC3C,MAAM,IAAAO,iCAAqB,EAACX,SAAS,EAAEK,WAAW,CAAC;IACnD,MAAM,IAAAO,+BAAoB,EACxBZ,SAAS,EACTI,MAAM,EACNC,WAAW,EACXG,qBAAqB,CACtB;EACH,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZZ,QAAQ,CAACa,YAAY,CAAC;MACpBC,EAAE,EAAG,OAAM;MACXC,OAAO,EAAE;QACPC,aAAa,EAAEJ;MACjB;IACF,CAAC,CAAC;EACJ;EAEAZ,QAAQ,CAACiB,GAAG,EAAE;AAChB"}