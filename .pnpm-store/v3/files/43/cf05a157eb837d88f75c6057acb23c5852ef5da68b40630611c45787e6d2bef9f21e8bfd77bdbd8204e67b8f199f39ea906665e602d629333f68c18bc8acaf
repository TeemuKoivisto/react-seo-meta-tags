{"version":3,"file":"root.js","names":["RouteHandler","props","baseuri","basepath","LocationHandler","React","Component","render","location","slicesContext","renderEnvironment","loader","isPageNotFound","pathname","search","locationAndPageResources","pageResources","page","slicesMap","shouldUpdateScroll","__BASE_PATH__","encodeURI","matchPath","path","split","dev404PageResources","loadPageSync","real404PageResources","custom404","Root","locationContext","rootWrappedWithWrapRootElement","apiRunner","element","result","plugin","pop","RootWrappedWithOverlayAndProvider"],"sources":["../root.js"],"sourcesContent":["import React from \"react\"\nimport { Router, Location, BaseContext } from \"@gatsbyjs/reach-router\"\nimport { ScrollContext } from \"gatsby-react-router-scroll\"\n\nimport { SlicesMapContext, SlicesContext } from \"./slice/context\"\nimport { shouldUpdateScroll, RouteUpdates } from \"./navigation\"\nimport { apiRunner } from \"./api-runner-browser\"\nimport loader from \"./loader\"\nimport {\n  PageQueryStore,\n  StaticQueryStore,\n  SliceDataStore,\n} from \"./query-result-store\"\nimport EnsureResources from \"./ensure-resources\"\nimport FastRefreshOverlay from \"./fast-refresh-overlay\"\n\n// In gatsby v2 if Router is used in page using matchPaths\n// paths need to contain full path.\n// For example:\n//   - page have `/app/*` matchPath\n//   - inside template user needs to use `/app/xyz` as path\n// Resetting `basepath`/`baseuri` keeps current behaviour\n// to not introduce breaking change.\n// Remove this in v3\nconst RouteHandler = props => (\n  <BaseContext.Provider\n    value={{\n      baseuri: `/`,\n      basepath: `/`,\n    }}\n  >\n    <PageQueryStore {...props} />\n  </BaseContext.Provider>\n)\n\nclass LocationHandler extends React.Component {\n  render() {\n    const { location } = this.props\n\n    const slicesContext = {\n      renderEnvironment: `browser`,\n    }\n\n    if (!loader.isPageNotFound(location.pathname + location.search)) {\n      return (\n        <EnsureResources location={location}>\n          {locationAndPageResources => (\n            <SlicesContext.Provider value={slicesContext}>\n              <SlicesMapContext.Provider\n                value={locationAndPageResources.pageResources.page.slicesMap}\n              >\n                <RouteUpdates location={location}>\n                  <ScrollContext\n                    location={location}\n                    shouldUpdateScroll={shouldUpdateScroll}\n                  >\n                    <Router\n                      basepath={__BASE_PATH__}\n                      location={location}\n                      id=\"gatsby-focus-wrapper\"\n                    >\n                      <RouteHandler\n                        path={encodeURI(\n                          (\n                            locationAndPageResources.pageResources.page\n                              .matchPath ||\n                            locationAndPageResources.pageResources.page.path\n                          ).split(`?`)[0]\n                        )}\n                        {...this.props}\n                        {...locationAndPageResources}\n                      />\n                    </Router>\n                  </ScrollContext>\n                </RouteUpdates>\n              </SlicesMapContext.Provider>\n            </SlicesContext.Provider>\n          )}\n        </EnsureResources>\n      )\n    }\n\n    const dev404PageResources = loader.loadPageSync(`/dev-404-page`)\n    const real404PageResources = loader.loadPageSync(`/404.html`)\n    let custom404\n    if (real404PageResources) {\n      custom404 = (\n        <PageQueryStore {...this.props} pageResources={real404PageResources} />\n      )\n    }\n\n    return (\n      <EnsureResources location={location}>\n        {locationAndPageResources => (\n          <SlicesContext.Provider value={slicesContext}>\n            <SlicesMapContext.Provider\n              value={locationAndPageResources.pageResources.page.slicesMap}\n            >\n              <RouteUpdates location={location}>\n                <Router\n                  basepath={__BASE_PATH__}\n                  location={location}\n                  id=\"gatsby-focus-wrapper\"\n                >\n                  <RouteHandler\n                    path={location.pathname}\n                    location={location}\n                    pageResources={dev404PageResources}\n                    custom404={custom404}\n                  />\n                </Router>\n              </RouteUpdates>\n            </SlicesMapContext.Provider>\n          </SlicesContext.Provider>\n        )}\n      </EnsureResources>\n    )\n  }\n}\n\nconst Root = () => (\n  <Location>\n    {locationContext => <LocationHandler {...locationContext} />}\n  </Location>\n)\n\n// Let site, plugins wrap the site e.g. for Redux.\nconst rootWrappedWithWrapRootElement = apiRunner(\n  `wrapRootElement`,\n  { element: <Root /> },\n  <Root />,\n  ({ result, plugin }) => {\n    return { element: result }\n  }\n).pop()\n\nfunction RootWrappedWithOverlayAndProvider() {\n  return (\n    <FastRefreshOverlay>\n      <SliceDataStore>\n        <StaticQueryStore>{rootWrappedWithWrapRootElement}</StaticQueryStore>\n      </SliceDataStore>\n    </FastRefreshOverlay>\n  )\n}\n\nexport default RootWrappedWithOverlayAndProvider\n"],"mappings":"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"}