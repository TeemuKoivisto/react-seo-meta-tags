{"version":3,"file":"dev-loader.js","names":["mergePageEntry","cachedPage","newPageData","payload","json","result","page","getServerDataError","staticQueryResults","DevLoader","BaseLoader","constructor","asyncRequires","matchPaths","loadComponent","chunkName","exportType","Error","catch","err","socket","getSocket","notFoundPagePathsInCaches","Set","on","msg","type","handleStaticQueryResultHotUpdate","handlePageQueryResultHotUpdate","handleSliceQueryResultHotUpdate","handleStalePageDataMessage","handleStaleServerDataMessage","process","env","NODE_ENV","console","warn","updateAsyncRequires","loadPage","pagePath","realPath","findPath","then","isPageNotFound","add","loadPageDataJson","rawPath","data","status","PageResourceStatus","error","Object","assign","doPrefetch","GATSBY_QUERY_ON_DEMAND","Promise","resolve","newResult","cacheKey","id","cachedResult","staticQueryDb","isEqual","___emitter","emit","slicesDataDb","get","set","slicesDb","sliceContext","mergedResult","updatePageData","pageDataDbCacheKey","normalizePagePath","cachedPageData","pageDataDb","pageDb","forEach","notFoundPath","previousPageDataEntry","previousPageEntry","markAsStale","dirtyQueryId","normalizedId","stale","updated","stalePageDataPaths","activePath","location","pathname","key","value","serverData","reFetchServerData","fetchPageDataJson"],"sources":["../dev-loader.js"],"sourcesContent":["import { BaseLoader, PageResourceStatus } from \"./loader\"\nimport { findPath } from \"./find-path\"\n\nimport getSocket from \"./socketIo\"\nimport normalizePagePath from \"./normalize-page-path\"\n\n// TODO move away from lodash\nimport isEqual from \"lodash/isEqual\"\n\nfunction mergePageEntry(cachedPage, newPageData) {\n  return {\n    ...cachedPage,\n    payload: {\n      ...cachedPage.payload,\n      json: {\n        // For SSR, cachedPage may contain \"data\" and \"serverData\"\n        // But newPageData may contain only \"data\" or only \"serverData\" depending on what was updated\n        ...cachedPage.payload.json,\n        ...newPageData.result,\n      },\n      page: {\n        ...cachedPage.payload.page,\n        getServerDataError: newPageData.getServerDataError,\n        staticQueryResults: newPageData.staticQueryResults,\n      },\n    },\n  }\n}\n\nclass DevLoader extends BaseLoader {\n  constructor(asyncRequires, matchPaths) {\n    const loadComponent = (chunkName, exportType = `components`) => {\n      if (!this.asyncRequires[exportType][chunkName]) {\n        if (exportType === `head`) {\n          return null\n        }\n        throw new Error(\n          `We couldn't find the correct component chunk with the name \"${chunkName}\"`\n        )\n      }\n\n      return (\n        this.asyncRequires[exportType][chunkName]()\n          // loader will handle the case when component is error\n          .catch(err => err)\n      )\n    }\n    super(loadComponent, matchPaths)\n    this.asyncRequires = asyncRequires\n\n    const socket = getSocket()\n\n    this.notFoundPagePathsInCaches = new Set()\n\n    if (socket) {\n      socket.on(`message`, msg => {\n        if (msg.type === `staticQueryResult`) {\n          this.handleStaticQueryResultHotUpdate(msg)\n        } else if (msg.type === `pageQueryResult`) {\n          this.handlePageQueryResultHotUpdate(msg)\n        } else if (msg.type === `sliceQueryResult`) {\n          this.handleSliceQueryResultHotUpdate(msg)\n        } else if (msg.type === `stalePageData`) {\n          this.handleStalePageDataMessage(msg)\n        } else if (msg.type === `staleServerData`) {\n          this.handleStaleServerDataMessage(msg)\n        }\n      })\n    } else if (process.env.NODE_ENV !== `test`) {\n      console.warn(`Could not get web socket`)\n    }\n  }\n\n  updateAsyncRequires(asyncRequires) {\n    this.asyncRequires = asyncRequires\n  }\n\n  loadPage(pagePath) {\n    const realPath = findPath(pagePath)\n    return super.loadPage(realPath).then(result => {\n      if (this.isPageNotFound(realPath)) {\n        this.notFoundPagePathsInCaches.add(realPath)\n      }\n\n      return result\n    })\n  }\n\n  loadPageDataJson(rawPath) {\n    return super.loadPageDataJson(rawPath).then(data => {\n      // when we can't find a proper 404.html we fallback to dev-404-page\n      // we need to make sure to mark it as not found.\n      if (\n        data.status === PageResourceStatus.Error &&\n        rawPath !== `/dev-404-page/`\n      ) {\n        console.error(\n          `404 page could not be found. Checkout https://www.gatsbyjs.com/docs/how-to/adding-common-features/add-404-page/`\n        )\n        return this.loadPageDataJson(`/dev-404-page/`).then(result =>\n          Object.assign({}, data, result)\n        )\n      }\n\n      return data\n    })\n  }\n\n  doPrefetch(pagePath) {\n    if (process.env.GATSBY_QUERY_ON_DEMAND) {\n      return Promise.resolve()\n    }\n    return super.doPrefetch(pagePath).then(result => result.payload)\n  }\n\n  handleStaticQueryResultHotUpdate(msg) {\n    const newResult = msg.payload.result\n\n    const cacheKey = msg.payload.id\n    const cachedResult = this.staticQueryDb[cacheKey]\n    if (!isEqual(newResult, cachedResult)) {\n      this.staticQueryDb[cacheKey] = newResult\n      ___emitter.emit(`staticQueryResult`, newResult)\n    }\n  }\n\n  handleSliceQueryResultHotUpdate(msg) {\n    const newResult = msg.payload.result\n\n    const cacheKey = msg.payload.id\n\n    // raw json db\n    {\n      const cachedResult = this.slicesDataDb.get(cacheKey)\n      if (!isEqual(newResult, cachedResult)) {\n        this.slicesDataDb.set(cacheKey, newResult)\n      }\n    }\n\n    // processed data\n    {\n      const cachedResult = this.slicesDb.get(cacheKey)\n      if (\n        !isEqual(newResult?.result?.data, cachedResult?.data) ||\n        !isEqual(newResult?.result?.sliceContext, cachedResult?.sliceContext)\n      ) {\n        const mergedResult = {\n          ...cachedResult,\n          data: newResult?.result?.data,\n          sliceContext: newResult?.result?.sliceContext,\n        }\n        this.slicesDb.set(cacheKey, mergedResult)\n        ___emitter.emit(`sliceQueryResult`, mergedResult)\n      }\n    }\n  }\n\n  updatePageData = (pagePath, newPageData) => {\n    const pageDataDbCacheKey = normalizePagePath(pagePath)\n    const cachedPageData = this.pageDataDb.get(pageDataDbCacheKey)?.payload\n\n    if (!isEqual(newPageData, cachedPageData)) {\n      // TODO: if this is update for current page and there are any new static queries added\n      // that are not yet cached, there is currently no trigger to fetch them (yikes)\n      // always update canonical key for pageDataDb\n      this.pageDataDb.set(pageDataDbCacheKey, {\n        pagePath: pageDataDbCacheKey,\n        payload: newPageData,\n        status: `success`,\n      })\n\n      const cachedPage = this.pageDb.get(pageDataDbCacheKey)\n      if (cachedPage) {\n        this.pageDb.set(\n          pageDataDbCacheKey,\n          mergePageEntry(cachedPage, newPageData)\n        )\n      }\n\n      // Additionally if those are query results for \"/404.html\"\n      // we have to update all paths user wanted to visit, but didn't have\n      // page for it, because we do store them under (normalized) path\n      // user wanted to visit\n      if (pageDataDbCacheKey === `/404.html`) {\n        this.notFoundPagePathsInCaches.forEach(notFoundPath => {\n          const previousPageDataEntry = this.pageDataDb.get(notFoundPath)\n          if (previousPageDataEntry) {\n            this.pageDataDb.set(notFoundPath, {\n              ...previousPageDataEntry,\n              payload: newPageData,\n            })\n          }\n\n          const previousPageEntry = this.pageDb.get(notFoundPath)\n          if (previousPageEntry) {\n            this.pageDb.set(\n              notFoundPath,\n              mergePageEntry(previousPageEntry, newPageData)\n            )\n          }\n        })\n      }\n      return true\n    }\n    return false\n  }\n\n  markAsStale = dirtyQueryId => {\n    if (dirtyQueryId === `/dev-404-page/` || dirtyQueryId === `/404.html`) {\n      // those pages are not on demand so skipping\n      return\n    }\n\n    const normalizedId = normalizePagePath(dirtyQueryId)\n\n    // We can't just delete items in caches, because then\n    // using history.back() would show dev-404 page\n    // due to our special handling of it in root.js (loader.isPageNotFound check)\n    // so instead we mark it as stale and instruct loader's async methods\n    // to refetch resources if they are marked as stale\n\n    const cachedPageData = this.pageDataDb.get(normalizedId)\n    if (cachedPageData) {\n      // if we have page data in cache, mark it as stale\n      this.pageDataDb.set(normalizedId, {\n        ...cachedPageData,\n        stale: true,\n      })\n    }\n\n    const cachedPage = this.pageDb.get(normalizedId)\n    if (cachedPage) {\n      // if we have page data in cache, mark it as stale\n      this.pageDb.set(normalizedId, {\n        ...cachedPage,\n        payload: { ...cachedPage.payload, stale: true },\n      })\n    }\n  }\n\n  handlePageQueryResultHotUpdate(msg) {\n    const updated = this.updatePageData(msg.payload.id, msg.payload.result)\n    if (updated) {\n      ___emitter.emit(`pageQueryResult`, msg.payload.result)\n    }\n  }\n\n  handleStalePageDataMessage(msg) {\n    for (const dirtyQueryId of msg.payload.stalePageDataPaths) {\n      this.markAsStale(dirtyQueryId)\n    }\n  }\n\n  handleStaleServerDataMessage() {\n    const activePath = normalizePagePath(location.pathname)\n\n    // For now just invalidate every single page with serverData\n    for (const [key, value] of this.pageDataDb) {\n      if (value?.payload?.result?.serverData) {\n        this.markAsStale(key)\n      }\n      if (activePath === normalizePagePath(key)) {\n        this.reFetchServerData(activePath)\n      }\n    }\n  }\n\n  reFetchServerData(pagePath) {\n    this.fetchPageDataJson({ pagePath }).then(data => {\n      const updated = this.updatePageData(data.pagePath, data.payload)\n      // SSR could be slow, so we should only emit serverDataResult\n      // when still on the same page\n      if (updated && pagePath === normalizePagePath(location.pathname)) {\n        ___emitter.emit(`serverDataResult`, data.payload)\n      }\n    })\n  }\n}\n\nexport default DevLoader\n"],"mappings":"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"}