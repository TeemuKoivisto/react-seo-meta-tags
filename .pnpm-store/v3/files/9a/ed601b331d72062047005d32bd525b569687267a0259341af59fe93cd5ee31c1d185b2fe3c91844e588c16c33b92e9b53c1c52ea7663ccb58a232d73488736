{"version":3,"file":"initialize.js","names":["process","env","gatsby_executing_command","GATSBY_EXPERIMENTAL_FAST_DEV","isCI","GATSBY_WORKER_POOL_WORKER","GATSBY_EXPERIMENTAL_DEV_SSR","PRESERVE_FILE_DOWNLOAD_CACHE","reporter","info","telemetry","trackFeatureIsUsed","on","reason","panic","initialize","program","args","parentSpan","GATSBY_DISABLE_CACHE_PERSISTENCE","setStore","store","_registerAdditionalDiagnosticOutputHandler","logPendingJobs","outputs","job","getState","jobsV2","incomplete","push","length","size","JSON","stringify","directory","slash","extensions","browserslist","getBrowsersList","dispatch","type","payload","activityForJobs","emitter","phantomActivity","start","onEndJob","jobs","active","end","siteDirectory","activity","activityTimer","compileGatsbyFiles","config","loadConfig","processFlags","flattenedPlugins","loadPlugins","GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR","GATSBY_DETECT_NODE_MUTATIONS","enableNodeMutationsDetection","polyfill","warn","GATSBY_QUERY_ON_DEMAND","GATSBY_ENABLE_QUERY_ON_DEMAND_IN_CI","verbose","removeStaleJobs","pluginsStr","map","p","name","version","decorateEvent","plugins","startPluginRunner","apiRunnerNode","span","lmdbCacheDirectoryName","cacheDirectory","publicDirectory","workerCacheDirectory","lmdbCacheDirectory","publicDirExists","fs","existsSync","workerCacheDirExists","lmdbCacheDirExists","cacheDirExists","NODE_ENV","files","glob","cwd","Promise","all","file","remove","catch","emptyDir","pluginVersions","require","optionalFiles","state","hashes","md5File","trailingSlash","concat","f","pluginsHash","md5","oldPluginsHash","status","PLUGINS_HASH","stripIndent","cacheIsCorrupt","deleteGlobs","GATSBY_EXPERIMENTAL_PRESERVE_FILE_DOWNLOAD_CACHE","e","error","releaseAllMutexes","pluginCachesPurged","ensureDir","srcDir","__dirname","siteDir","copy","overwrite","err","hasAPIFile","plugin","skipSSR","undefined","envAPIs","modulePath","path","join","resolve","resolveModule","Array","isArray","isResolved","isResolvedSSR","ssrPlugins","options","pluginOptions","filter","browserPlugins","browserPluginsRequires","relativePluginPath","relative","browserAPIRunner","sSRAPIRunner","readFileSync","ssrPluginsRequires","writeFileSync","apiResults","traceId","workerPool","WorkerPool","create","siteDirectoryFiles","readdir","gatsbyFilesIsInESM","some","match","graphqlTypegen","writeGraphQLConfig","initialWebhookBody","GATSBY_INITIAL_WEBHOOK_BODY","parse","message","webhookBody"],"sources":["../../src/services/initialize.ts"],"sourcesContent":["import _ from \"lodash\"\nimport { slash, isCI } from \"gatsby-core-utils\"\nimport * as fs from \"fs-extra\"\nimport { releaseAllMutexes } from \"gatsby-core-utils/mutex\"\nimport { md5, md5File } from \"gatsby-core-utils\"\nimport path from \"path\"\nimport telemetry from \"gatsby-telemetry\"\nimport glob from \"globby\"\n\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { getBrowsersList } from \"../utils/browserslist\"\nimport { Store, AnyAction } from \"redux\"\nimport * as WorkerPool from \"../utils/worker/pool\"\nimport { startPluginRunner } from \"../redux/plugin-runner\"\nimport { store, emitter } from \"../redux\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { removeStaleJobs } from \"../bootstrap/remove-stale-jobs\"\nimport { IPluginInfoOptions } from \"../bootstrap/load-plugins/types\"\nimport { IGatsbyState, IStateProgram } from \"../redux/types\"\nimport { IBuildContext } from \"./types\"\nimport { loadConfig } from \"../bootstrap/load-config\"\nimport { loadPlugins } from \"../bootstrap/load-plugins\"\nimport type { InternalJob } from \"../utils/jobs/types\"\nimport type { IDataLayerContext } from \"./../state-machines/data-layer/types\"\nimport { enableNodeMutationsDetection } from \"../utils/detect-node-mutations\"\nimport { compileGatsbyFiles } from \"../utils/parcel/compile-gatsby-files\"\nimport { resolveModule } from \"../utils/module-resolver\"\nimport { writeGraphQLConfig } from \"../utils/graphql-typegen/file-writes\"\n\ninterface IPluginResolution {\n  resolve: string\n  options: IPluginInfoOptions\n}\n\ninterface IPluginResolutionSSR extends IPluginResolution {\n  name: string\n}\n\n// If the env variable GATSBY_EXPERIMENTAL_FAST_DEV is set, enable\n// all DEV experimental changes (but only during development & not on CI).\nif (\n  process.env.gatsby_executing_command === `develop` &&\n  process.env.GATSBY_EXPERIMENTAL_FAST_DEV &&\n  !isCI() &&\n  // skip FAST_DEV handling in workers, all env vars will be handle\n  // by main process already and passed to worker\n  !process.env.GATSBY_WORKER_POOL_WORKER\n) {\n  process.env.GATSBY_EXPERIMENTAL_DEV_SSR = `true`\n  process.env.PRESERVE_FILE_DOWNLOAD_CACHE = `true`\n\n  reporter.info(`\nTwo fast dev experiments are enabled: SSR in develop and preserving file download cache.\n\nPlease give feedback on their respective umbrella issues!\n\n- https://gatsby.dev/dev-ssr-feedback\n- https://gatsby.dev/cache-clearing-feedback\n  `)\n\n  telemetry.trackFeatureIsUsed(`FastDev`)\n}\n\n// Show stack trace on unhandled promises.\nprocess.on(`unhandledRejection`, (reason: unknown) => {\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/33636\n  reporter.panic((reason as Error) || `Unhandled rejection`)\n})\n\n// Override console.log to add the source file + line number.\n// Useful for debugging if you lose a console.log somewhere.\n// Otherwise leave commented out.\n// require(`../bootstrap/log-line-function`)\n\ntype WebhookBody = IDataLayerContext[\"webhookBody\"]\n\nexport async function initialize({\n  program: args,\n  parentSpan,\n}: IBuildContext): Promise<{\n  store: Store<IGatsbyState, AnyAction>\n  workerPool: WorkerPool.GatsbyWorkerPool\n  webhookBody?: WebhookBody\n}> {\n  if (process.env.GATSBY_DISABLE_CACHE_PERSISTENCE) {\n    reporter.info(\n      `GATSBY_DISABLE_CACHE_PERSISTENCE is enabled. Cache won't be persisted. Next builds will not be able to reuse any work done by current session.`\n    )\n    telemetry.trackFeatureIsUsed(`DisableCachePersistence`)\n  }\n  if (!args) {\n    reporter.panic(`Missing program args`)\n  }\n\n  /* Time for a little story...\n   * When running `gatsby develop`, the globally installed gatsby-cli starts\n   * and sets up a Redux store (which is where logs are now stored). When gatsby\n   * finds your project's locally installed gatsby-cli package in node_modules,\n   * it switches over. This instance will have a separate redux store. We need to\n   * ensure that the correct store is used which is why we call setStore\n   * (/packages/gatsby-cli/src/reporter/redux/index.js)\n   *\n   * This function\n   * - copies over the logs from the global gatsby-cli to the local one\n   * - sets the store to the local one (so that further actions dispatched by\n   * the global gatsby-cli are handled by the local one)\n   */\n  if (args.setStore) {\n    args.setStore(store)\n  }\n\n  if (reporter._registerAdditionalDiagnosticOutputHandler) {\n    reporter._registerAdditionalDiagnosticOutputHandler(\n      function logPendingJobs(): string {\n        const outputs: Array<InternalJob> = []\n\n        for (const [, { job }] of store.getState().jobsV2.incomplete) {\n          outputs.push(job)\n          if (outputs.length >= 5) {\n            // 5 not finished jobs should be enough to track down issues\n            // this is just limiting output \"spam\"\n            break\n          }\n        }\n\n        return outputs.length\n          ? `Unfinished jobs (showing ${outputs.length} of ${\n              store.getState().jobsV2.incomplete.size\n            } jobs total):\\n\\n` + JSON.stringify(outputs, null, 2)\n          : ``\n      }\n    )\n  }\n\n  const directory = slash(args.directory)\n\n  const program: IStateProgram = {\n    ...args,\n    extensions: [],\n    browserslist: getBrowsersList(directory),\n    // Fix program directory path for windows env.\n    directory,\n  }\n\n  store.dispatch({\n    type: `SET_PROGRAM`,\n    payload: program,\n  })\n\n  let activityForJobs\n\n  emitter.on(`CREATE_JOB`, () => {\n    if (!activityForJobs) {\n      activityForJobs = reporter.phantomActivity(`Running jobs`)\n      activityForJobs.start()\n    }\n  })\n\n  const onEndJob = (): void => {\n    if (activityForJobs && store.getState().jobs.active.length === 0) {\n      activityForJobs.end()\n      activityForJobs = null\n    }\n  }\n\n  emitter.on(`END_JOB`, onEndJob)\n\n  const siteDirectory = program.directory\n\n  // Compile root gatsby files\n  let activity = reporter.activityTimer(`compile gatsby files`)\n  activity.start()\n  await compileGatsbyFiles(siteDirectory)\n  activity.end()\n\n  // Load gatsby config\n  activity = reporter.activityTimer(`load gatsby config`, {\n    parentSpan,\n  })\n  activity.start()\n  const config = await loadConfig({\n    siteDirectory,\n    processFlags: true,\n  })\n  activity.end()\n\n  // Load plugins\n  activity = reporter.activityTimer(`load plugins`, {\n    parentSpan,\n  })\n  activity.start()\n  const flattenedPlugins = await loadPlugins(config, siteDirectory)\n  activity.end()\n\n  // GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR=false gatsby develop\n  // to disable query on demand loading indicator\n  if (!process.env.GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR) {\n    // if GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR was not set at all\n    // enable loading indicator\n    process.env.GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR = `true`\n  }\n\n  if (process.env.GATSBY_DETECT_NODE_MUTATIONS) {\n    enableNodeMutationsDetection()\n  }\n\n  if (config && config.polyfill) {\n    reporter.warn(\n      `Support for custom Promise polyfills has been removed in Gatsby v2. We only support Babel 7's new automatic polyfilling behavior.`\n    )\n  }\n\n  // Throughout the codebase GATSBY_QUERY_ON_DEMAND is used to conditionally enable the QoD behavior, depending on if \"gatsby develop\" is running or not. In CI QoD is disabled by default, too.\n  // You can use GATSBY_ENABLE_QUERY_ON_DEMAND_IN_CI to force enable it in CI.\n  process.env.GATSBY_QUERY_ON_DEMAND = `true`\n  if (process.env.gatsby_executing_command !== `develop`) {\n    // we don't want to ever have this flag enabled for anything than develop\n    // in case someone have this env var globally set\n    delete process.env.GATSBY_QUERY_ON_DEMAND\n  } else if (isCI() && !process.env.GATSBY_ENABLE_QUERY_ON_DEMAND_IN_CI) {\n    delete process.env.GATSBY_QUERY_ON_DEMAND\n    reporter.verbose(\n      `Query on Demand is disabled in CI by default. You can enable it by setting GATSBY_ENABLE_QUERY_ON_DEMAND_IN_CI env var.`\n    )\n  }\n\n  // run stale jobs\n  // @ts-ignore we'll need to fix redux typings https://redux.js.org/usage/usage-with-typescript\n  store.dispatch(removeStaleJobs(store.getState().jobsV2))\n\n  // Multiple occurrences of the same name-version-pair can occur,\n  // so we report an array of unique pairs\n  const pluginsStr = _.uniq(flattenedPlugins.map(p => `${p.name}@${p.version}`))\n  telemetry.decorateEvent(`BUILD_END`, {\n    plugins: pluginsStr,\n  })\n\n  telemetry.decorateEvent(`DEVELOP_STOP`, {\n    plugins: pluginsStr,\n  })\n\n  // Start plugin runner which listens to the store\n  // and invokes Gatsby API based on actions.\n  startPluginRunner()\n\n  // onPreInit\n  activity = reporter.activityTimer(`onPreInit`, {\n    parentSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreInit`, { parentSpan: activity.span })\n  activity.end()\n\n  const lmdbCacheDirectoryName = `caches-lmdb`\n\n  const cacheDirectory = `${program.directory}/.cache`\n  const publicDirectory = `${program.directory}/public`\n  const workerCacheDirectory = `${program.directory}/.cache/worker`\n  const lmdbCacheDirectory = `${program.directory}/.cache/${lmdbCacheDirectoryName}`\n\n  const publicDirExists = fs.existsSync(publicDirectory)\n  const workerCacheDirExists = fs.existsSync(workerCacheDirectory)\n  const lmdbCacheDirExists = fs.existsSync(lmdbCacheDirectory)\n\n  // check the cache file that is used by the current configuration\n  const cacheDirExists = lmdbCacheDirExists\n\n  // For builds in case public dir exists, but cache doesn't, we need to clean up potentially stale\n  // artifacts from previous builds (due to cache not being available, we can't rely on tracking of artifacts)\n  if (\n    process.env.NODE_ENV === `production` &&\n    publicDirExists &&\n    !cacheDirExists\n  ) {\n    activity = reporter.activityTimer(\n      `delete html and css files from previous builds`,\n      {\n        parentSpan,\n      }\n    )\n    activity.start()\n    const files = await glob(\n      [\n        `public/**/*.{html,css}`,\n        `!public/page-data/**/*`,\n        `!public/static`,\n        `!public/static/**/*.{html,css}`,\n      ],\n      {\n        cwd: program.directory,\n      }\n    )\n    await Promise.all(files.map(file => fs.remove(file)))\n    activity.end()\n  }\n\n  // When the main process and workers communicate they save parts of their redux state to .cache/worker\n  // We should clean this directory to remove stale files that a worker might accidentally reuse then\n  if (workerCacheDirExists) {\n    activity = reporter.activityTimer(\n      `delete worker cache from previous builds`,\n      {\n        parentSpan,\n      }\n    )\n    activity.start()\n    await fs\n      .remove(workerCacheDirectory)\n      .catch(() => fs.emptyDir(workerCacheDirectory))\n    activity.end()\n  }\n\n  activity = reporter.activityTimer(`initialize cache`, {\n    parentSpan,\n  })\n  activity.start()\n  // Check if any plugins have been updated since our last run. If so,\n  // we delete the cache as there's likely been changes since\n  // the previous run.\n  //\n  // We do this by creating a hash of all the version numbers of installed\n  // plugins, the site's package.json, gatsby-config.js, and gatsby-node.js.\n  // The last, gatsby-node.js, is important as many gatsby sites put important\n  // logic in there e.g. generating slugs for custom pages.\n  const pluginVersions = flattenedPlugins.map(p => p.version)\n  // we should include gatsby version as well\n  pluginVersions.push(require(`../../package.json`).version)\n  const optionalFiles = [\n    `${program.directory}/gatsby-config.js`,\n    `${program.directory}/gatsby-node.js`,\n    `${program.directory}/gatsby-config.ts`,\n    `${program.directory}/gatsby-node.ts`,\n  ] as Array<string>\n\n  const state = store.getState()\n\n  const hashes = await Promise.all(\n    // Ignore optional files with .catch() as these are not required\n    [md5File(`package.json`), state.config.trailingSlash as string].concat(\n      optionalFiles.map(f => md5File(f).catch(() => ``))\n    )\n  )\n\n  const pluginsHash = await md5(JSON.stringify(pluginVersions.concat(hashes)))\n\n  const oldPluginsHash = state && state.status ? state.status.PLUGINS_HASH : ``\n\n  // Check if anything has changed. If it has, delete the site's .cache\n  // directory and tell reducers to empty themselves.\n  //\n  // Also if the hash isn't there, then delete things just in case something\n  // is weird.\n  if (oldPluginsHash && pluginsHash !== oldPluginsHash) {\n    reporter.info(reporter.stripIndent`\n      One or more of your plugins have changed since the last time you ran Gatsby. As\n      a precaution, we're deleting your site's cache to ensure there's no stale data.\n    `)\n  }\n\n  // .cache directory exists in develop at this point\n  // so checking for .cache/json or .cache/caches-lmdb as a heuristic (could be any expected file)\n  const cacheIsCorrupt = cacheDirExists && !publicDirExists\n  if (cacheIsCorrupt) {\n    reporter.info(reporter.stripIndent`\n      We've detected that the Gatsby cache is incomplete (the .cache directory exists\n      but the public directory does not). As a precaution, we're deleting your site's\n      cache to ensure there's no stale data.\n    `)\n  }\n\n  if (!oldPluginsHash || pluginsHash !== oldPluginsHash || cacheIsCorrupt) {\n    try {\n      // Comment out inviet until we can test perf impact\n      //\n      // let sourceFileSystemVersion = flattenedPlugins.find(\n      // plugin => plugin.name === `gatsby-source-filesystem`\n      // )?.version\n\n      // // The site might be using a plugin which uses \"createRemoteFileNode\" but\n      // // doesn't have gatsby-source-filesystem in their gatsby-config.js. So lets\n      // // also try requiring it.\n      // if (!sourceFileSystemVersion) {\n      // try {\n      // sourceFileSystemVersion = require(`gatsby-source-filesystem/package.json`)\n      // ?.version\n      // } catch {\n      // // ignore require errors\n      // }\n      // }\n      // } else if (\n      // sourceFileSystemVersion &&\n      // semver.lt(sourceFileSystemVersion, `2.9.0`)\n      // ) {\n      // // If the site has more than 50 downloaded files in it, tell them\n      // // how to save time.\n      // try {\n      // // Divide by two as the directory as both cache files + the actual downloaded files so\n      // // two results / downloaded file.\n      // const filesCount =\n      // (await fs.readdir(`.cache/caches/gatsby-source-filesystem`))\n      // .length / 2\n      // if (filesCount > 50) {\n      // reporter.info(stripIndent`\\n\\n\n\n      // Your local development experience is about to get better, faster, and stronger!\n\n      // Your friendly Gatsby maintainers detected your site downloads quite a few files and that we're about to delete all ${Math.round(\n      // filesCount\n      // )} of them 😅. We're working right now to make our caching smarter which means we won't delete your downloaded files any more.\n\n      // If you're interested in trialing the new caching behavior *today* — which should make your local development environment faster, go ahead and enable the PRESERVE_FILE_DOWNLOAD_CACHE flag and run your develop server again.\n\n      // To do so, add to your gatsby-config.js:\n\n      // flags: {\n      // preserve_file_download_cache: true,\n      // }\n\n      // visit the umbrella issue to learn more: https://github.com/gatsbyjs/gatsby/discussions/28331\n      // `)\n      // }\n      // } catch {\n      // // ignore errors (mostly will just be directory not found).\n      // }\n      // }\n\n      const deleteGlobs = [\n        // By default delete all files & subdirectories\n        `.cache/**`,\n        `.cache/data/**`,\n        `!.cache/data/gatsby-core-utils/**`,\n        `!.cache/compiled`,\n        // Add webpack\n        `!.cache/webpack`,\n      ]\n\n      if (process.env.GATSBY_EXPERIMENTAL_PRESERVE_FILE_DOWNLOAD_CACHE) {\n        // Stop the caches directory from being deleted, add all sub directories,\n        // but remove gatsby-source-filesystem\n        deleteGlobs.push(`!.cache/caches`)\n        deleteGlobs.push(`.cache/caches/*`)\n        deleteGlobs.push(`!.cache/caches/gatsby-source-filesystem`)\n      }\n\n      const files = await glob(deleteGlobs, {\n        cwd: program.directory,\n      })\n\n      await Promise.all(files.map(file => fs.remove(file)))\n    } catch (e) {\n      reporter.error(`Failed to remove .cache files.`, e)\n    }\n    // Tell reducers to delete their data (the store will already have\n    // been loaded from the file system cache).\n    store.dispatch({\n      type: `DELETE_CACHE`,\n      cacheIsCorrupt,\n    })\n\n    // make sure all previous mutexes are released\n    await releaseAllMutexes()\n\n    // in future this should show which plugin's caches are purged\n    // possibly should also have which plugins had caches\n    telemetry.decorateEvent(`BUILD_END`, {\n      pluginCachesPurged: [`*`],\n    })\n    telemetry.decorateEvent(`DEVELOP_STOP`, {\n      pluginCachesPurged: [`*`],\n    })\n  }\n\n  // Update the store with the new plugins hash.\n  store.dispatch({\n    type: `UPDATE_PLUGINS_HASH`,\n    payload: pluginsHash,\n  })\n\n  // Now that we know the .cache directory is safe, initialize the cache\n  // directory.\n  await fs.ensureDir(cacheDirectory)\n\n  // Ensure the public/static directory\n  await fs.ensureDir(`${publicDirectory}/static`)\n\n  // Init plugins once cache is initialized\n  await apiRunnerNode(`onPluginInit`, {\n    parentSpan: activity.span,\n  })\n\n  activity.end()\n\n  activity = reporter.activityTimer(`copy gatsby files`, {\n    parentSpan,\n  })\n\n  activity.start()\n\n  const srcDir = `${__dirname}/../../cache-dir`\n  const siteDir = cacheDirectory\n\n  try {\n    await fs.copy(srcDir, siteDir, {\n      overwrite: true,\n    })\n    await fs.ensureDir(`${cacheDirectory}/${lmdbCacheDirectoryName}`)\n\n    // Ensure .cache/fragments exists and is empty. We want fragments to be\n    // added on every run in response to data as fragments can only be added if\n    // the data used to create the schema they're dependent on is available.\n    await fs.emptyDir(`${cacheDirectory}/fragments`)\n  } catch (err) {\n    reporter.panic(`Unable to copy site files to .cache`, err)\n  }\n\n  // Find plugins which implement gatsby-browser and gatsby-ssr and write\n  // out api-runners for them.\n  const hasAPIFile = (env, plugin): string | undefined => {\n    // The plugin loader has disabled SSR APIs for this plugin. Usually due to\n    // multiple implementations of an API that can only be implemented once\n    if (env === `ssr` && plugin.skipSSR === true) return undefined\n\n    const envAPIs = plugin[`${env}APIs`]\n\n    // Always include gatsby-browser.js files if they exist as they're\n    // a handy place to include global styles and other global imports.\n    try {\n      if (env === `browser`) {\n        const modulePath = path.join(plugin.resolve, `gatsby-${env}`)\n        return slash(resolveModule(modulePath) as string)\n      }\n    } catch (e) {\n      // ignore\n    }\n\n    if (envAPIs && Array.isArray(envAPIs) && envAPIs.length > 0) {\n      const modulePath = path.join(plugin.resolve, `gatsby-${env}`)\n      return slash(resolveModule(modulePath) as string)\n    }\n    return undefined\n  }\n\n  const isResolved = (plugin): plugin is IPluginResolution => !!plugin.resolve\n  const isResolvedSSR = (plugin): plugin is IPluginResolutionSSR =>\n    !!plugin.resolve\n\n  const ssrPlugins: Array<IPluginResolutionSSR> = flattenedPlugins\n    .map(plugin => {\n      return {\n        name: plugin.name,\n        resolve: hasAPIFile(`ssr`, plugin),\n        options: plugin.pluginOptions,\n      }\n    })\n    .filter(isResolvedSSR)\n\n  const browserPlugins: Array<IPluginResolution> = flattenedPlugins\n    .map(plugin => {\n      return {\n        resolve: hasAPIFile(`browser`, plugin),\n        options: plugin.pluginOptions,\n      }\n    })\n    .filter(isResolved)\n\n  const browserPluginsRequires = browserPlugins\n    .map(plugin => {\n      // we need a relative import path to keep contenthash the same if directory changes\n      const relativePluginPath = path.relative(siteDir, plugin.resolve)\n      return `{\n      plugin: require('${slash(relativePluginPath)}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    })\n    .join(`,`)\n\n  const browserAPIRunner = `module.exports = [${browserPluginsRequires}]\\n`\n\n  let sSRAPIRunner = ``\n\n  try {\n    sSRAPIRunner = fs.readFileSync(`${siteDir}/api-runner-ssr.js`, `utf-8`)\n  } catch (err) {\n    reporter.panic(`Failed to read ${siteDir}/api-runner-ssr.js`, err)\n  }\n\n  const ssrPluginsRequires = ssrPlugins\n    .map(\n      plugin =>\n        `{\n      name: '${plugin.name}',\n      plugin: require('${plugin.resolve}'),\n      options: ${JSON.stringify(plugin.options)},\n    }`\n    )\n    .join(`,`)\n  sSRAPIRunner = `var plugins = [${ssrPluginsRequires}]\\n${sSRAPIRunner}`\n\n  fs.writeFileSync(\n    `${siteDir}/api-runner-browser-plugins.js`,\n    browserAPIRunner,\n    `utf-8`\n  )\n  fs.writeFileSync(`${siteDir}/api-runner-ssr.js`, sSRAPIRunner, `utf-8`)\n\n  activity.end()\n  /**\n   * Start the main bootstrap processes.\n   */\n\n  // onPreBootstrap\n  activity = reporter.activityTimer(`onPreBootstrap`, {\n    parentSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPreBootstrap`, {\n    parentSpan: activity.span,\n  })\n  activity.end()\n\n  // Track trailing slash option used in config\n  telemetry.trackFeatureIsUsed(`trailingSlash:${state.config.trailingSlash}`)\n\n  // Collect resolvable extensions and attach to program.\n  const extensions = [`.mjs`, `.js`, `.jsx`, `.wasm`, `.json`]\n  // Change to this being an action and plugins implement `onPreBootstrap`\n  // for adding extensions.\n  const apiResults = await apiRunnerNode(`resolvableExtensions`, {\n    traceId: `initial-resolvableExtensions`,\n    parentSpan,\n  })\n\n  store.dispatch({\n    type: `SET_PROGRAM_EXTENSIONS`,\n    payload: _.flattenDeep([extensions, apiResults]),\n  })\n\n  const workerPool = WorkerPool.create()\n\n  const siteDirectoryFiles = await fs.readdir(siteDirectory)\n\n  const gatsbyFilesIsInESM = siteDirectoryFiles.some(file =>\n    file.match(/gatsby-(node|config)\\.mjs/)\n  )\n\n  if (gatsbyFilesIsInESM) {\n    telemetry.trackFeatureIsUsed(`ESMInGatsbyFiles`)\n  }\n\n  if (state.config.graphqlTypegen) {\n    telemetry.trackFeatureIsUsed(`GraphQLTypegen`)\n    // This is only run during `gatsby develop`\n    if (process.env.gatsby_executing_command === `develop`) {\n      writeGraphQLConfig(program)\n    }\n  }\n\n  let initialWebhookBody: WebhookBody = undefined\n\n  if (process.env.GATSBY_INITIAL_WEBHOOK_BODY) {\n    try {\n      initialWebhookBody = JSON.parse(process.env.GATSBY_INITIAL_WEBHOOK_BODY)\n    } catch (e) {\n      reporter.error(\n        `Failed to parse GATSBY_INITIAL_WEBHOOK_BODY as JSON:\\n\"${e.message}\"`\n      )\n    }\n  }\n\n  return {\n    store,\n    workerPool,\n    webhookBody: initialWebhookBody,\n  }\n}\n"],"mappings":"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"}