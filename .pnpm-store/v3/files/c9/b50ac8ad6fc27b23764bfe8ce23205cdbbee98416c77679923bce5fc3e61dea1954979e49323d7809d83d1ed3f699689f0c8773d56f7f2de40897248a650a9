{"version":3,"file":"cache-fs.js","names":["fs","require","crypto","path","promisify","jsonFileStore","wrapCallback","globalGatsbyCacheLock","Map","showLockTimeoutWarning","exports","create","args","DiskStore","options","ttl","maxsize","Infinity","subdirs","zip","lockFile","wait","pollPeriod","stale","retries","retryWait","existsSync","mkdirSync","prototype","set","key","val","filePath","_getFilePathByKey","data","expireTime","Date","now","dir","dirname","access","constants","W_OK","catch","mkdir","err","code","_lock","write","_unlock","get","read","err2","del","undefined","delete","reset","readdir","stat","unlink","deletePath","fileOrDir","maxDeep","stats","isDirectory","files","i","length","join","isFile","test","Promise","resolve","reject","innerLock","lockTime","reporter","verbose","setTimeout","e","hash","createHash","update","digest","slice"],"sources":["../../src/cache/cache-fs.ts"],"sourcesContent":["// Initial file from https://github.com/rolandstarke/node-cache-manager-fs-hash @ af52d2d\n/* eslint-disable @babel/no-invalid-this, no-useless-catch */\n/* !\nThe MIT License (MIT)\n\nCopyright (c) 2017 Roland Starke\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nconst fs = require(`fs`)\nconst crypto = require(`crypto`)\nconst path = require(`path`)\nconst promisify = require(`util`).promisify\nconst jsonFileStore = require(`./json-file-store`)\nconst wrapCallback = require(`./wrap-callback`)\n\nimport reporter from \"gatsby-cli/lib/reporter\"\n\n// Cache read/writes are async. This locking attempts to prevent race conditions.\n// It's not ideal and locks timeout after 10s. It's mostly a port from when this\n// mechanism was using fs-based locks. Doing it in-memory reduces IO pressure and\n// we currently don't support two concurrent builds at the same time anyways.\nconst globalGatsbyCacheLock = new Map()\n\nlet showLockTimeoutWarning = true // Only show this once\n\n/**\n * construction of the disk storage\n * @param {object} [args] options of disk store\n * @param {string} [args.path] path for cached files\n * @param {number} [args.ttl] time to life in seconds\n * @param {boolean} [args.zip] zip content to save diskspace\n * @todo {number} [args.maxsize] max size in bytes on disk\n * @param {boolean} [args.subdirs] create subdirectories\n * @returns {DiskStore}\n */\nexports.create = function (args): typeof DiskStore {\n  return new DiskStore(args && args.options ? args.options : args)\n}\n\nfunction DiskStore(this: any, options): void {\n  options = options || {}\n\n  this.options = {\n    path: options.path || `./cache` /* path for cached files  */,\n    ttl:\n      options.ttl >= 0\n        ? +options.ttl\n        : 60 * 60 /* time before expiring in seconds */,\n    maxsize: options.maxsize || Infinity /* max size in bytes on disk */,\n    subdirs: options.subdirs || false,\n    zip: options.zip || false,\n    lockFile: {\n      // check lock at 0ms 50ms 100ms ... 400ms 1400ms 1450ms... up to 10 seconds, after that just assume the lock is staled\n      wait: 400,\n      pollPeriod: 50,\n      stale: 10 * 1000,\n      retries: 10,\n      retryWait: 600,\n    },\n  }\n\n  // check storage directory for existence (or create it)\n  if (!fs.existsSync(this.options.path)) {\n    fs.mkdirSync(this.options.path)\n  }\n}\n\n/**\n * save an entry in store\n * @param {string} key\n * @param {*} val\n * @param {object} [options]\n * @param {number} options.ttl time to life in seconds\n * @param {function} [cb]\n * @returns {Promise}\n */\nDiskStore.prototype.set = wrapCallback(async function (\n  this: any,\n  key,\n  val,\n  options\n) {\n  key = key + ``\n  const filePath = this._getFilePathByKey(key)\n\n  const ttl = options && options.ttl >= 0 ? +options.ttl : this.options.ttl\n  const data = {\n    expireTime: Date.now() + ttl * 1000,\n    key: key,\n    val: val,\n  }\n\n  if (this.options.subdirs) {\n    // check if subdir exists or create it\n    const dir = path.dirname(filePath)\n    await promisify(fs.access)(dir, fs.constants.W_OK).catch(function () {\n      return promisify(fs.mkdir)(dir).catch(err => {\n        if (err.code !== `EEXIST`) throw err\n      })\n    })\n  }\n\n  try {\n    await this._lock(filePath)\n    await jsonFileStore.write(filePath, data, this.options)\n  } catch (err) {\n    throw err\n  } finally {\n    await this._unlock(filePath)\n  }\n})\n\n/**\n * get an entry from store\n * @param {string} key\n * @param {function} [cb]\n * @returns {Promise}\n */\nDiskStore.prototype.get = wrapCallback(async function (this: any, key) {\n  key = key + ``\n  const filePath = this._getFilePathByKey(key)\n\n  try {\n    const data = await jsonFileStore\n      .read(filePath, this.options)\n      .catch(async err => {\n        if (err.code === `ENOENT`) {\n          throw err\n        }\n        // maybe the file is currently written to, lets lock it and read again\n        try {\n          await this._lock(filePath)\n          return await jsonFileStore.read(filePath, this.options)\n        } catch (err2) {\n          throw err2\n        } finally {\n          await this._unlock(filePath)\n        }\n      })\n    if (data.expireTime <= Date.now()) {\n      // cache expired\n      this.del(key).catch(() => 0 /* ignore */)\n      return undefined\n    }\n    if (data.key !== key) {\n      // hash collision\n      return undefined\n    }\n    return data.val\n  } catch (err) {\n    // file does not exist lets return a cache miss\n    if (err.code === `ENOENT`) {\n      return undefined\n    } else {\n      throw err\n    }\n  }\n})\n\n/**\n * delete entry from cache\n */\nDiskStore.prototype.del = wrapCallback(async function (this: any, key) {\n  const filePath = this._getFilePathByKey(key)\n  try {\n    if (this.options.subdirs) {\n      // check if the folder exists to fail faster\n      const dir = path.dirname(filePath)\n      await promisify(fs.access)(dir, fs.constants.W_OK)\n    }\n\n    await this._lock(filePath)\n    await jsonFileStore.delete(filePath, this.options)\n  } catch (err) {\n    // ignore deleting non existing keys\n    if (err.code !== `ENOENT`) {\n      throw err\n    }\n  } finally {\n    await this._unlock(filePath)\n  }\n})\n\n/**\n * cleanup cache on disk -> delete all files from the cache\n */\nDiskStore.prototype.reset = wrapCallback(async function (\n  this: any\n): Promise<void> {\n  const readdir = promisify(fs.readdir)\n  const stat = promisify(fs.stat)\n  const unlink = promisify(fs.unlink)\n\n  return await deletePath(this.options.path, 2)\n\n  async function deletePath(fileOrDir, maxDeep): Promise<void> {\n    if (maxDeep < 0) {\n      return\n    }\n    const stats = await stat(fileOrDir)\n    if (stats.isDirectory()) {\n      const files = await readdir(fileOrDir)\n      for (let i = 0; i < files.length; i++) {\n        await deletePath(path.join(fileOrDir, files[i]), maxDeep - 1)\n      }\n    } else if (\n      stats.isFile() &&\n      /[/\\\\]diskstore-[0-9a-fA-F/\\\\]+(\\.json|-\\d\\.bin)/.test(fileOrDir)\n    ) {\n      // delete the file if it is a diskstore file\n      await unlink(fileOrDir)\n    }\n  }\n})\n\n/**\n * locks a file so other forks that want to use the same file have to wait\n * @param {string} filePath\n * @returns {Promise}\n * @private\n */\nDiskStore.prototype._lock = function _lock(filePath): Promise<void> {\n  return new Promise((resolve, reject) => innerLock(resolve, reject, filePath))\n}\n\nfunction innerLock(resolve, reject, filePath): void {\n  try {\n    let lockTime = globalGatsbyCacheLock.get(filePath) ?? 0\n    if (lockTime > 0 && Date.now() - lockTime > 10 * 1000) {\n      if (showLockTimeoutWarning) {\n        showLockTimeoutWarning = false\n        reporter.verbose(\n          `Warning: lock file older than 10s, ignoring it... There is a possibility this leads to caching problems later. This warning will only be shown once.`\n        )\n      }\n      lockTime = 0\n      globalGatsbyCacheLock.delete(filePath)\n    }\n\n    if (lockTime > 0) {\n      setTimeout(() => {\n        innerLock(resolve, reject, filePath)\n      }, 50)\n    } else {\n      // set sync\n      globalGatsbyCacheLock.set(filePath, Date.now())\n      resolve()\n    }\n  } catch (e) {\n    reject(e)\n  }\n}\n\n/**\n * unlocks a file path\n * @type {Function}\n * @param {string} filePath\n * @returns {void}\n * @private\n */\nDiskStore.prototype._unlock = function _unlock(filePath): void {\n  globalGatsbyCacheLock.delete(filePath)\n}\n\n/**\n * returns the location where the value should be stored\n * @param {string} key\n * @returns {string}\n * @private\n */\nDiskStore.prototype._getFilePathByKey = function (key): string {\n  const hash = crypto\n    .createHash(`md5`)\n    .update(key + ``)\n    .digest(`hex`)\n  if (this.options.subdirs) {\n    // create subdirs with the first 3 chars of the hash\n    return path.join(\n      this.options.path,\n      `diskstore-` + hash.slice(0, 3),\n      hash.slice(3)\n    )\n  } else {\n    return path.join(this.options.path, `diskstore-` + hash)\n  }\n}\n"],"mappings":"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"}