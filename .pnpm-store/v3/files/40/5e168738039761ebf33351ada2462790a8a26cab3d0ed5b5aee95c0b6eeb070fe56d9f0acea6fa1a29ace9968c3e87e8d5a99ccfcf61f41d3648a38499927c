{"version":3,"file":"print-plugins.js","names":["schemaCustomizationAPIs","Set","excludePlugins","includePlugins","schemaCustomizationPluginsPath","process","cwd","printQueryEnginePlugins","fs","remove","e","queryEnginePlugins","renderQueryEnginePlugins","writeFile","flattenedPlugins","store","getState","usedPlugins","filter","p","has","name","nodeAPIs","some","api","usedSubPlugins","findSubPlugins","result","render","relativePluginPath","resolve","slash","path","relative","dirname","uniqSubPlugins","uniq","sanitizedUsedPlugins","map","plugin","i","pluginFilepath","subPluginPaths","undefined","importKey","pluginsWithWorkers","filterPluginsWithWorkers","subPluginModuleToImportNameMapping","Map","imports","importName","set","modulePath","gatsbyNodeExports","gatsbyWorkerExports","output","join","JSON","stringify","pluginOptions","value","module","subPlugin","get","replace","plugins","filteredPlugins","pluginWithWorker","importGatsbyPlugin","push","_","getSubpluginsByPluginPath","parentPlugin","segments","split","roots","segment","flat","root","allFlattenedPlugins","usedSubPluginResolves","flatMap","subPlugins","subPluginPath","Array","from","values"],"sources":["../../../src/schema/graphql-engine/print-plugins.ts"],"sourcesContent":["/* eslint @typescript-eslint/no-unused-vars: [\"error\", { \"ignoreRestSiblings\": true }] */\nimport * as fs from \"fs-extra\"\nimport * as path from \"path\"\nimport * as _ from \"lodash\"\nimport { slash } from \"gatsby-core-utils\"\nimport { store } from \"../../redux\"\nimport { IGatsbyState } from \"../../redux/types\"\nimport { importGatsbyPlugin } from \"../../utils/import-gatsby-plugin\"\n\nexport const schemaCustomizationAPIs = new Set([\n  `setFieldsOnGraphQLNodeType`,\n  `createSchemaCustomization`,\n  `createResolvers`,\n])\n\nconst excludePlugins = new Set([`internal-data-bridge`])\nconst includePlugins = new Set([`gatsby-plugin-sharp`])\n\n// Emit file that imports required node APIs\nconst schemaCustomizationPluginsPath =\n  process.cwd() + `/.cache/query-engine-plugins.js`\n\nexport async function printQueryEnginePlugins(): Promise<void> {\n  try {\n    await fs.remove(schemaCustomizationPluginsPath)\n  } catch (e) {\n    // no-op\n  }\n  const queryEnginePlugins = await renderQueryEnginePlugins()\n  return await fs.writeFile(schemaCustomizationPluginsPath, queryEnginePlugins)\n}\n\nasync function renderQueryEnginePlugins(): Promise<string> {\n  const { flattenedPlugins } = store.getState()\n  const usedPlugins = flattenedPlugins.filter(\n    p =>\n      includePlugins.has(p.name) ||\n      (!excludePlugins.has(p.name) &&\n        p.nodeAPIs.some(api => schemaCustomizationAPIs.has(api)))\n  )\n  const usedSubPlugins = findSubPlugins(usedPlugins, flattenedPlugins)\n  const result = await render(usedPlugins, usedSubPlugins)\n  return result\n}\n\nfunction relativePluginPath(resolve: string): string {\n  return slash(\n    path.relative(path.dirname(schemaCustomizationPluginsPath), resolve)\n  )\n}\n\nasync function render(\n  usedPlugins: IGatsbyState[\"flattenedPlugins\"],\n  usedSubPlugins: IGatsbyState[\"flattenedPlugins\"]\n): Promise<string> {\n  const uniqSubPlugins = uniq(usedSubPlugins)\n\n  const sanitizedUsedPlugins = usedPlugins.map((plugin, i) => {\n    // TODO: We don't support functions in pluginOptions here\n    return {\n      ...plugin,\n      resolve: ``,\n      pluginFilepath: ``,\n      subPluginPaths: undefined,\n      importKey: i + 1,\n    }\n  })\n\n  const pluginsWithWorkers = await filterPluginsWithWorkers(usedPlugins)\n\n  const subPluginModuleToImportNameMapping = new Map<string, string>()\n  const imports: Array<string> = [\n    ...usedPlugins.map(\n      (plugin, i) =>\n        `import * as pluginGatsbyNode${i} from \"${relativePluginPath(\n          plugin.resolve\n        )}/gatsby-node\"`\n    ),\n    ...pluginsWithWorkers.map(\n      (plugin, i) =>\n        `import * as pluginGatsbyWorker${i} from \"${relativePluginPath(\n          plugin.resolve\n        )}/gatsby-worker\"`\n    ),\n    ...uniqSubPlugins.map((plugin, i) => {\n      const importName = `subPlugin${i}`\n      subPluginModuleToImportNameMapping.set(plugin.modulePath!, importName)\n      return `import * as ${importName} from \"${relativePluginPath(\n        plugin.modulePath!\n      )}\"`\n    }),\n  ]\n  const gatsbyNodeExports = usedPlugins.map(\n    (plugin, i) =>\n      `{ name: \"${plugin.name}\", module: pluginGatsbyNode${i}, importKey: ${\n        i + 1\n      } },`\n  )\n  const gatsbyWorkerExports = pluginsWithWorkers.map(\n    (plugin, i) =>\n      `{ name: \"${plugin.name}\", module: pluginGatsbyWorker${i}, importKey: ${\n        i + 1\n      } },`\n  )\n  const output = `\n${imports.join(`\\n`)}\n\nexport const gatsbyNodes = [\n${gatsbyNodeExports.join(`\\n`)}\n]\n\nexport const gatsbyWorkers = [\n${gatsbyWorkerExports.join(`\\n`)}\n]\n\nexport const flattenedPlugins =\n  ${JSON.stringify(\n    sanitizedUsedPlugins.map(plugin => {\n      return {\n        ...plugin,\n        pluginOptions: _.cloneDeepWith(\n          plugin.pluginOptions,\n          (value: any): any => {\n            if (\n              typeof value === `object` &&\n              value !== null &&\n              value.module &&\n              value.modulePath\n            ) {\n              const { module, modulePath, ...subPlugin } = value\n              return {\n                ...subPlugin,\n                module: `_SKIP_START_${subPluginModuleToImportNameMapping.get(\n                  modulePath\n                )}_SKIP_END_`,\n                resolve: ``,\n                pluginFilepath: ``,\n              }\n            }\n            return undefined\n          }\n        ),\n      }\n    }),\n    null,\n    2\n  ).replace(/\"_SKIP_START_|_SKIP_END_\"/g, ``)}\n`\n  return output\n}\n\nasync function filterPluginsWithWorkers(\n  plugins: IGatsbyState[\"flattenedPlugins\"]\n): Promise<IGatsbyState[\"flattenedPlugins\"]> {\n  const filteredPlugins: Array<any> = []\n\n  for (const plugin of plugins) {\n    try {\n      const pluginWithWorker = await importGatsbyPlugin(plugin, `gatsby-worker`)\n      if (pluginWithWorker) {\n        filteredPlugins.push(plugin)\n      }\n    } catch (_) {\n      // Do nothing\n    }\n  }\n\n  return filteredPlugins\n}\n\ntype ArrayElement<ArrayType extends Array<unknown>> = ArrayType extends Array<\n  infer ElementType\n>\n  ? ElementType\n  : never\n\nfunction getSubpluginsByPluginPath(\n  parentPlugin: ArrayElement<IGatsbyState[\"flattenedPlugins\"]>,\n  path: string\n): IGatsbyState[\"flattenedPlugins\"] {\n  const segments = path.split(`.`)\n  let roots: Array<any> = [parentPlugin.pluginOptions]\n\n  for (const segment of segments) {\n    if (segment === `[]`) {\n      roots = roots.flat()\n    } else {\n      roots = roots.map(root => root[segment])\n    }\n  }\n  roots = roots.flat()\n\n  return roots\n}\n\nfunction findSubPlugins(\n  plugins: IGatsbyState[\"flattenedPlugins\"],\n  allFlattenedPlugins: IGatsbyState[\"flattenedPlugins\"]\n): IGatsbyState[\"flattenedPlugins\"] {\n  const usedSubPluginResolves = new Set<string>(\n    plugins\n      .flatMap(plugin => {\n        if (plugin.subPluginPaths) {\n          const subPlugins: IGatsbyState[\"flattenedPlugins\"] = []\n          for (const subPluginPath of plugin.subPluginPaths) {\n            subPlugins.push(...getSubpluginsByPluginPath(plugin, subPluginPath))\n          }\n          return subPlugins\n        }\n\n        return []\n      })\n      .map(plugin => plugin[`resolve`])\n      .filter((p: unknown): p is string => typeof p === `string`)\n  )\n  return allFlattenedPlugins.filter(\n    p => usedSubPluginResolves.has(p.resolve) && !!p.modulePath\n  )\n}\n\nfunction uniq(\n  plugins: IGatsbyState[\"flattenedPlugins\"]\n): IGatsbyState[\"flattenedPlugins\"] {\n  return Array.from(new Map(plugins.map(p => [p.resolve, p])).values())\n}\n"],"mappings":"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"}