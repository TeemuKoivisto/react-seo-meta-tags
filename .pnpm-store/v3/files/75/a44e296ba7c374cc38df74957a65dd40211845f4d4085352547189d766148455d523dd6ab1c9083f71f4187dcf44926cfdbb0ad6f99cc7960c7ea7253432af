{"version":3,"file":"babel-plugin-remove-api.js","names":["declare","removeApiCalls","api","options","assertVersion","apisToRemove","apis","length","console","warn","name","visitor","Program","exit","path","state","apiRemoved","removed","scope","crawl","Object","keys","bindings","forEach","refName","ref","referenced","type","isSelfReferenced","referencePaths","every","refPath","findParent","p","remove","t","isVariableDeclarator","isObjectPattern","parent","declarations","id","objectPattern","properties","filter","prop","isObjectProperty","value","argument","kind","specifiers","parentPath","ExportDefaultDeclaration","includes","ExportNamedDeclaration","declaration","node","isExportNamedDeclaration","specifiersToKeep","specifier","isExportSpecifier","isIdentifier","exported","binding","local","push","apiToCheck","isFunctionDeclaration","isVariableDeclaration","i","objectPath","get","removeExportProperties","source","ExpressionStatement","isAssignmentExpression","expression","isMemberExpression","left","object","property"],"sources":["../../../src/utils/babel/babel-plugin-remove-api.ts"],"sourcesContent":["import { declare } from \"@babel/helper-plugin-utils\"\nimport * as t from \"@babel/types\"\nimport type { PluginObj, ConfigAPI, NodePath } from \"@babel/core\"\nimport { removeExportProperties } from \"./babel-module-exports-helpers\"\n\n/**\n * Remove specified module exports from files.\n */\nexport default declare(function removeApiCalls(\n  api: ConfigAPI,\n  options: { apis?: Array<string> }\n): PluginObj {\n  api.assertVersion(7)\n\n  const apisToRemove = options?.apis ?? []\n\n  if (!apisToRemove.length) {\n    console.warn(\n      `No list of APIs was given to remove, check your plugin options.`\n    )\n  }\n\n  return {\n    name: `remove-api`,\n    visitor: {\n      Program: {\n        exit(path, state): void {\n          if (!state.apiRemoved) {\n            return\n          }\n\n          // babel doesn't remove references very well so we loop until nothing gets removed\n          let removed = false\n\n          // remove all unreferenced bindings\n          do {\n            removed = false\n            // make sure all references are up to date\n            path.scope.crawl()\n\n            Object.keys(path.scope.bindings).forEach(refName => {\n              const ref = path.scope.bindings[refName]\n\n              if (ref.referenced) {\n                // Functions can reference themselves, so we need to check if there's a\n                // binding outside the function scope or not.\n                if (ref.path.type === `FunctionDeclaration`) {\n                  const isSelfReferenced = ref.referencePaths.every(\n                    refPath => !!refPath.findParent(p => p === ref.path)\n                  )\n\n                  if (isSelfReferenced) {\n                    ref.path.remove()\n                    removed = true\n                  }\n                }\n              } else {\n                // if const {x,y} is used, we remove the property\n                if (\n                  t.isVariableDeclarator(ref.path) &&\n                  t.isObjectPattern(\n                    (ref.path.parent as t.VariableDeclaration).declarations[0]\n                      .id\n                  )\n                ) {\n                  const objectPattern = (\n                    ref.path.parent as t.VariableDeclaration\n                  ).declarations[0].id as t.ObjectPattern\n                  objectPattern.properties = objectPattern.properties.filter(\n                    prop =>\n                      t.isObjectProperty(prop)\n                        ? (prop.value as t.Identifier).name !== refName\n                        : ((prop as t.RestElement).argument as t.Identifier)\n                            .name !== refName\n                  )\n\n                  // if all properties got removed thus the object pattern is empty, we remove the whole declaration\n                  if (!objectPattern.properties.length) {\n                    ref.path.remove()\n                  }\n                } else {\n                  ref.path.remove()\n                }\n\n                // if it's a module and all specifiers are removed, remove the full binding\n                if (\n                  ref.kind === `module` &&\n                  !(ref.path.parent as t.ImportDeclaration).specifiers.length &&\n                  ref.path.parentPath\n                ) {\n                  ref.path.parentPath.remove()\n                }\n\n                removed = true\n              }\n            })\n          } while (removed)\n        },\n      },\n\n      // Remove export statements\n\n      ExportDefaultDeclaration(path, state): void {\n        if (apisToRemove.includes(`default`)) {\n          state.apiRemoved = true\n          path.remove()\n        }\n      },\n      ExportNamedDeclaration(path, state): void {\n        const declaration = path.node.declaration\n\n        if (t.isExportNamedDeclaration(path.node)) {\n          const specifiersToKeep: Array<\n            | t.ExportDefaultSpecifier\n            | t.ExportNamespaceSpecifier\n            | t.ExportSpecifier\n          > = []\n\n          // Remove `export { foo } = [...]` and `export { foo } from \"X\"` shaped exports\n          path.node.specifiers.forEach(specifier => {\n            if (\n              t.isExportSpecifier(specifier) &&\n              t.isIdentifier(specifier.exported) &&\n              apisToRemove.includes(specifier.exported.name)\n            ) {\n              const binding = path.scope.bindings[specifier.local.name]\n              // binding will not exist for `export { foo } from \"X\"` cases\n              if (binding) {\n                binding.path.remove()\n              }\n            } else {\n              specifiersToKeep.push(specifier)\n            }\n          })\n\n          path.node.specifiers = specifiersToKeep\n        }\n\n        // Remove `export function foo() {}` shaped exports\n        let apiToCheck\n        if (t.isFunctionDeclaration(declaration) && declaration.id) {\n          apiToCheck = declaration.id.name\n        }\n\n        // Remove `export const foo = () => {}` shaped exports\n        if (\n          t.isVariableDeclaration(declaration) &&\n          t.isIdentifier(declaration.declarations[0].id)\n        ) {\n          apiToCheck = declaration.declarations[0].id.name\n        }\n\n        if (apiToCheck && apisToRemove.includes(apiToCheck)) {\n          state.apiRemoved = true\n          path.remove()\n        }\n\n        // Remove `export const { foo } = () => {}` shaped exports\n        if (t.isVariableDeclaration(declaration)) {\n          for (let i = 0; i < declaration?.declarations.length; i++) {\n            if (declaration?.declarations[i].id.type === `ObjectPattern`) {\n              const objectPath = path.get(\n                `declaration.declarations.${i}.id`\n              ) as NodePath<t.ObjectPattern>\n              removeExportProperties(path, objectPath, apisToRemove)\n            }\n          }\n        }\n        // Remove `export const { foo } from \"X\"` shaped exports\n        else if (path.node?.source) {\n          if (path.node.specifiers.length === 0) {\n            path.remove()\n          }\n        }\n      },\n\n      // Remove `module.exports = { foo }` and `exports.foo = {}` shaped exports\n      ExpressionStatement(path, state): void {\n        if (\n          !t.isAssignmentExpression(path.node.expression) ||\n          !t.isMemberExpression(path.node.expression.left) ||\n          (path.node.expression.left.object as t.Identifier).name !== `exports`\n        ) {\n          return\n        }\n\n        const apiToCheck = (path.node.expression.left.property as t.Identifier)\n          .name\n        if (apiToCheck && apisToRemove.includes(apiToCheck)) {\n          state.apiRemoved = true\n          path.remove()\n        }\n      },\n    },\n  }\n})\n"],"mappings":"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"}