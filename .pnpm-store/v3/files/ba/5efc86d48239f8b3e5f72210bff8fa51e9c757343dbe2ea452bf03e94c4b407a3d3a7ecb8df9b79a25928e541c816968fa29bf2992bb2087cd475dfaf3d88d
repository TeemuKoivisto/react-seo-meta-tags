{"version":3,"file":"test-import-error.js","names":["testImportError","moduleName","err","code","pnpCode","regex","RegExp","replace","firstLine","toString","split","test"],"sources":["../../src/utils/test-import-error.ts"],"sourcesContent":["export const testImportError = (moduleName: string, err: any): boolean => {\n  // PnP will return the following code when an import is allowed per the\n  // dependency tree rules but the requested file doesn't exist\n  if (\n    err.code === `QUALIFIED_PATH_RESOLUTION_FAILED` ||\n    err.pnpCode === `QUALIFIED_PATH_RESOLUTION_FAILED`\n  ) {\n    return true\n  }\n  const regex = new RegExp(\n    // stderr will show ModuleNotFoundError, but Error is correct since we toString below\n    `Error:\\\\s(\\\\S+\\\\s)?[Cc]annot find module\\\\s.${moduleName.replace(\n      /[-/\\\\^$*+?.()|[\\]{}]/g,\n      `\\\\$&`\n    )}`\n  )\n\n  const [firstLine] = err.toString().split(`\\n`)\n  return regex.test(firstLine.replace(/\\\\\\\\/g, `\\\\`))\n}\n"],"mappings":";;;;AAAO,MAAMA,eAAe,GAAG,CAACC,UAAkB,EAAEC,GAAQ,KAAc;EACxE;EACA;EACA,IACEA,GAAG,CAACC,IAAI,KAAM,kCAAiC,IAC/CD,GAAG,CAACE,OAAO,KAAM,kCAAiC,EAClD;IACA,OAAO,IAAI;EACb;EACA,MAAMC,KAAK,GAAG,IAAIC,MAAM;EACtB;EACC,+CAA8CL,UAAU,CAACM,OAAO,CAC/D,uBAAuB,EACtB,MAAK,CACN,EAAC,CACJ;EAED,MAAM,CAACC,SAAS,CAAC,GAAGN,GAAG,CAACO,QAAQ,EAAE,CAACC,KAAK,CAAE,IAAG,CAAC;EAC9C,OAAOL,KAAK,CAACM,IAAI,CAACH,SAAS,CAACD,OAAO,CAAC,OAAO,EAAG,IAAG,CAAC,CAAC;AACrD,CAAC;AAAA"}