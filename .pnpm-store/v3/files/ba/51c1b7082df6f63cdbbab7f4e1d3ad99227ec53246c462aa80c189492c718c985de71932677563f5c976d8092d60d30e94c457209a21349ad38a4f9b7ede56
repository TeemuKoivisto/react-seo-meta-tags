{"version":3,"file":"get-public-path.js","names":["trimSlashes","part","replace","isURL","possibleUrl","some","expr","startsWith","getPublicPath","assetPrefix","pathPrefix","prefixPaths","normalized","filter","length","map","join"],"sources":["../../src/utils/get-public-path.ts"],"sourcesContent":["const trimSlashes = (part: string): string => part.replace(/(^\\/)|(\\/$)/g, ``)\n\nconst isURL = (possibleUrl: string): boolean =>\n  [`http://`, `https://`, `//`].some(expr => possibleUrl.startsWith(expr))\n\nexport const getPublicPath = ({\n  assetPrefix,\n  pathPrefix,\n  prefixPaths,\n}: {\n  assetPrefix?: string\n  pathPrefix?: string\n  prefixPaths?: boolean\n}): string => {\n  if (prefixPaths && (assetPrefix || pathPrefix)) {\n    const normalized = [assetPrefix, pathPrefix]\n      .filter((part): part is string => (part ? part.length > 0 : false))\n      .map(part => trimSlashes(part))\n      .join(`/`)\n\n    return isURL(normalized) ? normalized : `/${normalized}`\n  }\n\n  return ``\n}\n"],"mappings":";;;;AAAA,MAAMA,WAAW,GAAIC,IAAY,IAAaA,IAAI,CAACC,OAAO,CAAC,cAAc,EAAG,EAAC,CAAC;AAE9E,MAAMC,KAAK,GAAIC,WAAmB,IAChC,CAAE,SAAQ,EAAG,UAAS,EAAG,IAAG,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIF,WAAW,CAACG,UAAU,CAACD,IAAI,CAAC,CAAC;AAEnE,MAAME,aAAa,GAAG,CAAC;EAC5BC,WAAW;EACXC,UAAU;EACVC;AAKF,CAAC,KAAa;EACZ,IAAIA,WAAW,KAAKF,WAAW,IAAIC,UAAU,CAAC,EAAE;IAC9C,MAAME,UAAU,GAAG,CAACH,WAAW,EAAEC,UAAU,CAAC,CACzCG,MAAM,CAAEZ,IAAI,IAAsBA,IAAI,GAAGA,IAAI,CAACa,MAAM,GAAG,CAAC,GAAG,KAAM,CAAC,CAClEC,GAAG,CAACd,IAAI,IAAID,WAAW,CAACC,IAAI,CAAC,CAAC,CAC9Be,IAAI,CAAE,GAAE,CAAC;IAEZ,OAAOb,KAAK,CAACS,UAAU,CAAC,GAAGA,UAAU,GAAI,IAAGA,UAAW,EAAC;EAC1D;EAEA,OAAQ,EAAC;AACX,CAAC;AAAA"}