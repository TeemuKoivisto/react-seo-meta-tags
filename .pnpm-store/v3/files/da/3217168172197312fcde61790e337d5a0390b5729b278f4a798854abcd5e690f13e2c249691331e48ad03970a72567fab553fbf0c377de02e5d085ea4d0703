{"version":3,"file":"changed-pages.js","names":["deletePage","actions","deleteUntouchedPages","currentPages","timeBeforeApisRan","shouldRunCreatePagesStatefully","deletedPages","forEach","page","isCreatedByStatefulCreatePages","updatedAt","store","dispatch","push","path","findChangedPages","oldPages","changedPages","compareWithoutUpdated","_left","_right","key","undefined","newPage","oldPage","get","_page","has"],"sources":["../../src/utils/changed-pages.ts"],"sourcesContent":["import { actions } from \"../redux/actions\"\nimport { store } from \"../redux\"\nconst { deletePage } = actions\nimport { isEqualWith } from \"lodash\"\nimport { IGatsbyPage } from \"../redux/types\"\nimport type { IsEqualCustomizer } from \"lodash\"\n\nexport function deleteUntouchedPages(\n  currentPages: Map<string, IGatsbyPage>,\n  timeBeforeApisRan: number,\n  shouldRunCreatePagesStatefully: boolean\n): Array<string> {\n  const deletedPages: Array<string> = []\n\n  // Delete pages that weren't updated when running createPages.\n  currentPages.forEach(page => {\n    if (\n      (shouldRunCreatePagesStatefully ||\n        !page.isCreatedByStatefulCreatePages) &&\n      page.updatedAt < timeBeforeApisRan\n    ) {\n      store.dispatch(deletePage(page))\n      deletedPages.push(page.path, `/page-data${page.path}`)\n    }\n  })\n  return deletedPages\n}\n\nexport function findChangedPages(\n  oldPages: Map<string, IGatsbyPage>,\n  currentPages: Map<string, IGatsbyPage>\n): {\n  changedPages: Array<string>\n  deletedPages: Array<string>\n} {\n  const changedPages: Array<string> = []\n\n  const compareWithoutUpdated: IsEqualCustomizer = (_left, _right, key) =>\n    key === `updatedAt` || undefined\n\n  currentPages.forEach((newPage, path) => {\n    const oldPage = oldPages.get(path)\n    if (!oldPage || !isEqualWith(newPage, oldPage, compareWithoutUpdated)) {\n      changedPages.push(path)\n    }\n  })\n  const deletedPages: Array<string> = []\n  oldPages.forEach((_page, key) => {\n    if (!currentPages.has(key)) {\n      deletedPages.push(key)\n    }\n  })\n\n  return { changedPages, deletedPages }\n}\n"],"mappings":";;;;;;;AAAA;AACA;AACA,MAAM;EAAEA;AAAW,CAAC,GAAGC,gBAAO;AAKvB,SAASC,oBAAoB,CAClCC,YAAsC,EACtCC,iBAAyB,EACzBC,8BAAuC,EACxB;EACf,MAAMC,YAA2B,GAAG,EAAE;;EAEtC;EACAH,YAAY,CAACI,OAAO,CAACC,IAAI,IAAI;IAC3B,IACE,CAACH,8BAA8B,IAC7B,CAACG,IAAI,CAACC,8BAA8B,KACtCD,IAAI,CAACE,SAAS,GAAGN,iBAAiB,EAClC;MACAO,YAAK,CAACC,QAAQ,CAACZ,UAAU,CAACQ,IAAI,CAAC,CAAC;MAChCF,YAAY,CAACO,IAAI,CAACL,IAAI,CAACM,IAAI,EAAG,aAAYN,IAAI,CAACM,IAAK,EAAC,CAAC;IACxD;EACF,CAAC,CAAC;EACF,OAAOR,YAAY;AACrB;AAEO,SAASS,gBAAgB,CAC9BC,QAAkC,EAClCb,YAAsC,EAItC;EACA,MAAMc,YAA2B,GAAG,EAAE;EAEtC,MAAMC,qBAAwC,GAAG,CAACC,KAAK,EAAEC,MAAM,EAAEC,GAAG,KAClEA,GAAG,KAAM,WAAU,IAAIC,SAAS;EAElCnB,YAAY,CAACI,OAAO,CAAC,CAACgB,OAAO,EAAET,IAAI,KAAK;IACtC,MAAMU,OAAO,GAAGR,QAAQ,CAACS,GAAG,CAACX,IAAI,CAAC;IAClC,IAAI,CAACU,OAAO,IAAI,CAAC,2BAAYD,OAAO,EAAEC,OAAO,EAAEN,qBAAqB,CAAC,EAAE;MACrED,YAAY,CAACJ,IAAI,CAACC,IAAI,CAAC;IACzB;EACF,CAAC,CAAC;EACF,MAAMR,YAA2B,GAAG,EAAE;EACtCU,QAAQ,CAACT,OAAO,CAAC,CAACmB,KAAK,EAAEL,GAAG,KAAK;IAC/B,IAAI,CAAClB,YAAY,CAACwB,GAAG,CAACN,GAAG,CAAC,EAAE;MAC1Bf,YAAY,CAACO,IAAI,CAACQ,GAAG,CAAC;IACxB;EACF,CAAC,CAAC;EAEF,OAAO;IAAEJ,YAAY;IAAEX;EAAa,CAAC;AACvC"}