{"version":3,"file":"nodes.js","names":["hasNodeChanged","id","digest","node","getNode","internal","contentDigest","getNodeAndSavePathDependency","path","console","error","undefined","createPageDependency","nodeId","loadNodeContent","content","plugin","store","getState","flattenedPlugins","find","plug","name","owner","Error","require","resolve"],"sources":["../../src/utils/nodes.ts"],"sourcesContent":["import { createPageDependency } from \"../redux/actions/add-page-dependency\"\nimport { getNode } from \"../datastore\"\nimport { IGatsbyNode } from \"../redux/types\"\nimport { store } from \"../redux\"\n\n/**\n * Determine if node has changed.\n */\nexport const hasNodeChanged = (id: string, digest: string): boolean => {\n  const node = getNode(id)\n  if (!node) {\n    return true\n  } else {\n    return node.internal.contentDigest !== digest\n  }\n}\n\n/**\n * Get node and save path dependency.\n */\nexport const getNodeAndSavePathDependency = (\n  id: string,\n  path: string\n): IGatsbyNode | undefined => {\n  const node = getNode(id)\n\n  if (!node) {\n    console.error(\n      `getNodeAndSavePathDependency failed for node id: ${id} as it was not found in cache`\n    )\n    return undefined\n  }\n\n  createPageDependency({ path, nodeId: id })\n  return node\n}\n\n/**\n * Get content for a node from the plugin that created it.\n */\nexport async function loadNodeContent(node: IGatsbyNode): Promise<string> {\n  if (typeof node.internal.content === `string`) {\n    return node.internal.content\n  }\n\n  // Load plugin's loader function\n  const plugin = store\n    .getState()\n    .flattenedPlugins.find(plug => plug.name === node.internal.owner)\n\n  if (!plugin) {\n    throw new Error(\n      `Could not find owner plugin of node for loadNodeContent with owner \\`${node.internal.owner}\\``\n    )\n  }\n\n  const { loadNodeContent } = require(plugin.resolve)\n\n  if (!loadNodeContent) {\n    throw new Error(\n      `Could not find function loadNodeContent for plugin ${plugin.name}`\n    )\n  }\n\n  const content = await loadNodeContent(node)\n\n  node.internal.content = content\n\n  return content\n}\n"],"mappings":";;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACO,MAAMA,cAAc,GAAG,CAACC,EAAU,EAAEC,MAAc,KAAc;EACrE,MAAMC,IAAI,GAAG,IAAAC,kBAAO,EAACH,EAAE,CAAC;EACxB,IAAI,CAACE,IAAI,EAAE;IACT,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAOA,IAAI,CAACE,QAAQ,CAACC,aAAa,KAAKJ,MAAM;EAC/C;AACF,CAAC;;AAED;AACA;AACA;AAFA;AAGO,MAAMK,4BAA4B,GAAG,CAC1CN,EAAU,EACVO,IAAY,KACgB;EAC5B,MAAML,IAAI,GAAG,IAAAC,kBAAO,EAACH,EAAE,CAAC;EAExB,IAAI,CAACE,IAAI,EAAE;IACTM,OAAO,CAACC,KAAK,CACV,oDAAmDT,EAAG,+BAA8B,CACtF;IACD,OAAOU,SAAS;EAClB;EAEA,IAAAC,uCAAoB,EAAC;IAAEJ,IAAI;IAAEK,MAAM,EAAEZ;EAAG,CAAC,CAAC;EAC1C,OAAOE,IAAI;AACb,CAAC;;AAED;AACA;AACA;AAFA;AAGO,eAAeW,eAAe,CAACX,IAAiB,EAAmB;EACxE,IAAI,OAAOA,IAAI,CAACE,QAAQ,CAACU,OAAO,KAAM,QAAO,EAAE;IAC7C,OAAOZ,IAAI,CAACE,QAAQ,CAACU,OAAO;EAC9B;;EAEA;EACA,MAAMC,MAAM,GAAGC,YAAK,CACjBC,QAAQ,EAAE,CACVC,gBAAgB,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKnB,IAAI,CAACE,QAAQ,CAACkB,KAAK,CAAC;EAEnE,IAAI,CAACP,MAAM,EAAE;IACX,MAAM,IAAIQ,KAAK,CACZ,wEAAuErB,IAAI,CAACE,QAAQ,CAACkB,KAAM,IAAG,CAChG;EACH;EAEA,MAAM;IAAET;EAAgB,CAAC,GAAGW,OAAO,CAACT,MAAM,CAACU,OAAO,CAAC;EAEnD,IAAI,CAACZ,eAAe,EAAE;IACpB,MAAM,IAAIU,KAAK,CACZ,sDAAqDR,MAAM,CAACM,IAAK,EAAC,CACpE;EACH;EAEA,MAAMP,OAAO,GAAG,MAAMD,eAAe,CAACX,IAAI,CAAC;EAE3CA,IAAI,CAACE,QAAQ,CAACU,OAAO,GAAGA,OAAO;EAE/B,OAAOA,OAAO;AAChB"}