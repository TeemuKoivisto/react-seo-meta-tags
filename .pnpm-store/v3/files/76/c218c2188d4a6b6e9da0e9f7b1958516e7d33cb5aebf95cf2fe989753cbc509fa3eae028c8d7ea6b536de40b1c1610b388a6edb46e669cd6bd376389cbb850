{"version":3,"file":"schema-composer.js","names":["createSchemaComposer","fieldExtensions","schemaComposer","SchemaComposer","getNodeInterface","getOrCreateRemoteFileInterface","add","GraphQLDate","GraphQLJSON","GatsbyImageDataScalar","addDirectives"],"sources":["../../src/schema/schema-composer.ts"],"sourcesContent":["import { SchemaComposer, GraphQLJSON } from \"graphql-compose\"\nimport { addDirectives, GraphQLFieldExtensionDefinition } from \"./extensions\"\nimport { GraphQLDate } from \"./types/date\"\nimport { IGatsbyResolverContext } from \"./type-definitions\"\nimport { GatsbyImageDataScalar } from \"./types/media\"\nimport { getNodeInterface } from \"./types/node-interface\"\nimport { getOrCreateRemoteFileInterface } from \"./types/remote-file-interface\"\n\nexport const createSchemaComposer = <TSource, TArgs>({\n  fieldExtensions,\n}: GraphQLFieldExtensionDefinition = {}): SchemaComposer<\n  IGatsbyResolverContext<TSource, TArgs>\n> => {\n  const schemaComposer: SchemaComposer<IGatsbyResolverContext<TSource, TArgs>> =\n    new SchemaComposer()\n\n  // set default interfaces so plugins can use them\n  getNodeInterface({ schemaComposer })\n  getOrCreateRemoteFileInterface(schemaComposer)\n\n  schemaComposer.add(GraphQLDate)\n  schemaComposer.add(GraphQLJSON)\n  schemaComposer.add(GatsbyImageDataScalar)\n  addDirectives({ schemaComposer, fieldExtensions })\n  return schemaComposer\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEO,MAAMA,oBAAoB,GAAG,CAAiB;EACnDC;AAC+B,CAAC,GAAG,CAAC,CAAC,KAElC;EACH,MAAMC,cAAsE,GAC1E,IAAIC,8BAAc,EAAE;;EAEtB;EACA,IAAAC,+BAAgB,EAAC;IAAEF;EAAe,CAAC,CAAC;EACpC,IAAAG,mDAA8B,EAACH,cAAc,CAAC;EAE9CA,cAAc,CAACI,GAAG,CAACC,iBAAW,CAAC;EAC/BL,cAAc,CAACI,GAAG,CAACE,2BAAW,CAAC;EAC/BN,cAAc,CAACI,GAAG,CAACG,4BAAqB,CAAC;EACzC,IAAAC,yBAAa,EAAC;IAAER,cAAc;IAAED;EAAgB,CAAC,CAAC;EAClD,OAAOC,cAAc;AACvB,CAAC;AAAA"}