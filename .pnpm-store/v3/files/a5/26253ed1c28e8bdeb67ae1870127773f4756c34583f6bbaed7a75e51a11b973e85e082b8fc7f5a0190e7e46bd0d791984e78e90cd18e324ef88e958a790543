{"version":3,"file":"show-experiment-notice.js","names":["ONE_DAY","noticesToShow","configStoreKey","experimentIdentifier","showExperimentNoticeAfterTimeout","umbrellaLink","noticeText","showNoticeAfterMs","minimumIntervalBetweenNoticesMs","lastTimeWeShowedNotice","getConfigStore","get","Date","now","undefined","noticeTimeout","setTimeout","push","clearNoticeTimeout","clearTimeout","createNoticeMessage","notices","message","forEach","notice","chalk","bgBlue","bold","showExperimentNotices","length","telemetry","trackCli","set","reporter","info"],"sources":["../../src/utils/show-experiment-notice.ts"],"sourcesContent":["import { getConfigStore } from \"gatsby-core-utils\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport chalk from \"chalk\"\nimport telemetry from \"gatsby-telemetry\"\n\ntype CancelExperimentNoticeCallback = () => void\n\nexport type CancelExperimentNoticeCallbackOrUndefined =\n  | CancelExperimentNoticeCallback\n  | undefined\n\nconst ONE_DAY = 24 * 60 * 60 * 1000\n\ninterface INoticeObject {\n  noticeText: string\n  umbrellaLink: string\n  experimentIdentifier: string\n}\n\nconst noticesToShow: Array<INoticeObject> = []\nconst configStoreKey = (experimentIdentifier): string =>\n  `lastExperimentNotice.${experimentIdentifier}`\n\nexport function showExperimentNoticeAfterTimeout(\n  experimentIdentifier: string,\n  umbrellaLink: string,\n  noticeText: string,\n  showNoticeAfterMs: number,\n  minimumIntervalBetweenNoticesMs: number = ONE_DAY\n): CancelExperimentNoticeCallbackOrUndefined {\n  const lastTimeWeShowedNotice = getConfigStore().get(\n    configStoreKey(experimentIdentifier)\n  )\n\n  if (lastTimeWeShowedNotice) {\n    if (Date.now() - lastTimeWeShowedNotice < minimumIntervalBetweenNoticesMs) {\n      return undefined\n    }\n  }\n\n  const noticeTimeout = setTimeout(() => {\n    noticesToShow.push({ noticeText, umbrellaLink, experimentIdentifier })\n  }, showNoticeAfterMs)\n\n  return function clearNoticeTimeout(): void {\n    clearTimeout(noticeTimeout)\n  }\n}\n\nexport const createNoticeMessage = (notices): string => {\n  let message = `\\nHi from the Gatsby maintainers! Based on what we see in your site, these coming\nfeatures may help you. All of these can be enabled within gatsby-config.js via\nflags (samples below)`\n\n  notices.forEach(\n    notice =>\n      (message += `\n\n${chalk.bgBlue.bold(notice.experimentIdentifier)} (${notice.umbrellaLink}), ${\n        notice.noticeText\n      }\\n`)\n  )\n\n  return message\n}\n\nexport const showExperimentNotices = (): void => {\n  if (noticesToShow.length > 0) {\n    telemetry.trackCli(`InviteToTryExperiment`)\n    // Store that we're showing the invite.\n    noticesToShow.forEach(notice =>\n      getConfigStore().set(\n        configStoreKey(notice.experimentIdentifier),\n        Date.now()\n      )\n    )\n\n    const message = createNoticeMessage(noticesToShow)\n    reporter.info(message)\n  }\n}\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AAQA,MAAMA,OAAO,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;AAQnC,MAAMC,aAAmC,GAAG,EAAE;AAC9C,MAAMC,cAAc,GAAIC,oBAAoB,IACzC,wBAAuBA,oBAAqB,EAAC;AAEzC,SAASC,gCAAgC,CAC9CD,oBAA4B,EAC5BE,YAAoB,EACpBC,UAAkB,EAClBC,iBAAyB,EACzBC,+BAAuC,GAAGR,OAAO,EACN;EAC3C,MAAMS,sBAAsB,GAAG,IAAAC,+BAAc,GAAE,CAACC,GAAG,CACjDT,cAAc,CAACC,oBAAoB,CAAC,CACrC;EAED,IAAIM,sBAAsB,EAAE;IAC1B,IAAIG,IAAI,CAACC,GAAG,EAAE,GAAGJ,sBAAsB,GAAGD,+BAA+B,EAAE;MACzE,OAAOM,SAAS;IAClB;EACF;EAEA,MAAMC,aAAa,GAAGC,UAAU,CAAC,MAAM;IACrCf,aAAa,CAACgB,IAAI,CAAC;MAAEX,UAAU;MAAED,YAAY;MAAEF;IAAqB,CAAC,CAAC;EACxE,CAAC,EAAEI,iBAAiB,CAAC;EAErB,OAAO,SAASW,kBAAkB,GAAS;IACzCC,YAAY,CAACJ,aAAa,CAAC;EAC7B,CAAC;AACH;AAEO,MAAMK,mBAAmB,GAAIC,OAAO,IAAa;EACtD,IAAIC,OAAO,GAAI;AACjB;AACA,sBAAsB;EAEpBD,OAAO,CAACE,OAAO,CACbC,MAAM,IACHF,OAAO,IAAK;AACnB;AACA,EAAEG,cAAK,CAACC,MAAM,CAACC,IAAI,CAACH,MAAM,CAACrB,oBAAoB,CAAE,KAAIqB,MAAM,CAACnB,YAAa,MACjEmB,MAAM,CAAClB,UACR,IAAI,CACR;EAED,OAAOgB,OAAO;AAChB,CAAC;AAAA;AAEM,MAAMM,qBAAqB,GAAG,MAAY;EAC/C,IAAI3B,aAAa,CAAC4B,MAAM,GAAG,CAAC,EAAE;IAC5BC,wBAAS,CAACC,QAAQ,CAAE,uBAAsB,CAAC;IAC3C;IACA9B,aAAa,CAACsB,OAAO,CAACC,MAAM,IAC1B,IAAAd,+BAAc,GAAE,CAACsB,GAAG,CAClB9B,cAAc,CAACsB,MAAM,CAACrB,oBAAoB,CAAC,EAC3CS,IAAI,CAACC,GAAG,EAAE,CACX,CACF;IAED,MAAMS,OAAO,GAAGF,mBAAmB,CAACnB,aAAa,CAAC;IAClDgC,iBAAQ,CAACC,IAAI,CAACZ,OAAO,CAAC;EACxB;AACF,CAAC;AAAA"}