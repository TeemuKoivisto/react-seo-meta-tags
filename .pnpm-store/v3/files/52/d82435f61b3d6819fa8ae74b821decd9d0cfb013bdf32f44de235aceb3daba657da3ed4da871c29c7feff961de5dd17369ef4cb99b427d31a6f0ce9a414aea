{"version":3,"file":"html.js","names":["FLAG_DIRTY_CLEARED_CACHE","FLAG_DIRTY_NEW_ENTRY","FLAG_DIRTY_DATA_CHANGED","FLAG_DIRTY_STATIC_QUERY_FIRST_RUN","FLAG_DIRTY_STATIC_QUERY_RESULT_CHANGED","FLAG_DIRTY_BROWSER_COMPILATION_HASH","FLAG_DIRTY_SSR_COMPILATION_HASH","initialState","trackedHtmlFiles","Map","slicesProps","bySliceId","byPagePath","bySliceName","browserCompilationHash","ssrCompilationHash","trackedStaticQueryResults","unsafeBuiltinWasUsedInSSR","templateCompilationHashes","pagesThatNeedToStitchSlices","Set","htmlReducer","state","action","type","cacheIsCorrupt","clear","forEach","htmlFile","isDeleted","dirty","path","payload","get","pageDataHash","set","existing","name","props","sliceDataHash","Error","queryType","staticQueryResult","queryHash","staticQueryResultHash","resultHash","pagePath","process","env","GATSBY_SLICES","sliceProps","sliceName","templatePath","templateHash","isSlice","pages","sliceTemplate","stdout","write","JSON","stringify","delete","add","slices","staticQueryHash","staticQueryHashes","sliceNameInfo","values","sliceId","slicePropInfo","slicesDataBySliceId","Object","entries","newListOfSlices","hasChildren","sliceInfo","existingBySliceName","oldListOfSlices","has","size","slicePropsListForThisSliceName","sliceState","htmlPageState"],"sources":["../../../src/redux/reducers/html.ts"],"sourcesContent":["import {\n  ActionsUnion,\n  IGatsbyState,\n  IHtmlFileState,\n  IStaticQueryResultState,\n} from \"../types\"\n\nconst FLAG_DIRTY_CLEARED_CACHE = 0b0000001\nconst FLAG_DIRTY_NEW_ENTRY = 0b0000010\nconst FLAG_DIRTY_DATA_CHANGED = 0b0000100\nconst FLAG_DIRTY_STATIC_QUERY_FIRST_RUN = 0b0001000\nconst FLAG_DIRTY_STATIC_QUERY_RESULT_CHANGED = 0b0010000\nconst FLAG_DIRTY_BROWSER_COMPILATION_HASH = 0b0100000\nconst FLAG_DIRTY_SSR_COMPILATION_HASH = 0b1000000\n\ntype PagePath = string\n\nfunction initialState(): IGatsbyState[\"html\"] {\n  return {\n    trackedHtmlFiles: new Map<PagePath, IHtmlFileState>(),\n    slicesProps: {\n      bySliceId: new Map(),\n      byPagePath: new Map(),\n      bySliceName: new Map(),\n    },\n    browserCompilationHash: ``,\n    ssrCompilationHash: ``,\n    trackedStaticQueryResults: new Map<string, IStaticQueryResultState>(),\n    unsafeBuiltinWasUsedInSSR: false,\n    templateCompilationHashes: {},\n    pagesThatNeedToStitchSlices: new Set(),\n  }\n}\n\nexport function htmlReducer(\n  state: IGatsbyState[\"html\"] = initialState(),\n  action: ActionsUnion\n): IGatsbyState[\"html\"] {\n  switch (action.type) {\n    case `DELETE_CACHE`: {\n      if (action.cacheIsCorrupt) {\n        // `public` doesn't exist so we can start fresh\n        return initialState()\n      } else {\n        // we can't just clear the cache here - we want to keep track of pages, so we mark them all as \"deleted\"\n        // if they are recreated \"isDeleted\" flag will be removed\n        state.browserCompilationHash = ``\n        state.ssrCompilationHash = ``\n        state.templateCompilationHashes = {}\n        state.trackedStaticQueryResults.clear()\n        state.unsafeBuiltinWasUsedInSSR = false\n        state.trackedHtmlFiles.forEach(htmlFile => {\n          htmlFile.isDeleted = true\n          // there was a change somewhere, so just in case we mark those files are dirty as well\n          htmlFile.dirty |= FLAG_DIRTY_CLEARED_CACHE\n        })\n        // slice html don't need to be deleted, they are just cleared\n        state.slicesProps = {\n          bySliceId: new Map(),\n          byPagePath: new Map(),\n          bySliceName: new Map(),\n        }\n        state.pagesThatNeedToStitchSlices = new Set()\n        return state\n      }\n    }\n\n    case `CREATE_PAGE`: {\n      // CREATE_PAGE can be called even if page already exist, so we only want to do anything\n      // if we don't track given page yet or if page is marked as deleted\n      const { path } = action.payload\n\n      let htmlFile = state.trackedHtmlFiles.get(path)\n      if (!htmlFile) {\n        htmlFile = {\n          dirty: FLAG_DIRTY_NEW_ENTRY,\n          isDeleted: false,\n          pageDataHash: ``,\n        }\n        state.trackedHtmlFiles.set(path, htmlFile)\n      } else if (htmlFile.isDeleted) {\n        // page was recreated so we remove `isDeleted` flag\n        // TBD if dirtiness need to change\n        htmlFile.isDeleted = false\n      }\n\n      return state\n    }\n\n    case `CREATE_SLICE`: {\n      const existing = state.slicesProps.bySliceName.get(action.payload.name)\n      if (!existing) {\n        state.slicesProps.bySliceName.set(action.payload.name, {\n          dirty: FLAG_DIRTY_NEW_ENTRY,\n          props: new Set(),\n          sliceDataHash: ``,\n        })\n      }\n      return state\n    }\n\n    case `DELETE_PAGE`: {\n      const { path } = action.payload\n      const htmlFile = state.trackedHtmlFiles.get(path)\n\n      if (!htmlFile) {\n        // invariant\n        throw new Error(\n          `[html reducer] how can I delete page that wasn't created (?)`\n        )\n      }\n\n      htmlFile.isDeleted = true\n      // TBD if dirtiness need to change\n      return state\n    }\n\n    case `PAGE_QUERY_RUN`: {\n      // Despite action name, this action is actually emitted for both page and static queries.\n      // In here we actually only care about static query result (particularly its hash).\n      // We don't care about page query result because we don't actually use page query result\n      // directly when generating html. We care about page-data (which contains page query result).\n      // Handling of page-data that transitively handles page query result is done in handler for\n      // `ADD_PAGE_DATA_STATS` action.\n      if (action.payload.queryType === `static`) {\n        // static query case\n        let staticQueryResult = state.trackedStaticQueryResults.get(\n          action.payload.queryHash\n        )\n        if (!staticQueryResult) {\n          staticQueryResult = {\n            dirty: FLAG_DIRTY_STATIC_QUERY_FIRST_RUN,\n            staticQueryResultHash: action.payload.resultHash,\n          }\n          state.trackedStaticQueryResults.set(\n            action.payload.queryHash,\n            staticQueryResult\n          )\n        } else if (\n          staticQueryResult.staticQueryResultHash !== action.payload.resultHash\n        ) {\n          staticQueryResult.dirty |= FLAG_DIRTY_STATIC_QUERY_RESULT_CHANGED\n          staticQueryResult.staticQueryResultHash = action.payload.resultHash\n        }\n      }\n\n      return state\n    }\n    case `ADD_PAGE_DATA_STATS`: {\n      const htmlFile = state.trackedHtmlFiles.get(action.payload.pagePath)\n      if (!htmlFile) {\n        // invariant\n        throw new Error(\n          `[html reducer] I received event that query for a page finished running, but I'm not aware of the page it ran for (?)`\n        )\n      }\n\n      if (htmlFile.pageDataHash !== action.payload.pageDataHash) {\n        htmlFile.pageDataHash = action.payload.pageDataHash\n        htmlFile.dirty |= FLAG_DIRTY_DATA_CHANGED\n      }\n      return state\n    }\n\n    case `SET_WEBPACK_COMPILATION_HASH`: {\n      if (!(_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES)) {\n        if (state.browserCompilationHash !== action.payload) {\n          state.browserCompilationHash = action.payload\n          state.trackedHtmlFiles.forEach(htmlFile => {\n            htmlFile.dirty |= FLAG_DIRTY_BROWSER_COMPILATION_HASH\n          })\n        }\n      }\n      return state\n    }\n\n    case `ADD_SLICE_DATA_STATS`: {\n      const sliceProps = state.slicesProps.bySliceName.get(\n        action.payload.sliceName\n      )\n      if (!sliceProps) {\n        throw new Error(`no slice props for ${action.payload.sliceName}`)\n      }\n\n      if (sliceProps.sliceDataHash !== action.payload.sliceDataHash) {\n        sliceProps.sliceDataHash = action.payload.sliceDataHash\n        sliceProps.dirty |= FLAG_DIRTY_DATA_CHANGED\n      }\n      return state\n    }\n\n    case `SET_SSR_TEMPLATE_WEBPACK_COMPILATION_HASH`: {\n      if (\n        state.templateCompilationHashes[action.payload.templatePath] !==\n        action.payload.templateHash\n      ) {\n        state.templateCompilationHashes[action.payload.templatePath] =\n          action.payload.templateHash\n\n        if (action.payload.isSlice) {\n          for (const sliceName of action.payload.pages) {\n            const sliceTemplate = state.slicesProps.bySliceName.get(sliceName)\n            if (sliceTemplate) {\n              sliceTemplate.dirty |= FLAG_DIRTY_SSR_COMPILATION_HASH\n            }\n          }\n        } else {\n          if (action.payload.pages) {\n            action.payload.pages.forEach(pagePath => {\n              const htmlFile = state.trackedHtmlFiles.get(pagePath)\n              if (htmlFile) {\n                htmlFile.dirty |= FLAG_DIRTY_SSR_COMPILATION_HASH\n              }\n            })\n          } else {\n            process.stdout.write(\n              `---no pages for:\\n${JSON.stringify(action.payload, null, 2)}\\n`\n            )\n          }\n        }\n      }\n\n      return state\n    }\n\n    case `SET_SSR_WEBPACK_COMPILATION_HASH`: {\n      if (state.ssrCompilationHash !== action.payload) {\n        state.ssrCompilationHash = action.payload\n        // we will mark every html file as dirty, so we can safely reset\n        // unsafeBuiltinWasUsedInSSR flag, which might be set again if\n        // ssr bundle continue to use those\n        state.unsafeBuiltinWasUsedInSSR = false\n        state.trackedHtmlFiles.forEach(htmlFile => {\n          htmlFile.dirty |= FLAG_DIRTY_SSR_COMPILATION_HASH\n        })\n      }\n      return state\n    }\n\n    case `HTML_REMOVED`: {\n      state.trackedHtmlFiles.delete(action.payload)\n      return state\n    }\n\n    case `HTML_TRACKED_PAGES_CLEANUP`: {\n      // this is to cleanup variants of page paths that don't result in artifacts deletion\n      // but page path should be pruned for cases like page changing path from \"/foo\" to \"/foo/\" (or vice versa)\n      // where produced artifacts filenames are the same and we don't want to delete them after building,\n      // but we still want to cleanup state here.\n      for (const path of action.payload) {\n        state.trackedHtmlFiles.delete(path)\n      }\n      return state\n    }\n\n    case `HTML_GENERATED`: {\n      for (const path of action.payload) {\n        const htmlFile = state.trackedHtmlFiles.get(path)\n        if (htmlFile) {\n          htmlFile.dirty = 0\n          // if we regenerated html, slice placeholders will be empty and we will have to fill\n          // them in, so we are marking that page for stitching\n          state.pagesThatNeedToStitchSlices.add(path)\n        }\n      }\n\n      return state\n    }\n\n    case `HTML_MARK_DIRTY_BECAUSE_STATIC_QUERY_RESULT_CHANGED`: {\n      // mark pages as dirty\n      for (const path of action.payload.pages) {\n        const htmlFile = state.trackedHtmlFiles.get(path)\n        if (htmlFile) {\n          htmlFile.dirty |= FLAG_DIRTY_STATIC_QUERY_RESULT_CHANGED\n        }\n      }\n\n      if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n        // mark slices as dirty\n        for (const sliceName of action.payload.slices) {\n          const sliceProps = state.slicesProps.bySliceName.get(sliceName)\n          if (sliceProps) {\n            sliceProps.dirty |= FLAG_DIRTY_STATIC_QUERY_RESULT_CHANGED\n          }\n        }\n      }\n\n      // mark static queries as not dirty anymore (we flushed their dirtiness into pages)\n      for (const staticQueryHash of action.payload.staticQueryHashes) {\n        const staticQueryResult =\n          state.trackedStaticQueryResults.get(staticQueryHash)\n        if (staticQueryResult) {\n          staticQueryResult.dirty = 0\n        }\n      }\n\n      if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n        // loop through slice names and mark their slice props as dirty\n        for (const sliceNameInfo of state.slicesProps.bySliceName.values()) {\n          if (sliceNameInfo.dirty) {\n            for (const sliceId of sliceNameInfo.props) {\n              const slicePropInfo = state.slicesProps.bySliceId.get(sliceId)\n\n              if (slicePropInfo) {\n                slicePropInfo.dirty |= sliceNameInfo.dirty\n              }\n            }\n            sliceNameInfo.dirty = 0\n          }\n        }\n      }\n\n      return state\n    }\n\n    case `SSR_USED_UNSAFE_BUILTIN`: {\n      state.unsafeBuiltinWasUsedInSSR = true\n      return state\n    }\n\n    case `SET_SLICES_PROPS`: {\n      for (const [pagePath, slicesDataBySliceId] of Object.entries(\n        action.payload\n      )) {\n        const newListOfSlices = new Set<string>()\n        for (const [\n          sliceId,\n          { props, sliceName, hasChildren },\n        ] of Object.entries(slicesDataBySliceId)) {\n          newListOfSlices.add(sliceId)\n\n          let sliceInfo = state.slicesProps.bySliceId.get(sliceId)\n          if (!sliceInfo) {\n            sliceInfo = {\n              pages: new Set([pagePath]),\n              props,\n              sliceName,\n              hasChildren,\n              dirty: FLAG_DIRTY_NEW_ENTRY,\n            }\n            state.slicesProps.bySliceId.set(sliceId, sliceInfo)\n\n            let existingBySliceName =\n              state.slicesProps.bySliceName.get(sliceName)\n            if (!existingBySliceName) {\n              existingBySliceName = {\n                dirty: 0,\n                sliceDataHash: ``,\n                props: new Set<string>(),\n              }\n              state.slicesProps.bySliceName.set(sliceName, existingBySliceName)\n            }\n\n            existingBySliceName.props.add(sliceId)\n          } else {\n            sliceInfo.pages.add(pagePath)\n\n            if (hasChildren) {\n              sliceInfo.hasChildren = true\n            }\n          }\n        }\n\n        const oldListOfSlices = state.slicesProps.byPagePath.get(pagePath)\n        if (oldListOfSlices) {\n          for (const sliceId of oldListOfSlices) {\n            if (!newListOfSlices.has(sliceId)) {\n              oldListOfSlices.delete(sliceId)\n              const sliceInfo = state.slicesProps.bySliceId.get(sliceId)\n\n              if (sliceInfo) {\n                sliceInfo.pages.delete(pagePath)\n              }\n            }\n          }\n        }\n\n        state.slicesProps.byPagePath.set(pagePath, newListOfSlices)\n      }\n\n      return state\n    }\n\n    case `SLICES_PROPS_REMOVE_STALE`: {\n      for (const [\n        sliceId,\n        { pages, sliceName },\n      ] of state.slicesProps.bySliceId.entries()) {\n        if (pages.size <= 0) {\n          state.slicesProps.bySliceId.delete(sliceId)\n          const slicePropsListForThisSliceName =\n            state.slicesProps.bySliceName.get(sliceName)\n          if (slicePropsListForThisSliceName) {\n            slicePropsListForThisSliceName.props.delete(sliceId)\n          }\n        }\n      }\n      return state\n    }\n\n    case `SLICES_PROPS_RENDERED`: {\n      for (const { sliceId } of action.payload) {\n        const sliceState = state.slicesProps.bySliceId.get(sliceId)\n        if (sliceState) {\n          sliceState.dirty = 0\n          for (const pagePath of sliceState.pages) {\n            state.pagesThatNeedToStitchSlices.add(pagePath)\n          }\n        }\n      }\n      return state\n    }\n\n    case `SLICES_SCRIPTS_REGENERATED`: {\n      for (const [pagePath, htmlPageState] of state.trackedHtmlFiles) {\n        if (!htmlPageState.isDeleted) {\n          state.pagesThatNeedToStitchSlices.add(pagePath)\n        }\n      }\n      return state\n    }\n\n    case `SLICES_STITCHED`: {\n      state.pagesThatNeedToStitchSlices.clear()\n      return state\n    }\n  }\n  return state\n}\n"],"mappings":"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"}