{"version":3,"file":"post-bootstrap.js","names":["postBootstrap","parentSpan","deferNodeMutation","activity","reporter","activityTimer","start","apiRunnerNode","span","end","info","stripIndent","process","uptime","toFixed","emitter","emit","store","dispatch","actions","setProgramStatus"],"sources":["../../src/services/post-bootstrap.ts"],"sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\nimport { emitter, store } from \"../redux\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { IDataLayerContext } from \"../state-machines/data-layer/types\"\nimport { actions } from \"../redux/actions\"\n\nexport async function postBootstrap({\n  parentSpan,\n  deferNodeMutation,\n}: Partial<IDataLayerContext>): Promise<void> {\n  const activity = reporter.activityTimer(`onPostBootstrap`, {\n    parentSpan,\n  })\n  activity.start()\n  await apiRunnerNode(`onPostBootstrap`, {\n    parentSpan: activity.span,\n    deferNodeMutation,\n  })\n  activity.end()\n\n  reporter.info(reporter.stripIndent`\n    bootstrap finished - ${process.uptime().toFixed(3)}s\n  `)\n  emitter.emit(`BOOTSTRAP_FINISHED`, {})\n  store.dispatch(actions.setProgramStatus(`BOOTSTRAP_FINISHED`))\n}\n"],"mappings":";;;;;AAAA;AACA;AACA;AAEA;AAEO,eAAeA,aAAa,CAAC;EAClCC,UAAU;EACVC;AAC0B,CAAC,EAAiB;EAC5C,MAAMC,QAAQ,GAAGC,iBAAQ,CAACC,aAAa,CAAE,iBAAgB,EAAE;IACzDJ;EACF,CAAC,CAAC;EACFE,QAAQ,CAACG,KAAK,EAAE;EAChB,MAAM,IAAAC,sBAAa,EAAE,iBAAgB,EAAE;IACrCN,UAAU,EAAEE,QAAQ,CAACK,IAAI;IACzBN;EACF,CAAC,CAAC;EACFC,QAAQ,CAACM,GAAG,EAAE;EAEdL,iBAAQ,CAACM,IAAI,CAACN,iBAAQ,CAACO,WAAY;AACrC,2BAA2BC,OAAO,CAACC,MAAM,EAAE,CAACC,OAAO,CAAC,CAAC,CAAE;AACvD,GAAG,CAAC;EACFC,cAAO,CAACC,IAAI,CAAE,oBAAmB,EAAE,CAAC,CAAC,CAAC;EACtCC,YAAK,CAACC,QAAQ,CAACC,gBAAO,CAACC,gBAAgB,CAAE,oBAAmB,CAAC,CAAC;AAChE"}