{"version":3,"file":"component---src-pages-blog-tsx-8936c0af9ccb18568b76.js","mappings":"6MAmBA,MAmDMA,EAAOC,EAAAA,QAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4EAMtB,UAzDkBC,IAA+B,IAA9B,KAAEC,EAAI,SAAEC,GAAiBF,EAC1C,MAAMG,EAAOF,EAAKE,KACZC,EAAQH,EAAKI,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENC,EAAAA,cAACC,EAAAA,EAAM,CAACN,KAAMA,GACZK,EAAAA,cAAA,SAAG,8JASPA,EAAAA,cAACC,EAAAA,EAAM,CAACN,KAAMF,EAAKE,MACjBK,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAACZ,EAAI,KACFQ,EAAMM,KAAIC,IACT,MAAMC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACEP,EAAAA,cAAA,MAAIQ,IAAKL,EAAKG,OAAOC,MACnBP,EAAAA,cAAA,WAASS,UAAU,iBAAiBC,WAAS,EAACC,SAAS,6BACrDX,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAIV,EAAKG,OAAOC,KAAMO,SAAS,OACnCd,EAAAA,cAAA,QAAMc,SAAS,YAAYV,KAG/BJ,EAAAA,cAAA,aAAQG,EAAKE,YAAYU,gBAE3Bf,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEgB,wBAAyB,CACvBC,OAAQd,EAAKE,YAAYa,aAAef,EAAKgB,SAE/CL,SAAS,kBAIZ,MAKN,EAiBN,MAAMM,EAAOA,IAAMpB,EAAAA,cAACqB,EAAAA,EAAG,CAACjB,MAAM,a","sources":["webpack://site/./src/pages/blog.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport { Layout } from '../components/Layout'\nimport SEO from '../components/SEO'\n\nimport { SiteData } from '../types/graphql'\n\ninterface Props {\n  data: {\n    site: SiteData\n    allMarkdownRemark: {\n      nodes: any[]\n    }\n  }\n  location: any\n}\n\nconst BlogIndex = ({ data, location }: Props) => {\n  const site = data.site\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout site={site}>\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the directory you specified\n          for the \"gatsby-source-filesystem\" plugin in gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout site={data.site}>\n      <div>\n        <h1>My blog posts</h1>\n        <List>\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n            return (\n              <li key={post.fields.slug}>\n                <article className=\"post-list-item\" itemScope itemType=\"http://schema.org/Article\">\n                  <header>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <small>{post.frontmatter.datePublished}</small>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </li>\n            )\n          })}\n        </List>\n      </div>\n    </Layout>\n  )\n}\n\nconst List = styled.ol`\n  list-style: none;\n  margin-top: 2rem;\n  margin-bottom: 4rem;\n`\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <SEO title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      ...SiteData\n    }\n    allMarkdownRemark(sort: { frontmatter: { datePublished: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          datePublished(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteralLoose","_ref","data","location","site","posts","allMarkdownRemark","nodes","length","React","Layout","map","post","title","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","datePublished","dangerouslySetInnerHTML","__html","description","excerpt","Head","SEO"],"sourceRoot":""}